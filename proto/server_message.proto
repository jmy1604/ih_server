syntax = "proto3";
package msg.server_message;

enum MSGID {
	NONE						= 0;
	H2C_HAll_SERVER_REGISTER 	= 20000;
	H2C_HALL_SERVER_UNREDISTER 	= 20001;
	
	C2H_LOGIN_SERVER_LIST 		= 20010;
	C2H_NEW_LOGIN_SERVER_ADD 	= 20011;
	C2H_LOGIN_SERVER_REMOVE 	= 20012;
	
	H2L_HALL_SERVER_REGISTER    = 21000;
	H2L_HALL_SERVER_UNREGISTER	= 21001;
	L2H_DISCONNECT_NOTIFY		= 21002;
	L2H_SYNC_ACCOUNT_TOKEN		= 21003;
	
	L2C_LOGIN_SERVER_REGISTER	= 21004;
	L2C_LOGIN_SERVER_UNREGISTER	= 21005;
	L2C_GET_PLAYER_ACC_INFO		= 21006;
	
	C2L_PLAYER_ACC_INFO			= 21007;
}

/**************************** common message struct define ******************************/

message LoginServerInfo {
	int32 ServerId = 1; // 服务器Id
	string ServerName = 2; // 服务器名称
	string ListenGameIP = 3; // 监听GameServer的IP地址
	string ListenClientIP = 4; // 监听客户端的IP地址
}

message PlayerBaseInfo {
	int32 Lvl = 1; // 我的等级
	int32 Exp = 2; // 我的经验
	int32 CurMaxStage = 3; // 最大关卡数目
	string Name = 4; // 玩家名称
	int32 Icon = 5; // 玩家图标
	string CustomIcon = 6; // 玩家自定义图标
}

// 玩家某一个关卡的信息
message PlayerStageInfo {
	int32 PlayerId = 1; // 玩家Id
	int32 Score = 2; // 我的积分
	string Name = 3; // 玩家名称
	int32 Lvl = 4; // 玩家等级
	string Icon = 5; // 玩家图标
	string CustomIcon = 6; // 玩家自定义图标
}

/*************************************** end ********************************************/

/**************************** hall_server and center server ****************************/

/// hall->center hallServer注册
message H2CHallServerRegister {
	int32 ServerId = 1; // 服务器Id
	string ServerName = 2; // 服务器名称
	string ListenRoomIP = 3; // 监听Room的IP
	string ListenClientIP = 4; // 监听客户端的地址
}

/// hall->center hallServer注销
message H2CHallServerUnRegister {
	int32 ServerId = 1; // 服务器Id
}

// center->hall 同步服务器列表(仅仅会在收到注册消息的时候发这条消息)
message C2HLoginServerList {
	repeated LoginServerInfo ServerList = 1; // 登录服务器列表信息
}

// center->hall 新的得LoginServer增加
message C2HNewLoginServerAdd {
	LoginServerInfo Server = 1; // 登录服务器信息
}

// center->hall HallServer断开连接
message C2HLoginServerRemove {
	int32 ServerId = 1; // 登录服务器ID
}

/*************************************** end ********************************************/

/**************************** hall_server and login server ******************************/

/// hall->login hall注册
message H2LHallServerRegister {
	int32 ServerId = 1; // 服务器Id
	string ServerName = 2; // 服务器名称
	string ListenClientIP = 3; // 监听客户端的地址
}

/// hall->login hall注销
message H2LHallServerUnRegister {
	int32 ServerId = 1; // 服务器Id
	int32 Reason = 2; // 断开原因
}

/// login->hall 强制断开
message L2HDissconnectNotify {
	int32 Reason = 1; // 断开原因
}

/// login->hall 同步账号临时密码
message L2HSyncAccountToken {
	string Account = 1; // 账号
	string Token = 2; // 临时token
	int64 PlayerId = 3; // 玩家Id
}

/*************************************** end ********************************************/

/**************************** login_server and center server ****************************/

/// Login->Center Login注册
message L2CLoginServerRegister {
	int32 ServerId = 1; // 服务器Id
	string ServerName = 2; // 服务器名称
	string ListenGameIP = 3; // 监听MatchServer的IP
	string ListenClientIP = 4; // 监听Client的IP
}

/// Login->Center Login注销
message L2CLoginServerUnRegister {
	int32 ServerId = 1; // 服务器Id
	int32 Reason = 2; // 断开原因
}

/// Login->Center 获取玩家账号Id和所在大厅信息
message L2CGetPlayerAccInfo {
	string Account = 1; // 玩家账号
}

/// Center->Login 玩家账号信息回复
message C2LPlayerAccInfo {
	string Account = 1; // 玩家账号
	int64 PlayerId = 2; // 玩家Id
	int32 HallId = 3; // 大厅Id
	string HallIP = 4; // 大厅IP地址
	int32 IfForbidLogin = 5; // 是否被封了
	string ForbidEndTime = 6; // 封号截至时间
}

/*************************************** end ********************************************/

/************************************** 玩家相关 *****************************************/

/// 玩家上线
message SetPlayerOnOffline {
	int32 PlayerId = 1; // 玩家Id
	int32 TongId = 2; // 帮会Id
	int32 OnOffLine = 3; // 1位上线 0为下线
}

/*************************************** end ********************************************/


/************************************** Gm相关 *****************************************/

// center->hall gm命令
message C2HGmCommand {
	string Command = 1; // gm命令字串
	int32 SessionId = 2; // 会话Id
}

// hall->center 返回执行结果
message H2CGmResult {
	int32 SessionId = 1; // 会话Id
	string Result = 2; // 执行结果
}

// center->hall 查询物品某个玩家的物品
message C2HItemQuery {
	int32 PlayerId = 1; // 玩家Id
	int32 SessionId = 2; // 会话Id
}

message IdNum {
	int32 Id = 1; // 道具Id
	int32 Num = 2; // 道具数目
}

// hall->center 回复物品查询结果
message H2CItemQuery {
	int32 SessionId = 1; // 会话Id
	repeated IdNum Items = 2; // 道具列表
}

// hall->center 获取当前服务器奖励信息
message H2CGetServerReward {
	
}

// center->hall 增加全服奖励信息
message C2HAddServerReward {
	int32 RewardId = 1; // 奖励Id
	string Channel = 2; // 奖励渠道
	int32 EndUnix = 3; // 结束时间
	repeated IdNum Items = 4; // 奖励物品信息
	string Content = 5; // 奖励邮件内容
}

// center->hall 同步当前全服奖励信息
message C2HSyncServerReward {
	repeated C2HAddServerReward Rewards = 1; // 奖励
}

/*************************************** end ********************************************/
// Code generated by protoc-gen-go. DO NOT EDIT.
// source: server_message.proto

/*
Package msg_server_message is a generated protocol buffer package.

It is generated from these files:
	server_message.proto

It has these top-level messages:
	LoginServerInfo
	PlayerBaseInfo
	PlayerStageInfo
	H2CHallServerRegister
	H2CHallServerUnRegister
	C2HLoginServerList
	C2HNewLoginServerAdd
	C2HLoginServerRemove
	H2LHallServerRegister
	H2LHallServerUnRegister
	L2HDissconnectNotify
	L2HSyncAccountToken
	L2CLoginServerRegister
	L2CLoginServerUnRegister
	L2CGetPlayerAccInfo
	C2LPlayerAccInfo
	SetPlayerOnOffline
	C2HGmCommand
	H2CGmResult
	C2HItemQuery
	IdNum
	H2CItemQuery
	H2CGetServerReward
	C2HAddServerReward
	C2HSyncServerReward
*/
package msg_server_message

import proto "github.com/golang/protobuf/proto"
import fmt "fmt"
import math "math"

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion2 // please upgrade the proto package

type MSGID int32

const (
	MSGID_NONE                        MSGID = 0
	MSGID_H2C_HAll_SERVER_REGISTER    MSGID = 20000
	MSGID_H2C_HALL_SERVER_UNREDISTER  MSGID = 20001
	MSGID_C2H_LOGIN_SERVER_LIST       MSGID = 20010
	MSGID_C2H_NEW_LOGIN_SERVER_ADD    MSGID = 20011
	MSGID_C2H_LOGIN_SERVER_REMOVE     MSGID = 20012
	MSGID_H2L_HALL_SERVER_REGISTER    MSGID = 21000
	MSGID_H2L_HALL_SERVER_UNREGISTER  MSGID = 21001
	MSGID_L2H_DISCONNECT_NOTIFY       MSGID = 21002
	MSGID_L2H_SYNC_ACCOUNT_TOKEN      MSGID = 21003
	MSGID_L2C_LOGIN_SERVER_REGISTER   MSGID = 21004
	MSGID_L2C_LOGIN_SERVER_UNREGISTER MSGID = 21005
	MSGID_L2C_GET_PLAYER_ACC_INFO     MSGID = 21006
	MSGID_C2L_PLAYER_ACC_INFO         MSGID = 21007
)

var MSGID_name = map[int32]string{
	0:     "NONE",
	20000: "H2C_HAll_SERVER_REGISTER",
	20001: "H2C_HALL_SERVER_UNREDISTER",
	20010: "C2H_LOGIN_SERVER_LIST",
	20011: "C2H_NEW_LOGIN_SERVER_ADD",
	20012: "C2H_LOGIN_SERVER_REMOVE",
	21000: "H2L_HALL_SERVER_REGISTER",
	21001: "H2L_HALL_SERVER_UNREGISTER",
	21002: "L2H_DISCONNECT_NOTIFY",
	21003: "L2H_SYNC_ACCOUNT_TOKEN",
	21004: "L2C_LOGIN_SERVER_REGISTER",
	21005: "L2C_LOGIN_SERVER_UNREGISTER",
	21006: "L2C_GET_PLAYER_ACC_INFO",
	21007: "C2L_PLAYER_ACC_INFO",
}
var MSGID_value = map[string]int32{
	"NONE": 0,
	"H2C_HAll_SERVER_REGISTER":    20000,
	"H2C_HALL_SERVER_UNREDISTER":  20001,
	"C2H_LOGIN_SERVER_LIST":       20010,
	"C2H_NEW_LOGIN_SERVER_ADD":    20011,
	"C2H_LOGIN_SERVER_REMOVE":     20012,
	"H2L_HALL_SERVER_REGISTER":    21000,
	"H2L_HALL_SERVER_UNREGISTER":  21001,
	"L2H_DISCONNECT_NOTIFY":       21002,
	"L2H_SYNC_ACCOUNT_TOKEN":      21003,
	"L2C_LOGIN_SERVER_REGISTER":   21004,
	"L2C_LOGIN_SERVER_UNREGISTER": 21005,
	"L2C_GET_PLAYER_ACC_INFO":     21006,
	"C2L_PLAYER_ACC_INFO":         21007,
}

func (x MSGID) String() string {
	return proto.EnumName(MSGID_name, int32(x))
}
func (MSGID) EnumDescriptor() ([]byte, []int) { return fileDescriptor0, []int{0} }

type LoginServerInfo struct {
	ServerId       int32  `protobuf:"varint,1,opt,name=ServerId" json:"ServerId,omitempty"`
	ServerName     string `protobuf:"bytes,2,opt,name=ServerName" json:"ServerName,omitempty"`
	ListenMatchIP  string `protobuf:"bytes,3,opt,name=ListenMatchIP" json:"ListenMatchIP,omitempty"`
	ListenClientIP string `protobuf:"bytes,4,opt,name=ListenClientIP" json:"ListenClientIP,omitempty"`
}

func (m *LoginServerInfo) Reset()                    { *m = LoginServerInfo{} }
func (m *LoginServerInfo) String() string            { return proto.CompactTextString(m) }
func (*LoginServerInfo) ProtoMessage()               {}
func (*LoginServerInfo) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{0} }

func (m *LoginServerInfo) GetServerId() int32 {
	if m != nil {
		return m.ServerId
	}
	return 0
}

func (m *LoginServerInfo) GetServerName() string {
	if m != nil {
		return m.ServerName
	}
	return ""
}

func (m *LoginServerInfo) GetListenMatchIP() string {
	if m != nil {
		return m.ListenMatchIP
	}
	return ""
}

func (m *LoginServerInfo) GetListenClientIP() string {
	if m != nil {
		return m.ListenClientIP
	}
	return ""
}

type PlayerBaseInfo struct {
	Lvl         int32  `protobuf:"varint,1,opt,name=Lvl" json:"Lvl,omitempty"`
	Exp         int32  `protobuf:"varint,2,opt,name=Exp" json:"Exp,omitempty"`
	CurMaxStage int32  `protobuf:"varint,3,opt,name=CurMaxStage" json:"CurMaxStage,omitempty"`
	Name        string `protobuf:"bytes,4,opt,name=Name" json:"Name,omitempty"`
	Icon        int32  `protobuf:"varint,5,opt,name=Icon" json:"Icon,omitempty"`
	CustomIcon  string `protobuf:"bytes,6,opt,name=CustomIcon" json:"CustomIcon,omitempty"`
}

func (m *PlayerBaseInfo) Reset()                    { *m = PlayerBaseInfo{} }
func (m *PlayerBaseInfo) String() string            { return proto.CompactTextString(m) }
func (*PlayerBaseInfo) ProtoMessage()               {}
func (*PlayerBaseInfo) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{1} }

func (m *PlayerBaseInfo) GetLvl() int32 {
	if m != nil {
		return m.Lvl
	}
	return 0
}

func (m *PlayerBaseInfo) GetExp() int32 {
	if m != nil {
		return m.Exp
	}
	return 0
}

func (m *PlayerBaseInfo) GetCurMaxStage() int32 {
	if m != nil {
		return m.CurMaxStage
	}
	return 0
}

func (m *PlayerBaseInfo) GetName() string {
	if m != nil {
		return m.Name
	}
	return ""
}

func (m *PlayerBaseInfo) GetIcon() int32 {
	if m != nil {
		return m.Icon
	}
	return 0
}

func (m *PlayerBaseInfo) GetCustomIcon() string {
	if m != nil {
		return m.CustomIcon
	}
	return ""
}

// 玩家某一个关卡的信息
type PlayerStageInfo struct {
	PlayerId   int32  `protobuf:"varint,1,opt,name=PlayerId" json:"PlayerId,omitempty"`
	Score      int32  `protobuf:"varint,2,opt,name=Score" json:"Score,omitempty"`
	Name       string `protobuf:"bytes,3,opt,name=Name" json:"Name,omitempty"`
	Lvl        int32  `protobuf:"varint,4,opt,name=Lvl" json:"Lvl,omitempty"`
	Icon       string `protobuf:"bytes,5,opt,name=Icon" json:"Icon,omitempty"`
	CustomIcon string `protobuf:"bytes,6,opt,name=CustomIcon" json:"CustomIcon,omitempty"`
}

func (m *PlayerStageInfo) Reset()                    { *m = PlayerStageInfo{} }
func (m *PlayerStageInfo) String() string            { return proto.CompactTextString(m) }
func (*PlayerStageInfo) ProtoMessage()               {}
func (*PlayerStageInfo) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{2} }

func (m *PlayerStageInfo) GetPlayerId() int32 {
	if m != nil {
		return m.PlayerId
	}
	return 0
}

func (m *PlayerStageInfo) GetScore() int32 {
	if m != nil {
		return m.Score
	}
	return 0
}

func (m *PlayerStageInfo) GetName() string {
	if m != nil {
		return m.Name
	}
	return ""
}

func (m *PlayerStageInfo) GetLvl() int32 {
	if m != nil {
		return m.Lvl
	}
	return 0
}

func (m *PlayerStageInfo) GetIcon() string {
	if m != nil {
		return m.Icon
	}
	return ""
}

func (m *PlayerStageInfo) GetCustomIcon() string {
	if m != nil {
		return m.CustomIcon
	}
	return ""
}

// / hall->center hallServer注册
type H2CHallServerRegister struct {
	ServerId       int32  `protobuf:"varint,1,opt,name=ServerId" json:"ServerId,omitempty"`
	ServerName     string `protobuf:"bytes,2,opt,name=ServerName" json:"ServerName,omitempty"`
	ListenRoomIP   string `protobuf:"bytes,3,opt,name=ListenRoomIP" json:"ListenRoomIP,omitempty"`
	ListenClientIP string `protobuf:"bytes,4,opt,name=ListenClientIP" json:"ListenClientIP,omitempty"`
}

func (m *H2CHallServerRegister) Reset()                    { *m = H2CHallServerRegister{} }
func (m *H2CHallServerRegister) String() string            { return proto.CompactTextString(m) }
func (*H2CHallServerRegister) ProtoMessage()               {}
func (*H2CHallServerRegister) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{3} }

func (m *H2CHallServerRegister) GetServerId() int32 {
	if m != nil {
		return m.ServerId
	}
	return 0
}

func (m *H2CHallServerRegister) GetServerName() string {
	if m != nil {
		return m.ServerName
	}
	return ""
}

func (m *H2CHallServerRegister) GetListenRoomIP() string {
	if m != nil {
		return m.ListenRoomIP
	}
	return ""
}

func (m *H2CHallServerRegister) GetListenClientIP() string {
	if m != nil {
		return m.ListenClientIP
	}
	return ""
}

// / hall->center hallServer注销
type H2CHallServerUnRegister struct {
	ServerId int32 `protobuf:"varint,1,opt,name=ServerId" json:"ServerId,omitempty"`
}

func (m *H2CHallServerUnRegister) Reset()                    { *m = H2CHallServerUnRegister{} }
func (m *H2CHallServerUnRegister) String() string            { return proto.CompactTextString(m) }
func (*H2CHallServerUnRegister) ProtoMessage()               {}
func (*H2CHallServerUnRegister) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{4} }

func (m *H2CHallServerUnRegister) GetServerId() int32 {
	if m != nil {
		return m.ServerId
	}
	return 0
}

// center->hall 同步服务器列表(仅仅会在收到注册消息的时候发这条消息)
type C2HLoginServerList struct {
	ServerList []*LoginServerInfo `protobuf:"bytes,1,rep,name=ServerList" json:"ServerList,omitempty"`
}

func (m *C2HLoginServerList) Reset()                    { *m = C2HLoginServerList{} }
func (m *C2HLoginServerList) String() string            { return proto.CompactTextString(m) }
func (*C2HLoginServerList) ProtoMessage()               {}
func (*C2HLoginServerList) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{5} }

func (m *C2HLoginServerList) GetServerList() []*LoginServerInfo {
	if m != nil {
		return m.ServerList
	}
	return nil
}

// center->hall 新的得LoginServer增加
type C2HNewLoginServerAdd struct {
	Server *LoginServerInfo `protobuf:"bytes,1,opt,name=Server" json:"Server,omitempty"`
}

func (m *C2HNewLoginServerAdd) Reset()                    { *m = C2HNewLoginServerAdd{} }
func (m *C2HNewLoginServerAdd) String() string            { return proto.CompactTextString(m) }
func (*C2HNewLoginServerAdd) ProtoMessage()               {}
func (*C2HNewLoginServerAdd) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{6} }

func (m *C2HNewLoginServerAdd) GetServer() *LoginServerInfo {
	if m != nil {
		return m.Server
	}
	return nil
}

// center->hall HallServer断开连接
type C2HLoginServerRemove struct {
	ServerId int32 `protobuf:"varint,1,opt,name=ServerId" json:"ServerId,omitempty"`
}

func (m *C2HLoginServerRemove) Reset()                    { *m = C2HLoginServerRemove{} }
func (m *C2HLoginServerRemove) String() string            { return proto.CompactTextString(m) }
func (*C2HLoginServerRemove) ProtoMessage()               {}
func (*C2HLoginServerRemove) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{7} }

func (m *C2HLoginServerRemove) GetServerId() int32 {
	if m != nil {
		return m.ServerId
	}
	return 0
}

// / hall->login hall注册
type H2LHallServerRegister struct {
	ServerId       int32  `protobuf:"varint,1,opt,name=ServerId" json:"ServerId,omitempty"`
	ServerName     string `protobuf:"bytes,2,opt,name=ServerName" json:"ServerName,omitempty"`
	ListenClientIP string `protobuf:"bytes,3,opt,name=ListenClientIP" json:"ListenClientIP,omitempty"`
}

func (m *H2LHallServerRegister) Reset()                    { *m = H2LHallServerRegister{} }
func (m *H2LHallServerRegister) String() string            { return proto.CompactTextString(m) }
func (*H2LHallServerRegister) ProtoMessage()               {}
func (*H2LHallServerRegister) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{8} }

func (m *H2LHallServerRegister) GetServerId() int32 {
	if m != nil {
		return m.ServerId
	}
	return 0
}

func (m *H2LHallServerRegister) GetServerName() string {
	if m != nil {
		return m.ServerName
	}
	return ""
}

func (m *H2LHallServerRegister) GetListenClientIP() string {
	if m != nil {
		return m.ListenClientIP
	}
	return ""
}

// / hall->login hall注销
type H2LHallServerUnRegister struct {
	ServerId int32 `protobuf:"varint,1,opt,name=ServerId" json:"ServerId,omitempty"`
	Reason   int32 `protobuf:"varint,2,opt,name=Reason" json:"Reason,omitempty"`
}

func (m *H2LHallServerUnRegister) Reset()                    { *m = H2LHallServerUnRegister{} }
func (m *H2LHallServerUnRegister) String() string            { return proto.CompactTextString(m) }
func (*H2LHallServerUnRegister) ProtoMessage()               {}
func (*H2LHallServerUnRegister) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{9} }

func (m *H2LHallServerUnRegister) GetServerId() int32 {
	if m != nil {
		return m.ServerId
	}
	return 0
}

func (m *H2LHallServerUnRegister) GetReason() int32 {
	if m != nil {
		return m.Reason
	}
	return 0
}

// / login->hall 强制断开
type L2HDissconnectNotify struct {
	Reason int32 `protobuf:"varint,1,opt,name=Reason" json:"Reason,omitempty"`
}

func (m *L2HDissconnectNotify) Reset()                    { *m = L2HDissconnectNotify{} }
func (m *L2HDissconnectNotify) String() string            { return proto.CompactTextString(m) }
func (*L2HDissconnectNotify) ProtoMessage()               {}
func (*L2HDissconnectNotify) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{10} }

func (m *L2HDissconnectNotify) GetReason() int32 {
	if m != nil {
		return m.Reason
	}
	return 0
}

// / login->hall 同步账号临时密码
type L2HSyncAccountToken struct {
	Account  string `protobuf:"bytes,1,opt,name=Account" json:"Account,omitempty"`
	Token    string `protobuf:"bytes,2,opt,name=Token" json:"Token,omitempty"`
	PlayerId int64  `protobuf:"varint,3,opt,name=PlayerId" json:"PlayerId,omitempty"`
}

func (m *L2HSyncAccountToken) Reset()                    { *m = L2HSyncAccountToken{} }
func (m *L2HSyncAccountToken) String() string            { return proto.CompactTextString(m) }
func (*L2HSyncAccountToken) ProtoMessage()               {}
func (*L2HSyncAccountToken) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{11} }

func (m *L2HSyncAccountToken) GetAccount() string {
	if m != nil {
		return m.Account
	}
	return ""
}

func (m *L2HSyncAccountToken) GetToken() string {
	if m != nil {
		return m.Token
	}
	return ""
}

func (m *L2HSyncAccountToken) GetPlayerId() int64 {
	if m != nil {
		return m.PlayerId
	}
	return 0
}

// / Login->Center Login注册
type L2CLoginServerRegister struct {
	ServerId       int32  `protobuf:"varint,1,opt,name=ServerId" json:"ServerId,omitempty"`
	ServerName     string `protobuf:"bytes,2,opt,name=ServerName" json:"ServerName,omitempty"`
	ListenMatchIP  string `protobuf:"bytes,3,opt,name=ListenMatchIP" json:"ListenMatchIP,omitempty"`
	ListenClientIP string `protobuf:"bytes,4,opt,name=ListenClientIP" json:"ListenClientIP,omitempty"`
}

func (m *L2CLoginServerRegister) Reset()                    { *m = L2CLoginServerRegister{} }
func (m *L2CLoginServerRegister) String() string            { return proto.CompactTextString(m) }
func (*L2CLoginServerRegister) ProtoMessage()               {}
func (*L2CLoginServerRegister) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{12} }

func (m *L2CLoginServerRegister) GetServerId() int32 {
	if m != nil {
		return m.ServerId
	}
	return 0
}

func (m *L2CLoginServerRegister) GetServerName() string {
	if m != nil {
		return m.ServerName
	}
	return ""
}

func (m *L2CLoginServerRegister) GetListenMatchIP() string {
	if m != nil {
		return m.ListenMatchIP
	}
	return ""
}

func (m *L2CLoginServerRegister) GetListenClientIP() string {
	if m != nil {
		return m.ListenClientIP
	}
	return ""
}

// / Login->Center Login注销
type L2CLoginServerUnRegister struct {
	ServerId int32 `protobuf:"varint,1,opt,name=ServerId" json:"ServerId,omitempty"`
	Reason   int32 `protobuf:"varint,2,opt,name=Reason" json:"Reason,omitempty"`
}

func (m *L2CLoginServerUnRegister) Reset()                    { *m = L2CLoginServerUnRegister{} }
func (m *L2CLoginServerUnRegister) String() string            { return proto.CompactTextString(m) }
func (*L2CLoginServerUnRegister) ProtoMessage()               {}
func (*L2CLoginServerUnRegister) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{13} }

func (m *L2CLoginServerUnRegister) GetServerId() int32 {
	if m != nil {
		return m.ServerId
	}
	return 0
}

func (m *L2CLoginServerUnRegister) GetReason() int32 {
	if m != nil {
		return m.Reason
	}
	return 0
}

// / Login->Center 获取玩家账号Id和所在大厅信息
type L2CGetPlayerAccInfo struct {
	Account string `protobuf:"bytes,1,opt,name=Account" json:"Account,omitempty"`
}

func (m *L2CGetPlayerAccInfo) Reset()                    { *m = L2CGetPlayerAccInfo{} }
func (m *L2CGetPlayerAccInfo) String() string            { return proto.CompactTextString(m) }
func (*L2CGetPlayerAccInfo) ProtoMessage()               {}
func (*L2CGetPlayerAccInfo) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{14} }

func (m *L2CGetPlayerAccInfo) GetAccount() string {
	if m != nil {
		return m.Account
	}
	return ""
}

// / Center->Login 玩家账号信息回复
type C2LPlayerAccInfo struct {
	Account       string `protobuf:"bytes,1,opt,name=Account" json:"Account,omitempty"`
	PlayerId      int64  `protobuf:"varint,2,opt,name=PlayerId" json:"PlayerId,omitempty"`
	HallId        int32  `protobuf:"varint,3,opt,name=HallId" json:"HallId,omitempty"`
	HallIP        string `protobuf:"bytes,4,opt,name=HallIP" json:"HallIP,omitempty"`
	IfForbidLogin int32  `protobuf:"varint,5,opt,name=IfForbidLogin" json:"IfForbidLogin,omitempty"`
	ForbidEndTime string `protobuf:"bytes,6,opt,name=ForbidEndTime" json:"ForbidEndTime,omitempty"`
}

func (m *C2LPlayerAccInfo) Reset()                    { *m = C2LPlayerAccInfo{} }
func (m *C2LPlayerAccInfo) String() string            { return proto.CompactTextString(m) }
func (*C2LPlayerAccInfo) ProtoMessage()               {}
func (*C2LPlayerAccInfo) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{15} }

func (m *C2LPlayerAccInfo) GetAccount() string {
	if m != nil {
		return m.Account
	}
	return ""
}

func (m *C2LPlayerAccInfo) GetPlayerId() int64 {
	if m != nil {
		return m.PlayerId
	}
	return 0
}

func (m *C2LPlayerAccInfo) GetHallId() int32 {
	if m != nil {
		return m.HallId
	}
	return 0
}

func (m *C2LPlayerAccInfo) GetHallIP() string {
	if m != nil {
		return m.HallIP
	}
	return ""
}

func (m *C2LPlayerAccInfo) GetIfForbidLogin() int32 {
	if m != nil {
		return m.IfForbidLogin
	}
	return 0
}

func (m *C2LPlayerAccInfo) GetForbidEndTime() string {
	if m != nil {
		return m.ForbidEndTime
	}
	return ""
}

// / 玩家上线
type SetPlayerOnOffline struct {
	PlayerId  int32 `protobuf:"varint,1,opt,name=PlayerId" json:"PlayerId,omitempty"`
	TongId    int32 `protobuf:"varint,2,opt,name=TongId" json:"TongId,omitempty"`
	OnOffLine int32 `protobuf:"varint,3,opt,name=OnOffLine" json:"OnOffLine,omitempty"`
}

func (m *SetPlayerOnOffline) Reset()                    { *m = SetPlayerOnOffline{} }
func (m *SetPlayerOnOffline) String() string            { return proto.CompactTextString(m) }
func (*SetPlayerOnOffline) ProtoMessage()               {}
func (*SetPlayerOnOffline) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{16} }

func (m *SetPlayerOnOffline) GetPlayerId() int32 {
	if m != nil {
		return m.PlayerId
	}
	return 0
}

func (m *SetPlayerOnOffline) GetTongId() int32 {
	if m != nil {
		return m.TongId
	}
	return 0
}

func (m *SetPlayerOnOffline) GetOnOffLine() int32 {
	if m != nil {
		return m.OnOffLine
	}
	return 0
}

// center->hall gm命令
type C2HGmCommand struct {
	Command   string `protobuf:"bytes,1,opt,name=Command" json:"Command,omitempty"`
	SessionId int32  `protobuf:"varint,2,opt,name=SessionId" json:"SessionId,omitempty"`
}

func (m *C2HGmCommand) Reset()                    { *m = C2HGmCommand{} }
func (m *C2HGmCommand) String() string            { return proto.CompactTextString(m) }
func (*C2HGmCommand) ProtoMessage()               {}
func (*C2HGmCommand) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{17} }

func (m *C2HGmCommand) GetCommand() string {
	if m != nil {
		return m.Command
	}
	return ""
}

func (m *C2HGmCommand) GetSessionId() int32 {
	if m != nil {
		return m.SessionId
	}
	return 0
}

// hall->center 返回执行结果
type H2CGmResult struct {
	SessionId int32  `protobuf:"varint,1,opt,name=SessionId" json:"SessionId,omitempty"`
	Result    string `protobuf:"bytes,2,opt,name=Result" json:"Result,omitempty"`
}

func (m *H2CGmResult) Reset()                    { *m = H2CGmResult{} }
func (m *H2CGmResult) String() string            { return proto.CompactTextString(m) }
func (*H2CGmResult) ProtoMessage()               {}
func (*H2CGmResult) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{18} }

func (m *H2CGmResult) GetSessionId() int32 {
	if m != nil {
		return m.SessionId
	}
	return 0
}

func (m *H2CGmResult) GetResult() string {
	if m != nil {
		return m.Result
	}
	return ""
}

// center->hall 查询物品某个玩家的物品
type C2HItemQuery struct {
	PlayerId  int32 `protobuf:"varint,1,opt,name=PlayerId" json:"PlayerId,omitempty"`
	SessionId int32 `protobuf:"varint,2,opt,name=SessionId" json:"SessionId,omitempty"`
}

func (m *C2HItemQuery) Reset()                    { *m = C2HItemQuery{} }
func (m *C2HItemQuery) String() string            { return proto.CompactTextString(m) }
func (*C2HItemQuery) ProtoMessage()               {}
func (*C2HItemQuery) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{19} }

func (m *C2HItemQuery) GetPlayerId() int32 {
	if m != nil {
		return m.PlayerId
	}
	return 0
}

func (m *C2HItemQuery) GetSessionId() int32 {
	if m != nil {
		return m.SessionId
	}
	return 0
}

type IdNum struct {
	Id  int32 `protobuf:"varint,1,opt,name=Id" json:"Id,omitempty"`
	Num int32 `protobuf:"varint,2,opt,name=Num" json:"Num,omitempty"`
}

func (m *IdNum) Reset()                    { *m = IdNum{} }
func (m *IdNum) String() string            { return proto.CompactTextString(m) }
func (*IdNum) ProtoMessage()               {}
func (*IdNum) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{20} }

func (m *IdNum) GetId() int32 {
	if m != nil {
		return m.Id
	}
	return 0
}

func (m *IdNum) GetNum() int32 {
	if m != nil {
		return m.Num
	}
	return 0
}

// hall->center 回复物品查询结果
type H2CItemQuery struct {
	SessionId int32    `protobuf:"varint,1,opt,name=SessionId" json:"SessionId,omitempty"`
	Items     []*IdNum `protobuf:"bytes,2,rep,name=Items" json:"Items,omitempty"`
}

func (m *H2CItemQuery) Reset()                    { *m = H2CItemQuery{} }
func (m *H2CItemQuery) String() string            { return proto.CompactTextString(m) }
func (*H2CItemQuery) ProtoMessage()               {}
func (*H2CItemQuery) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{21} }

func (m *H2CItemQuery) GetSessionId() int32 {
	if m != nil {
		return m.SessionId
	}
	return 0
}

func (m *H2CItemQuery) GetItems() []*IdNum {
	if m != nil {
		return m.Items
	}
	return nil
}

// hall->center 获取当前服务器奖励信息
type H2CGetServerReward struct {
}

func (m *H2CGetServerReward) Reset()                    { *m = H2CGetServerReward{} }
func (m *H2CGetServerReward) String() string            { return proto.CompactTextString(m) }
func (*H2CGetServerReward) ProtoMessage()               {}
func (*H2CGetServerReward) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{22} }

// center->hall 增加全服奖励信息
type C2HAddServerReward struct {
	RewardId int32    `protobuf:"varint,1,opt,name=RewardId" json:"RewardId,omitempty"`
	Channel  string   `protobuf:"bytes,2,opt,name=Channel" json:"Channel,omitempty"`
	EndUnix  int32    `protobuf:"varint,3,opt,name=EndUnix" json:"EndUnix,omitempty"`
	Items    []*IdNum `protobuf:"bytes,4,rep,name=Items" json:"Items,omitempty"`
	Content  string   `protobuf:"bytes,5,opt,name=Content" json:"Content,omitempty"`
}

func (m *C2HAddServerReward) Reset()                    { *m = C2HAddServerReward{} }
func (m *C2HAddServerReward) String() string            { return proto.CompactTextString(m) }
func (*C2HAddServerReward) ProtoMessage()               {}
func (*C2HAddServerReward) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{23} }

func (m *C2HAddServerReward) GetRewardId() int32 {
	if m != nil {
		return m.RewardId
	}
	return 0
}

func (m *C2HAddServerReward) GetChannel() string {
	if m != nil {
		return m.Channel
	}
	return ""
}

func (m *C2HAddServerReward) GetEndUnix() int32 {
	if m != nil {
		return m.EndUnix
	}
	return 0
}

func (m *C2HAddServerReward) GetItems() []*IdNum {
	if m != nil {
		return m.Items
	}
	return nil
}

func (m *C2HAddServerReward) GetContent() string {
	if m != nil {
		return m.Content
	}
	return ""
}

// center->hall 同步当前全服奖励信息
type C2HSyncServerReward struct {
	Rewards []*C2HAddServerReward `protobuf:"bytes,1,rep,name=Rewards" json:"Rewards,omitempty"`
}

func (m *C2HSyncServerReward) Reset()                    { *m = C2HSyncServerReward{} }
func (m *C2HSyncServerReward) String() string            { return proto.CompactTextString(m) }
func (*C2HSyncServerReward) ProtoMessage()               {}
func (*C2HSyncServerReward) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{24} }

func (m *C2HSyncServerReward) GetRewards() []*C2HAddServerReward {
	if m != nil {
		return m.Rewards
	}
	return nil
}

func init() {
	proto.RegisterType((*LoginServerInfo)(nil), "msg.server_message.LoginServerInfo")
	proto.RegisterType((*PlayerBaseInfo)(nil), "msg.server_message.PlayerBaseInfo")
	proto.RegisterType((*PlayerStageInfo)(nil), "msg.server_message.PlayerStageInfo")
	proto.RegisterType((*H2CHallServerRegister)(nil), "msg.server_message.H2CHallServerRegister")
	proto.RegisterType((*H2CHallServerUnRegister)(nil), "msg.server_message.H2CHallServerUnRegister")
	proto.RegisterType((*C2HLoginServerList)(nil), "msg.server_message.C2HLoginServerList")
	proto.RegisterType((*C2HNewLoginServerAdd)(nil), "msg.server_message.C2HNewLoginServerAdd")
	proto.RegisterType((*C2HLoginServerRemove)(nil), "msg.server_message.C2HLoginServerRemove")
	proto.RegisterType((*H2LHallServerRegister)(nil), "msg.server_message.H2LHallServerRegister")
	proto.RegisterType((*H2LHallServerUnRegister)(nil), "msg.server_message.H2LHallServerUnRegister")
	proto.RegisterType((*L2HDissconnectNotify)(nil), "msg.server_message.L2HDissconnectNotify")
	proto.RegisterType((*L2HSyncAccountToken)(nil), "msg.server_message.L2HSyncAccountToken")
	proto.RegisterType((*L2CLoginServerRegister)(nil), "msg.server_message.L2CLoginServerRegister")
	proto.RegisterType((*L2CLoginServerUnRegister)(nil), "msg.server_message.L2CLoginServerUnRegister")
	proto.RegisterType((*L2CGetPlayerAccInfo)(nil), "msg.server_message.L2CGetPlayerAccInfo")
	proto.RegisterType((*C2LPlayerAccInfo)(nil), "msg.server_message.C2LPlayerAccInfo")
	proto.RegisterType((*SetPlayerOnOffline)(nil), "msg.server_message.SetPlayerOnOffline")
	proto.RegisterType((*C2HGmCommand)(nil), "msg.server_message.C2HGmCommand")
	proto.RegisterType((*H2CGmResult)(nil), "msg.server_message.H2CGmResult")
	proto.RegisterType((*C2HItemQuery)(nil), "msg.server_message.C2HItemQuery")
	proto.RegisterType((*IdNum)(nil), "msg.server_message.IdNum")
	proto.RegisterType((*H2CItemQuery)(nil), "msg.server_message.H2CItemQuery")
	proto.RegisterType((*H2CGetServerReward)(nil), "msg.server_message.H2CGetServerReward")
	proto.RegisterType((*C2HAddServerReward)(nil), "msg.server_message.C2HAddServerReward")
	proto.RegisterType((*C2HSyncServerReward)(nil), "msg.server_message.C2HSyncServerReward")
	proto.RegisterEnum("msg.server_message.MSGID", MSGID_name, MSGID_value)
}

func init() { proto.RegisterFile("server_message.proto", fileDescriptor0) }

var fileDescriptor0 = []byte{
	// 1091 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x09, 0x6e, 0x88, 0x02, 0xff, 0xac, 0x56, 0xdd, 0x6e, 0xdb, 0x36,
	0x14, 0x1e, 0xe3, 0x38, 0x6d, 0x4e, 0xb2, 0xd4, 0x60, 0xd3, 0xd4, 0x69, 0xb3, 0x2e, 0xd3, 0x86,
	0x22, 0xdb, 0x45, 0x0a, 0x68, 0xd8, 0xd5, 0x6e, 0xe6, 0xd1, 0x8a, 0x25, 0x4c, 0x91, 0x33, 0xc9,
	0x69, 0x91, 0x8b, 0x41, 0x50, 0x2d, 0xda, 0x15, 0x66, 0x51, 0x85, 0x25, 0xa7, 0x09, 0xf6, 0x02,
	0xfb, 0xdf, 0x03, 0x2c, 0xfb, 0x85, 0xaf, 0xba, 0x01, 0x7b, 0x89, 0x3d, 0xd8, 0xc0, 0x1f, 0xd9,
	0x52, 0x9c, 0x19, 0x2e, 0x9a, 0x3b, 0x7e, 0x87, 0x1f, 0xc9, 0xef, 0x9c, 0x8f, 0x3a, 0x14, 0x6c,
	0xa6, 0x74, 0x78, 0x4a, 0x87, 0x7e, 0x4c, 0xd3, 0x34, 0xe8, 0xd3, 0xfd, 0xe7, 0xc3, 0x24, 0x4b,
	0x30, 0x8e, 0xd3, 0xfe, 0x7e, 0x79, 0x46, 0xfb, 0x19, 0xc1, 0x2d, 0x3b, 0xe9, 0x47, 0xcc, 0x13,
	0x71, 0x8b, 0xf5, 0x12, 0x7c, 0x0f, 0x6e, 0x2a, 0x14, 0xd6, 0xd1, 0x2e, 0xda, 0xab, 0xba, 0x13,
	0x8c, 0x1f, 0x00, 0xc8, 0xb1, 0x13, 0xc4, 0xb4, 0xbe, 0xb4, 0x8b, 0xf6, 0x56, 0xdd, 0x42, 0x04,
	0xbf, 0x07, 0x6f, 0xda, 0x51, 0x9a, 0x51, 0x76, 0x18, 0x64, 0xdd, 0x67, 0xd6, 0x51, 0xbd, 0x22,
	0x28, 0xe5, 0x20, 0x7e, 0x08, 0x1b, 0x32, 0x40, 0x06, 0x11, 0x65, 0x99, 0x75, 0x54, 0x5f, 0x16,
	0xb4, 0x4b, 0x51, 0xed, 0x57, 0x04, 0x1b, 0x47, 0x83, 0xe0, 0x9c, 0x0e, 0x3f, 0x0d, 0x52, 0x2a,
	0xc4, 0xd5, 0xa0, 0x62, 0x9f, 0x0e, 0x94, 0x2e, 0x3e, 0xe4, 0x11, 0xe3, 0xec, 0xb9, 0xd0, 0x52,
	0x75, 0xf9, 0x10, 0xef, 0xc2, 0x1a, 0x19, 0x0d, 0x0f, 0x83, 0x33, 0x2f, 0x0b, 0xfa, 0x54, 0x48,
	0xa8, 0xba, 0xc5, 0x10, 0xc6, 0xb0, 0x2c, 0x12, 0x90, 0xc7, 0x8a, 0x31, 0x8f, 0x59, 0xdd, 0x84,
	0xd5, 0xab, 0x82, 0x2e, 0xc6, 0x3c, 0x5d, 0x32, 0x4a, 0xb3, 0x24, 0x16, 0x33, 0x2b, 0x32, 0xdd,
	0x69, 0x44, 0xfb, 0x05, 0xc1, 0x2d, 0x29, 0x50, 0xec, 0x9b, 0x97, 0x4f, 0x86, 0xa6, 0xe5, 0xcb,
	0x31, 0xde, 0x84, 0xaa, 0xd7, 0x4d, 0x86, 0x54, 0xa9, 0x95, 0x60, 0xa2, 0xa6, 0x52, 0x50, 0xa3,
	0xf2, 0x5c, 0x9e, 0xe6, 0x59, 0xd4, 0xb7, 0xba, 0xa0, 0xbe, 0xdf, 0x10, 0xdc, 0x31, 0x75, 0x62,
	0x06, 0x83, 0x81, 0x34, 0xc9, 0xa5, 0x7d, 0x5e, 0xe2, 0xe1, 0x6b, 0x99, 0xac, 0xc1, 0xba, 0x34,
	0xca, 0x4d, 0x92, 0x78, 0xe2, 0x71, 0x29, 0xb6, 0xb0, 0xc5, 0x1f, 0xc1, 0xdd, 0x92, 0xc0, 0x63,
	0xb6, 0x88, 0x44, 0xed, 0x04, 0x30, 0xd1, 0xcd, 0xc2, 0xcd, 0xe5, 0xdb, 0x62, 0x92, 0x0b, 0xe7,
	0xa8, 0x8e, 0x76, 0x2b, 0x7b, 0x6b, 0xfa, 0xbb, 0xfb, 0xb3, 0xd7, 0x7e, 0xff, 0xd2, 0x95, 0x77,
	0x0b, 0xcb, 0x34, 0x0f, 0x36, 0x89, 0x6e, 0x3a, 0xf4, 0x45, 0x81, 0xd4, 0x08, 0x43, 0xfc, 0x31,
	0xac, 0x48, 0x20, 0xc4, 0x2c, 0xb8, 0xb1, 0x5a, 0xa2, 0xe9, 0x62, 0xd3, 0xc2, 0xac, 0x4b, 0xe3,
	0xe4, 0x94, 0xce, 0xcd, 0xf1, 0x2b, 0xee, 0x9d, 0x7d, 0xcd, 0xde, 0xcd, 0xfa, 0x52, 0xb9, 0xd2,
	0x97, 0x43, 0xee, 0x8b, 0xfd, 0xaa, 0xbe, 0xe0, 0x2d, 0x58, 0x71, 0x69, 0x90, 0x26, 0x4c, 0xdd,
	0x70, 0x85, 0xb4, 0x7d, 0xd8, 0xb4, 0x75, 0xb3, 0x19, 0xa5, 0x69, 0x37, 0x61, 0x8c, 0x76, 0x33,
	0x27, 0xc9, 0xa2, 0xde, 0x79, 0x81, 0x8f, 0x4a, 0xfc, 0x00, 0x6e, 0xdb, 0xba, 0xe9, 0x9d, 0xb3,
	0x6e, 0xa3, 0xdb, 0x4d, 0x46, 0x2c, 0xeb, 0x24, 0x5f, 0x52, 0x86, 0xeb, 0x70, 0x43, 0x61, 0xc1,
	0x5f, 0x75, 0x73, 0xc8, 0xbf, 0x2c, 0x41, 0x51, 0x29, 0x4b, 0x50, 0xfa, 0x16, 0x79, 0x9e, 0x95,
	0xe9, 0xb7, 0xa8, 0xfd, 0x89, 0x60, 0xcb, 0xd6, 0x49, 0xc9, 0x93, 0x6b, 0x28, 0xf0, 0xf5, 0x76,
	0x40, 0x07, 0xea, 0x65, 0x8d, 0xaf, 0xe9, 0xc3, 0x23, 0x5e, 0x57, 0xd2, 0xa2, 0x99, 0x2c, 0x43,
	0xa3, 0xdb, 0x15, 0x3d, 0xeb, 0x7f, 0xeb, 0xaa, 0xfd, 0x8b, 0xa0, 0x46, 0x74, 0x7b, 0x41, 0x7a,
	0xa9, 0xe0, 0x4b, 0xe5, 0x82, 0x73, 0x4d, 0xfc, 0x3e, 0x29, 0x2b, 0xaa, 0xae, 0x42, 0x93, 0x78,
	0x5e, 0x03, 0x85, 0x78, 0x25, 0xad, 0xde, 0x41, 0x32, 0x7c, 0x1a, 0x85, 0xa2, 0x00, 0xaa, 0x33,
	0x97, 0x83, 0x9c, 0x25, 0xa1, 0xc1, 0xc2, 0x4e, 0x14, 0x53, 0xd5, 0x05, 0xcb, 0x41, 0xad, 0x07,
	0xd8, 0xcb, 0x93, 0x6e, 0xb3, 0x76, 0xaf, 0x37, 0x88, 0x18, 0x9d, 0xdb, 0xaa, 0xb7, 0x60, 0xa5,
	0x93, 0xb0, 0xbe, 0xca, 0xa3, 0xea, 0x2a, 0x84, 0x77, 0x60, 0x55, 0x6c, 0x60, 0x47, 0x2c, 0x7f,
	0x5a, 0xa6, 0x01, 0xed, 0x00, 0xd6, 0x89, 0x6e, 0xb6, 0x62, 0x92, 0xc4, 0x71, 0xc0, 0x42, 0x5e,
	0x29, 0x35, 0xcc, 0x2b, 0x95, 0xcf, 0xec, 0xc0, 0xaa, 0x47, 0xd3, 0x34, 0x4a, 0xd8, 0xe4, 0x88,
	0x69, 0x40, 0x23, 0xb0, 0x66, 0xea, 0xa4, 0x15, 0xbb, 0x34, 0x1d, 0x0d, 0xb2, 0x32, 0x19, 0x5d,
	0x22, 0x4b, 0xb3, 0x39, 0x4f, 0x5d, 0x47, 0x85, 0x34, 0x53, 0x88, 0xb1, 0x32, 0x1a, 0x7f, 0x3e,
	0xa2, 0xc3, 0xf3, 0xb9, 0xe9, 0xce, 0x97, 0xf3, 0x3e, 0x54, 0xad, 0xd0, 0x19, 0xc5, 0x78, 0x03,
	0x96, 0x26, 0x8b, 0x97, 0xac, 0x90, 0x3f, 0x53, 0xce, 0x28, 0xce, 0x1f, 0x5f, 0x67, 0x14, 0x6b,
	0x5f, 0xc0, 0xba, 0xa9, 0x93, 0xe9, 0xa1, 0xf3, 0xa5, 0x3f, 0x82, 0x2a, 0xa7, 0xa6, 0xf5, 0x25,
	0xd1, 0xac, 0xb7, 0xaf, 0xea, 0xa9, 0xe2, 0x64, 0x57, 0xf2, 0xb4, 0x4d, 0xc0, 0xa6, 0xb8, 0xc0,
	0xf9, 0x27, 0xfb, 0x22, 0x18, 0x86, 0xda, 0x3f, 0x48, 0xbc, 0x07, 0x8d, 0x30, 0x2c, 0x86, 0x79,
	0xc2, 0x72, 0x34, 0x4d, 0x38, 0xc7, 0xc2, 0x99, 0x67, 0x01, 0x63, 0x74, 0xa0, 0xaa, 0x96, 0x43,
	0x3e, 0x63, 0xb0, 0xf0, 0x98, 0x45, 0x67, 0xca, 0xdf, 0x1c, 0x4e, 0xd5, 0x2e, 0x2f, 0xa6, 0x56,
	0xda, 0xcf, 0x32, 0xca, 0x32, 0xf5, 0x6c, 0xe7, 0x50, 0x7b, 0x02, 0xb7, 0x89, 0x6c, 0x70, 0x25,
	0xc5, 0x9f, 0xc0, 0x0d, 0x39, 0x4a, 0xd5, 0xf3, 0xf5, 0xf0, 0xaa, 0x33, 0x66, 0x53, 0x75, 0xf3,
	0x65, 0x1f, 0xbc, 0xac, 0x40, 0xf5, 0xd0, 0x6b, 0x59, 0x4d, 0x7c, 0x13, 0x96, 0x9d, 0xb6, 0x63,
	0xd4, 0xde, 0xc0, 0x0f, 0xa0, 0x6e, 0xea, 0xc4, 0x37, 0x1b, 0x83, 0x81, 0xef, 0x19, 0xee, 0x63,
	0xc3, 0xf5, 0x5d, 0xa3, 0x65, 0x79, 0x1d, 0xc3, 0xad, 0xfd, 0x7e, 0x81, 0xf0, 0x2e, 0xdc, 0x93,
	0xf3, 0xb6, 0x9d, 0xcf, 0x1f, 0x3b, 0xae, 0xd1, 0x94, 0x8c, 0x3f, 0x2e, 0x10, 0xbe, 0x0f, 0x77,
	0x88, 0x6e, 0xfa, 0x76, 0xbb, 0x65, 0x39, 0x39, 0xc5, 0xb6, 0xbc, 0x4e, 0xed, 0xe5, 0x05, 0xe2,
	0xdb, 0xf3, 0x49, 0xc7, 0x78, 0x52, 0x26, 0x34, 0x9a, 0xcd, 0xda, 0x5f, 0x17, 0x08, 0xbf, 0x05,
	0x77, 0x67, 0x16, 0xbb, 0xc6, 0x61, 0xfb, 0xb1, 0x51, 0xfb, 0x5b, 0x2e, 0x37, 0x75, 0xbb, 0x74,
	0xfa, 0x44, 0xdd, 0xd7, 0x63, 0xa5, 0xce, 0x9e, 0x51, 0xa7, 0x18, 0xdf, 0x8c, 0x85, 0x3a, 0x5b,
	0x37, 0xfd, 0xa6, 0xe5, 0x91, 0xb6, 0xe3, 0x18, 0xa4, 0xe3, 0x3b, 0xed, 0x8e, 0x75, 0x70, 0x52,
	0xfb, 0x76, 0x8c, 0xf0, 0x0e, 0x6f, 0xf3, 0xa6, 0xef, 0x9d, 0x38, 0xc4, 0x6f, 0x10, 0xd2, 0x3e,
	0x76, 0x3a, 0x7e, 0xa7, 0xfd, 0x99, 0xe1, 0xd4, 0xbe, 0x1b, 0x23, 0xfc, 0x36, 0x6c, 0xdb, 0x3a,
	0xb9, 0xac, 0x4d, 0xed, 0xfd, 0xfd, 0x18, 0xe1, 0x77, 0xe0, 0xfe, 0x0c, 0xa1, 0x70, 0xfc, 0x0f,
	0x63, 0x91, 0x1f, 0xa7, 0xb4, 0x8c, 0x8e, 0x7f, 0x64, 0x37, 0x4e, 0x78, 0xe6, 0x84, 0xf8, 0x96,
	0x73, 0xd0, 0xae, 0xfd, 0x38, 0x46, 0x78, 0x9b, 0x5b, 0x6d, 0xcf, 0x4c, 0xfd, 0x34, 0x46, 0x4f,
	0x57, 0xc4, 0x9f, 0xf9, 0x87, 0xff, 0x05, 0x00, 0x00, 0xff, 0xff, 0x77, 0x8f, 0xb3, 0x1d, 0xb1,
	0x0b, 0x00, 0x00,
}

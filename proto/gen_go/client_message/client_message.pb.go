// Code generated by protoc-gen-go. DO NOT EDIT.
// source: client_message.proto

/*
Package msg_client_message is a generated protocol buffer package.

It is generated from these files:
	client_message.proto

It has these top-level messages:
	S2CStateNotify
	C2SHeartbeat
	S2CHeartbeat
	C2SDataSyncRequest
	C2S_TEST_COMMAND
	ItemInfo
	C2SLoginRequest
	ServerInfo
	S2CLoginResponse
	S2COtherPlaceLogin
	C2SSelectServerRequest
	S2CSelectServerResponse
	C2S_MSG_DATA
	S2C_MSG_DATA
	C2SEnterGameRequest
	S2CEnterGameResponse
	S2CEnterGameCompleteNotify
	C2SLeaveGameRequest
	S2CLeaveGameResponse
	S2CPlayerInfoResponse
	C2SSetTeamRequest
	S2CSetTeamResponse
	TeamData
	S2CTeamsResponse
	BattleMemberItem
	BattleFighter
	BattleMemberBuff
	BattleReportItem
	BattleRoundReports
	C2SBattleResultRequest
	S2CBattleResultResponse
	C2SBattleRecordListRequest
	BattleRecordData
	S2CBattleRecordListResponse
	C2SBattleRecordRequest
	S2CBattleRecordResponse
	C2SBattleRecordDeleteRequest
	S2CBattleRecordDeleteResponse
	S2CBattleRandomRewardNotify
	C2SCampaignDataRequest
	S2CCampaignDataResponse
	C2SCampaignHangupIncomeRequest
	S2CCampaignHangupIncomeResponse
	C2SBattleSetHangupCampaignRequest
	S2CBattleSetHangupCampaignResponse
	C2SItemsSyncRequest
	S2CItemsSync
	S2CItemsUpdate
	C2SItemFusionRequest
	S2CItemFusionResponse
	C2SItemSellRequest
	S2CItemSellResponse
	C2SItemEquipRequest
	S2CItemEquipResponse
	C2SItemUnequipRequest
	S2CItemUnequipResponse
	C2SItemUpgradeRequest
	S2CItemUpgradeResponse
	C2SItemOneKeyUpgradeRequest
	S2CItemOneKeyUpgradeResponse
	C2SRolesRequest
	AttrData
	Role
	S2CRolesResponse
	S2CRolesChangeNotify
	C2SRoleAttrsRequest
	S2CRoleAttrsResponse
	C2SRoleLevelUpRequest
	S2CRoleLevelUpResponse
	C2SRoleRankUpRequest
	S2CRoleRankUpResponse
	C2SRoleDecomposeRequest
	S2CRoleDecomposeResponse
	C2SRoleFusionRequest
	S2CRoleFusionResponse
	C2SRoleLockRequest
	S2CRoleLockResponse
	C2SRoleHandbookRequest
	S2CRoleHandbookResponse
	C2SRoleLeftSlotOpenRequest
	S2CRoleLeftSlotOpenResponse
	C2SRoleOneKeyEquipRequest
	S2CRoleOneKeyEquipResponse
	C2SRoleOnekeyUnequipRequest
	S2CRoleOneKeyUnequipResponse
	C2SRoleLeftSlotResultSaveRequest
	S2CRoleLeftSlotResultSaveResponse
	C2SRoleLeftSlotResultCancelRequest
	S2CRoleLeftSlotResultCancelResponse
	C2SMailSendRequest
	S2CMailSendResponse
	C2SMailListRequest
	MailBasicData
	S2CMailListResponse
	C2SMailDetailRequest
	MailDetail
	S2CMailDetailResponse
	C2SMailGetAttachedItemsRequest
	S2CMailGetAttachedItemsResponse
	C2SMailDeleteRequest
	S2CMailDeleteResponse
	S2CMailsNewNotify
	C2STalentUpRequest
	S2CTalentUpResponse
	C2STalentListRequest
	TalentInfo
	S2CTalentListResponse
	C2STalentResetRequest
	S2CTalentResetResponse
	C2STowerDataRequest
	S2CTowerDataResponse
	C2STowerRecordsInfoRequest
	TowerFightRecord
	S2CTowerRecordsInfoResponse
	C2STowerRecordDataRequest
	S2CTowerRecordDataResponse
	C2STowerRankingListRequest
	TowerRankInfo
	S2CTowerRankingListResponse
	C2SDrawDataRequest
	S2CDrawDataResponse
	C2SDrawCardRequest
	S2CDrawCardResponse
	C2STouchGoldRequest
	S2CTouchGoldResponse
	C2SGoldHandDataRequest
	S2CGoldHandDataResponse
	C2SShopDataRequest
	ShopItem
	S2CShopDataResponse
	C2SShopBuyItemRequest
	S2CShopBuyItemResponse
	C2SShopRefreshRequest
	S2CShopRefreshResponse
	S2CShopAutoRefreshNotify
	RankItemInfo
	C2SRankListRequest
	S2CRankListResponse
	C2SArenaDataRequest
	S2CArenaDataResponse
	C2SArenaPlayerDefenseTeamRequest
	PlayerTeamRole
	S2CArenaPlayerDefenseTeamResponse
	C2SArenaMatchPlayerRequest
	S2CArenaMatchPlayerResponse
	S2CArenaGradeRewardNotify
	C2SActiveStageDataRequest
	ActiveStageData
	S2CActiveStageDataResponse
	C2SActiveStageBuyChallengeNumRequest
	S2CActiveStageBuyChallengeNumResponse
	S2CActiveStageRefreshNotify
	C2SActiveStageAssistRoleListRequest
	S2CActiveStageAssistRoleListResponse
	PlayerInfo
	FriendInfo
	C2SFriendRecommendRequest
	S2CFriendRecommendResponse
	C2SFriendListRequest
	S2CFriendListResponse
	C2SFriendAskRequest
	S2CFriendAskResponse
	C2SFriendAskPlayerListRequest
	S2CFriendAskPlayerListResponse
	S2CFriendAskPlayerListAddNotify
	C2SFriendAgreeRequest
	S2CFriendAgreeResponse
	S2CFriendListAddNotify
	C2SFriendRefuseRequest
	S2CFriendRefuseResponse
	C2SFriendRemoveRequest
	S2CFriendRemoveResponse
	C2SFriendGivePointsRequest
	S2CFriendGivePointsResponse
	C2SFriendGetPointsRequest
	S2CFriendGetPointsResponse
	C2SFriendSearchBossRequest
	S2CFriendSearchBossResponse
	C2SFriendsBossListRequest
	FriendBossInfo
	S2CFriendsBossListResponse
	C2SFriendBossAttackListRequest
	S2CFriendBossAttackListResponse
	C2SFriendDataRequest
	S2CFriendDataResponse
	C2SFriendSetAssistRoleRequest
	S2CFriendSetAssistRoleResponse
	C2SFriendGiveAndGetPointsRequest
	C2SFriendGetAssistPointsRequest
	S2CFriendGetAssistPointsResponse
	TaskData
	C2STaskDataRequest
	S2CTaskDataResponse
	S2CTaskValueNotify
	C2STaskRewardRequest
	S2CTaskRewardResponse
	ExploreData
	C2SExploreDataRequest
	S2CExploreDataResponse
	C2SExploreSelRoleRequest
	S2CExploreSelRoleResponse
	C2SExploreStartRequest
	S2CExploreStartResponse
	C2SExploreSpeedupRequest
	S2CExploreSpeedupResponse
	C2SExploreRefreshRequest
	S2CExploreRefreshResponse
	S2CExploreAutoRefreshNotify
	C2SExploreLockRequest
	S2CExploreLockResponse
	C2SExploreGetRewardRequest
	S2CExploreGetRewardResponse
	S2CExploreStoryNewNotify
	S2CExploreRemoveNotify
	C2SChatRequest
	S2CChatResponse
	C2SChatMsgPullRequest
	ChatItem
	S2CChatMsgPullResponse
	C2SGuildDataRequest
	GuildInfo
	S2CGuildDataResponse
	C2SGuildSearchRequest
	GuildBaseInfo
	S2CGuildSearchResponse
	C2SGuildRecommendRequest
	S2CGuildRecommendResponse
	C2SGuildCreateRequest
	S2CGuildCreateResponse
	C2SGuildDismissRequest
	S2CGuildDismissResponse
	C2SGuildCancelDismissRequest
	S2CGuildCancelDismissResponse
	S2CGuildDeleteNotify
	C2SGuildInfoModifyRequest
	S2CGuildInfoModifyResponse
	C2SGuildAnouncementRequest
	S2CGuildAnouncementResponse
	C2SGuildMembersRequest
	GuildMember
	S2CGuildMemebersResponse
	C2SGuildAskListRequest
	S2CGuildAskListResponse
	C2SGuildAskJoinRequest
	S2CGuildAskJoinResponse
	C2SGuildAgreeJoinRequest
	S2CGuildAgreeJoinResponse
	S2CGuildAgreeJoinNotify
	C2SGuildQuitRequest
	S2CGuildQuitResponse
	C2SGuildLogsRequest
	GuildLog
	S2CGuildLogsResponse
	C2SGuildSignInRequest
	S2CGuildSignInResponse
	C2SGuildSetOfficerRequest
	S2CGuildSetOfficerResponse
	S2CGuildSetOfficerNotify
	C2SGuildKickMemberRequest
	S2CGuildKickMemberResponse
	S2CGuildKickMemberNotify
	C2SGuildChangePresidentRequest
	S2CGuildChangePresidentResponse
	S2CGuildChangePresidentNotify
	C2SGuildRecruitRequest
	S2CGuildRecruitResponse
	C2SGuildAskDonateRequest
	S2CGuildAskDonateResponse
	C2SGuildDonateRequest
	S2CGuildDonateResponse
	S2CGuildDonateItemNotify
	C2SGuildDonateListRequest
	GuildAskDonateInfo
	S2CGuildDonateListResponse
	C2SGuildStageDataRequest
	S2CGuildStageDataResponse
	C2SGuildStageRankListRequest
	GuildStageDamageItem
	S2CGuildStageRankListResponse
	C2SGuildStagePlayerRespawnRequest
	S2CGuildStagePlayerRespawnResponse
	C2SGuildStageResetRequest
	S2CGuildStageResetResponse
	S2CGuildStageResetNotify
	S2CGuildStageAutoRefreshNotify
*/
package msg_client_message

import proto "github.com/golang/protobuf/proto"
import fmt "fmt"
import math "math"

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion2 // please upgrade the proto package

type E_ERR int32

const (
	E_ERR_NONE                           E_ERR = 0
	E_ERR_INTERNAL                       E_ERR = -1
	E_ERR_PLAYER_ACC_OR_PASSWORD_ERROR   E_ERR = -2
	E_ERR_PLAYER_NOT_EXIST               E_ERR = -3
	E_ERR_PLAYER_ALREADY_LOGINED         E_ERR = -4
	E_ERR_PLAYER_OTHER_PLACE_LOGIN       E_ERR = -5
	E_ERR_PLAYER_TOKEN_ERROR             E_ERR = -6
	E_ERR_PLAYER_SELECT_SERVER_NOT_FOUND E_ERR = -7
	E_ERR_PLAYER_ALREADY_SELECTED_SERVER E_ERR = -8
	E_ERR_PLAYER_IS_OFFLINE              E_ERR = -9
	E_ERR_PLAYER_SEND_TOO_FREQUENTLY     E_ERR = -10
	E_ERR_PLAYER_GOLD_NOT_ENOUGH         E_ERR = -11
	E_ERR_PLAYER_DIAMOND_NOT_ENOUGH      E_ERR = -12
	// 战斗
	E_ERR_PLAYER_SET_ATTACK_MEMBERS_FAILED      E_ERR = -10000
	E_ERR_PLAYER_SET_DEFENSE_MEMBERS_FAILED     E_ERR = -10001
	E_ERR_PLAYER_IS_DEFENSING                   E_ERR = -10002
	E_ERR_PLAYER_BATTLE_RECORD_NOT_FOUND        E_ERR = -10003
	E_ERR_PLAYER_BATTLE_RECORD_FORBIDDEN_DELETE E_ERR = -10004
	E_ERR_PLAYER_BATTLE_RECORD_DATA_INVALID     E_ERR = -10005
	E_ERR_PLAYER_TEAM_MEMBERS_IS_EMPTY          E_ERR = -10006
	E_ERR_PLAYER_TEAM_TYPE_INVALID              E_ERR = -10007
	// 物品装备
	E_ERR_PLAYER_ITEM_NOT_FOUND                           E_ERR = -11000
	E_ERR_PLAYER_ITEM_TABLE_ID_NOT_FOUND                  E_ERR = -11001
	E_ERR_PLAYER_ITEM_NUM_NOT_ENOUGH                      E_ERR = -11002
	E_ERR_PLAYER_ITEM_TYPE_NOT_MATCH                      E_ERR = -11003
	E_ERR_PLAYER_EQUIP_SLOT_EMPTY                         E_ERR = -11004
	E_ERR_PLAYER_EQUIP_TYPE_INVALID                       E_ERR = -11005
	E_ERR_PLAYER_ITEM_FUSION_FAILED                       E_ERR = -11006
	E_ERR_PLAYER_ITEM_COUNT_NOT_ENOUGH_TO_FUSION          E_ERR = -11007
	E_ERR_PLAYER_ITEM_UPGRADE_TYPE_INVALID                E_ERR = -11008
	E_ERR_PLAYER_ITEM_UPGRADE_RES_NOT_ENOUGH              E_ERR = -11009
	E_ERR_PLAYER_ITEM_UPGRADE_SLOT_NO_ITEM                E_ERR = -11010
	E_ERR_PLAYER_ITEM_UPGRADE_DATA_NOT_FOUND              E_ERR = -11011
	E_ERR_PLAYER_ITEM_UPGRADE_FAILED                      E_ERR = -11012
	E_ERR_PLAYER_ITEM_ONE_KEY_UPGRADE_NOT_ENOUGH_MATERIAL E_ERR = -11013
	// 角色
	E_ERR_PLAYER_ROLE_NOT_FOUND                      E_ERR = -12000
	E_ERR_PLAYER_ROLE_TABLE_ID_NOT_FOUND             E_ERR = -12001
	E_ERR_PLAYER_ROLE_LEVEL_DATA_NOT_FOUND           E_ERR = -12002
	E_ERR_PLAYER_ROLE_LEVEL_IS_MAX                   E_ERR = -12003
	E_ERR_PLAYER_ROLE_RANK_IS_MAX                    E_ERR = -12004
	E_ERR_PLAYER_ROLE_RANKUP_DATA_NOT_FOUND          E_ERR = -12005
	E_ERR_PLAYER_ROLE_IN_TEAM_CANT_DECOMPOSE         E_ERR = -12006
	E_ERR_PLAYER_ROLE_FUSION_FAILED                  E_ERR = -12007
	E_ERR_PLAYER_FUSION_NEED_ROLE_NOT_FOUND          E_ERR = -12008
	E_ERR_PLAYER_FUSION_ROLE_INVALID                 E_ERR = -12009
	E_ERR_PLAYER_FUSION_ROLE_TABLE_DATA_NOT_FOUND    E_ERR = -12010
	E_ERR_PLAYER_FUSION_MAIN_ROLE_NOT_FOUND          E_ERR = -12011
	E_ERR_PLAYER_FUSION_ROLE_MATERIAL_NOT_ENOUGH     E_ERR = -12012
	E_ERR_PLAYER_FUSION_MAIN_CARD_INVALID            E_ERR = -12013
	E_ERR_PLAYER_FUSION_NEED_RESOURCE_NOT_ENOUGH     E_ERR = -12014
	E_ERR_PLAYER_ROLE_IS_LOCKED                      E_ERR = -12015
	E_ERR_PLAYER_ROLE_INVENTORY_NOT_ENOUGH_SPACE     E_ERR = -12016
	E_ERR_PLAYER_ROLE_LEFT_SLOT_DROP_FAILED          E_ERR = -12017
	E_ERR_PLAYER_ROLE_OPEN_LEFTSLOT_LEVEL_NOT_ENOUGH E_ERR = -12018
	E_ERR_PLAYER_ROLE_LEFT_SLOT_ALREADY_OPENED       E_ERR = -12019
	// 关卡
	E_ERR_PLAYER_STAGE_TABLE_DATA_NOT_FOUND    E_ERR = -13000
	E_ERR_PLAYER_ALREADY_FIGHT_CAMPAIGN        E_ERR = -13001
	E_ERR_PLAYER_CAMPAIGN_MUST_PlAY_NEXT       E_ERR = -13002
	E_ERR_PLAYER_NOT_FOUND_CAMPAIGN_TABLE_DATA E_ERR = -13003
	E_ERR_PLAYER_CANT_FIGHT_THE_CAMPAIGN       E_ERR = -13004
	E_ERR_PLAYER_STAGE_TABLE_DATA_INVALID      E_ERR = -13005
	E_ERR_PLAYER_STAGE_ROLE_NUM_LIMITED        E_ERR = -13006
	// 邮件
	E_ERR_PLAYER_MAIL_OVER_MAX_COUNT     E_ERR = -14000
	E_ERR_PLAYER_MAIL_NOT_FOUND          E_ERR = -14001
	E_ERR_PLAYER_MAIL_NO_ATTACHED_ITEM   E_ERR = -14002
	E_ERR_PLAYER_MAIL_SEND_FAILED        E_ERR = -14003
	E_ERR_PLAYER_MAIL_RECEIVER_NOT_FOUND E_ERR = -14004
	E_ERR_PLAYER_MAIL_PLAYER_IS_COOLDOWN E_ERR = -14005
	E_ERR_PLAYER_MAIL_TITLE_TOO_LONG     E_ERR = -14006
	E_ERR_PLAYER_MAIL_CONTENT_TOO_LONG   E_ERR = -14007
	// 天赋
	E_ERR_PLAYER_TALENT_NOT_FOUND              E_ERR = -15000
	E_ERR_PLAYER_TALENT_LEVEL_IS_MAX           E_ERR = -15001
	E_ERR_PLAYER_TALENT_UP_NOT_ENOUGH_RESOURCE E_ERR = -15002
	E_ERR_PLAYER_TALENT_UP_NEED_PREV_TALENT    E_ERR = -15003
	// 爬塔
	E_ERR_PLAYER_TOWER_ALREADY_FIGHTED        E_ERR = -16000
	E_ERR_PLAYER_TOWER_NOT_FOUND              E_ERR = -16001
	E_ERR_PLAYER_TOWER_NOT_ENOUGH_STAMINA     E_ERR = -16002
	E_ERR_PLAYER_TOWER_FIGHT_RECORD_NOT_FOUND E_ERR = -16003
	E_ERR_PLAYER_TOWER_ALREADY_HIGHEST        E_ERR = -16004
	E_ERR_PLAYER_TOWER_CANT_FIGHT             E_ERR = -16005
	// 点金手
	E_ERR_PLAYER_GOLDHAND_DATA_NOT_FOUND         E_ERR = -17000
	E_ERR_PLAYER_GOLDHAND_REFRESH_IS_COOLINGDOWN E_ERR = -17001
	// 商店
	E_ERR_PLAYER_SHOP_TABLE_DATA_NOT_FOUND         E_ERR = -18000
	E_ERR_PLAYER_SHOP_ITEM_TABLE_DATA_NOT_FOUND    E_ERR = -18001
	E_ERR_PLAYER_SHOP_REFRESH_RESOURCE_NOT_ENOUGH  E_ERR = -18002
	E_ERR_PLAYER_SHOP_ITEM_NOT_FOUND               E_ERR = -18003
	E_ERR_PLAYER_SHOP_ITEM_NUM_NOT_ENOUGH          E_ERR = -18004
	E_ERR_PLAYER_SHOP_ITEM_BUY_RESOURCE_NOT_ENOUGH E_ERR = -18005
	E_ERR_PLAYER_SHOP_ITEM_RANDOM_DATA_INVALID     E_ERR = -18006
	E_ERR_PLAYER_SHOP_GUILD_NOT_JOIN               E_ERR = -18007
	// 竞技场
	E_ERR_PLAYER_ARENA_ONLY_FIGHT_MATCHED_PLAYER E_ERR = -19000
	E_ERR_PLAYER_ARENA_MATCH_PLAYER_FAILED       E_ERR = -19001
	E_ERR_PLAYER_ARENA_IS_RESETING               E_ERR = -19002
	E_ERR_PLAYER_ARENA_SEASON_IS_RESETING        E_ERR = -19003
	E_ERR_PLAYER_ARENA_TICKETS_NOT_ENOUGH        E_ERR = -19004
	// 排行榜
	E_ERR_RANK_LIST_TYPE_INVALID E_ERR = -20000
	// 活动副本
	E_ERR_PLAYER_ACTIVE_STAGE_PURCHASE_NUM_OUT  E_ERR = -20100
	E_ERR_PLAYER_ACTIVE_STAGE_CHALLENGE_NUM_MAX E_ERR = -20101
	E_ERR_PLAYER_ACTIVE_STAGE_LEVEL_NOT_ENOUGH  E_ERR = -20102
	// 好友
	E_ERR_PLAYER_FRIEND_ALREADY_ADD              E_ERR = -21000
	E_ERR_PLAYER_FRIEND_ALREADY_ASKED            E_ERR = -21001
	E_ERR_PLAYER_FRIEND_PLAYER_NO_IN_ASK_LIST    E_ERR = -21002
	E_ERR_PLAYER_FRIEND_NOT_FOUND                E_ERR = -21003
	E_ERR_PLAYER_FRIEND_BOSS_DATA_NOT_FOUND      E_ERR = -21004
	E_ERR_PLAYER_FRIEND_BOSS_REFRESH_IS_COOLDOWN E_ERR = -21005
	E_ERR_PLAYER_FRIEND_BOSS_IS_FIGHTING         E_ERR = -21006
	E_ERR_PLAYER_FRIEND_BOSS_IS_FINISHED         E_ERR = -21007
	E_ERR_PLAYER_FRIEND_BOSS_NOT_FOUND           E_ERR = -21008
	E_ERR_PLAYER_FRIEND_NONE                     E_ERR = -21009
	E_ERR_PLAYER_FRIEND_BOSS_STAMINA_NOT_ENOUGH  E_ERR = -21010
	// 任务
	E_ERR_PLAYER_TASK_NOT_FOUND         E_ERR = -22000
	E_ERR_PLAYER_TASK_NOT_COMPLETE      E_ERR = -22001
	E_ERR_PLAYER_TASK_NOT_REWARD        E_ERR = -22002
	E_ERR_PLAYER_TASK_ALREADY_REWARDED  E_ERR = -22003
	E_ERR_PLAYER_TASK_PREV_NOT_COMPLETE E_ERR = -22004
	// 探索
	E_ERR_PLAYER_EXPLORE_TABLE_DATA_NOT_FOUND     E_ERR = -23000
	E_ERR_PLAYER_EXPLORE_SEL_ROLES_CANT_SAME      E_ERR = -23001
	E_ERR_PLAYER_EXPLORE_USER_DATA_NOT_FOUND      E_ERR = -23002
	E_ERR_PLAYER_EXPLORE_ALREADY_STARTED          E_ERR = -23003
	E_ERR_PLAYER_EXPLORE_SEL_ROLE_NOT_ENOUGH      E_ERR = -23004
	E_ERR_PLAYER_EXPLORE_SEL_ROLE_STAR_NOT_ENOUGH E_ERR = -23005
	E_ERR_PLAYER_EXPLORE_SEL_ROLE_CAMP_INVALID    E_ERR = -23006
	E_ERR_PLAYER_EXPLORE_SEL_ROLE_TYPE_INVALID    E_ERR = -23007
	E_ERR_PLAYER_EXPLORE_CANT_UNLOCK_IF_STARTED   E_ERR = -23008
	E_ERR_PLAYER_EXPLORE_IS_INCOMPLETE            E_ERR = -23009
	E_ERR_PLAYER_EXPLORE_NO_FIGHT_BOSS_STATE      E_ERR = -23010
	E_ERR_PLAYER_EXPLORE_STATE_NOT_STARTED        E_ERR = -23011
	// 公会
	E_ERR_PLAYER_GUILD_ALREADY_CREATED_OR_JOINED    E_ERR = -24000
	E_ERR_PLAYER_GUILD_CREATED_DB_ERROR             E_ERR = -24001
	E_ERR_PLAYER_GUILD_NOT_ENOUGH_LEVEL_TO_OPEN     E_ERR = -24002
	E_ERR_PLAYER_GUILD_NOT_JOINED                   E_ERR = -24003
	E_ERR_PLAYER_GUILD_DATA_NOT_FOUND               E_ERR = -24004
	E_ERR_PLAYER_GUILD_NO_GUILDS_TO_RECOMMEND       E_ERR = -24005
	E_ERR_PLAYER_GUILD_CANT_GET_WITH_AUTHORITY      E_ERR = -24006
	E_ERR_PLAYER_GUILD_STATE_IS_DELETED_OR_DELETING E_ERR = -24007
	E_ERR_PLAYER_GUILD_STATE_IS_NOT_DELETING        E_ERR = -24008
	E_ERR_PLAYER_GUILD_JOIN_NEED_COOLDOWN           E_ERR = -24009
	E_ERR_PLAYER_GUILD_IS_ALREADY_MEMBER            E_ERR = -24010
	E_ERR_PLAYER_GUILD_MEMBER_NUM_LIMITED           E_ERR = -24011
	E_ERR_PLAYER_GUILD_LEVELUP_TABLE_DATA_NOT_FOUND E_ERR = -24012
	E_ERR_PLAYER_GUILD_PRESIDENT_CANT_QUIT          E_ERR = -24013
	E_ERR_PLAYER_GUILD_SIGN_IN_IS_COOLDOWN          E_ERR = -24014
	E_ERR_PLAYER_GUILD_SET_OFFICER_ONLY_PRESIDENT   E_ERR = -24015
	E_ERR_PLAYER_GUILD_CANT_CHANGE_PRESIDENT_SELF   E_ERR = -24016
	E_ERR_PLAYER_GUILD_RECRUIT_IS_COOLDOWN          E_ERR = -24017
	E_ERR_PLAYER_GUILD_DONATE_TABLE_DAT_NOT_FOUND   E_ERR = -24018
	E_ERR_PLAYER_GUILD_ALREADY_ASKED_DONATE         E_ERR = -24019
	E_ERR_PLAYER_GUILD_CANT_ASK_DONATE_TO_SELF      E_ERR = -24020
	E_ERR_PLAYER_GUILD_NOT_ASK_DONATE               E_ERR = -24021
	E_ERR_PLAYER_GUILD_NOT_ENOUGH_DONATE_SCORE      E_ERR = -24022
	E_ERR_PLAYER_GUILD_NOT_ASK_JOIN                 E_ERR = -24023
	E_ERR_PLAYER_GUILD_NAME_TOO_LONG                E_ERR = -24024
	E_ERR_PLAYER_GUILD_NAME_IS_USED                 E_ERR = -24025
	E_ERR_PLAYER_GUILD_LOGO_INVALID                 E_ERR = -24026
	E_ERR_PLAYER_GUILD_CHANGE_NAME_FAILED           E_ERR = -24027
	// 公会副本
	E_ERR_PLAYER_GUILD_STAGE_TABLE_DATA_NOT_FOUND  E_ERR = -25000
	E_ERR_PLAYER_GUILD_STAGE_STATE_IS_DEAD         E_ERR = -25001
	E_ERR_PLAYER_GUILD_STAGE_EX_DATA_NOT_FOUND     E_ERR = -25002
	E_ERR_PLAYER_GUILD_STAGE_IS_FIGHTING           E_ERR = -25003
	E_ERR_PLAYER_GUILD_STAGE_CANT_FIGHTING         E_ERR = -25004
	E_ERR_PLAYER_GUILD_STAGE_CANT_RESPAWN_NO_DEAD  E_ERR = -25005
	E_ERR_PLAYER_GUILD_STAGE_RESPAWN_NUM_USED_OUT  E_ERR = -25006
	E_ERR_PLAYER_GUILD_STAGE_RESET_IS_COOLDOWN     E_ERR = -25007
	E_ERR_PLAYER_GUILD_STAGE_CANT_GET_DMG_RANKLIST E_ERR = -25008
	// 聊天
	E_ERR_CHAT_SEND_MSG_COOLING_DOWN   E_ERR = -26000
	E_ERR_CHAT_SEND_MSG_BYTES_TOO_LONG E_ERR = -26001
	E_ERR_CHAT_CANT_SEND_WITH_NO_FREE  E_ERR = -26002
	E_ERR_CHAT_PULL_COOLING_DOWN       E_ERR = -26003
	// 充值
	E_ERR_CHARGE_ORDER_DATA_EMPTY        E_ERR = -200000
	E_ERR_CHARGE_ORDER_DATA_INVALID      E_ERR = -200001
	E_ERR_CHARGE_ORDER_SIGNATURE_INVALID E_ERR = -200002
	E_ERR_CHARGE_ORDER_SN_EMPTY          E_ERR = -200003
	E_ERR_CHARGE_ORDER_SN_ALREDY_USED    E_ERR = -200004
	E_ERR_CHARGE_ORDER_VERIFY_FAILED     E_ERR = -200005
)

var E_ERR_name = map[int32]string{
	0:       "NONE",
	-1:      "INTERNAL",
	-2:      "PLAYER_ACC_OR_PASSWORD_ERROR",
	-3:      "PLAYER_NOT_EXIST",
	-4:      "PLAYER_ALREADY_LOGINED",
	-5:      "PLAYER_OTHER_PLACE_LOGIN",
	-6:      "PLAYER_TOKEN_ERROR",
	-7:      "PLAYER_SELECT_SERVER_NOT_FOUND",
	-8:      "PLAYER_ALREADY_SELECTED_SERVER",
	-9:      "PLAYER_IS_OFFLINE",
	-10:     "PLAYER_SEND_TOO_FREQUENTLY",
	-11:     "PLAYER_GOLD_NOT_ENOUGH",
	-12:     "PLAYER_DIAMOND_NOT_ENOUGH",
	-10000:  "PLAYER_SET_ATTACK_MEMBERS_FAILED",
	-10001:  "PLAYER_SET_DEFENSE_MEMBERS_FAILED",
	-10002:  "PLAYER_IS_DEFENSING",
	-10003:  "PLAYER_BATTLE_RECORD_NOT_FOUND",
	-10004:  "PLAYER_BATTLE_RECORD_FORBIDDEN_DELETE",
	-10005:  "PLAYER_BATTLE_RECORD_DATA_INVALID",
	-10006:  "PLAYER_TEAM_MEMBERS_IS_EMPTY",
	-10007:  "PLAYER_TEAM_TYPE_INVALID",
	-11000:  "PLAYER_ITEM_NOT_FOUND",
	-11001:  "PLAYER_ITEM_TABLE_ID_NOT_FOUND",
	-11002:  "PLAYER_ITEM_NUM_NOT_ENOUGH",
	-11003:  "PLAYER_ITEM_TYPE_NOT_MATCH",
	-11004:  "PLAYER_EQUIP_SLOT_EMPTY",
	-11005:  "PLAYER_EQUIP_TYPE_INVALID",
	-11006:  "PLAYER_ITEM_FUSION_FAILED",
	-11007:  "PLAYER_ITEM_COUNT_NOT_ENOUGH_TO_FUSION",
	-11008:  "PLAYER_ITEM_UPGRADE_TYPE_INVALID",
	-11009:  "PLAYER_ITEM_UPGRADE_RES_NOT_ENOUGH",
	-11010:  "PLAYER_ITEM_UPGRADE_SLOT_NO_ITEM",
	-11011:  "PLAYER_ITEM_UPGRADE_DATA_NOT_FOUND",
	-11012:  "PLAYER_ITEM_UPGRADE_FAILED",
	-11013:  "PLAYER_ITEM_ONE_KEY_UPGRADE_NOT_ENOUGH_MATERIAL",
	-12000:  "PLAYER_ROLE_NOT_FOUND",
	-12001:  "PLAYER_ROLE_TABLE_ID_NOT_FOUND",
	-12002:  "PLAYER_ROLE_LEVEL_DATA_NOT_FOUND",
	-12003:  "PLAYER_ROLE_LEVEL_IS_MAX",
	-12004:  "PLAYER_ROLE_RANK_IS_MAX",
	-12005:  "PLAYER_ROLE_RANKUP_DATA_NOT_FOUND",
	-12006:  "PLAYER_ROLE_IN_TEAM_CANT_DECOMPOSE",
	-12007:  "PLAYER_ROLE_FUSION_FAILED",
	-12008:  "PLAYER_FUSION_NEED_ROLE_NOT_FOUND",
	-12009:  "PLAYER_FUSION_ROLE_INVALID",
	-12010:  "PLAYER_FUSION_ROLE_TABLE_DATA_NOT_FOUND",
	-12011:  "PLAYER_FUSION_MAIN_ROLE_NOT_FOUND",
	-12012:  "PLAYER_FUSION_ROLE_MATERIAL_NOT_ENOUGH",
	-12013:  "PLAYER_FUSION_MAIN_CARD_INVALID",
	-12014:  "PLAYER_FUSION_NEED_RESOURCE_NOT_ENOUGH",
	-12015:  "PLAYER_ROLE_IS_LOCKED",
	-12016:  "PLAYER_ROLE_INVENTORY_NOT_ENOUGH_SPACE",
	-12017:  "PLAYER_ROLE_LEFT_SLOT_DROP_FAILED",
	-12018:  "PLAYER_ROLE_OPEN_LEFTSLOT_LEVEL_NOT_ENOUGH",
	-12019:  "PLAYER_ROLE_LEFT_SLOT_ALREADY_OPENED",
	-13000:  "PLAYER_STAGE_TABLE_DATA_NOT_FOUND",
	-13001:  "PLAYER_ALREADY_FIGHT_CAMPAIGN",
	-13002:  "PLAYER_CAMPAIGN_MUST_PlAY_NEXT",
	-13003:  "PLAYER_NOT_FOUND_CAMPAIGN_TABLE_DATA",
	-13004:  "PLAYER_CANT_FIGHT_THE_CAMPAIGN",
	-13005:  "PLAYER_STAGE_TABLE_DATA_INVALID",
	-13006:  "PLAYER_STAGE_ROLE_NUM_LIMITED",
	-14000:  "PLAYER_MAIL_OVER_MAX_COUNT",
	-14001:  "PLAYER_MAIL_NOT_FOUND",
	-14002:  "PLAYER_MAIL_NO_ATTACHED_ITEM",
	-14003:  "PLAYER_MAIL_SEND_FAILED",
	-14004:  "PLAYER_MAIL_RECEIVER_NOT_FOUND",
	-14005:  "PLAYER_MAIL_PLAYER_IS_COOLDOWN",
	-14006:  "PLAYER_MAIL_TITLE_TOO_LONG",
	-14007:  "PLAYER_MAIL_CONTENT_TOO_LONG",
	-15000:  "PLAYER_TALENT_NOT_FOUND",
	-15001:  "PLAYER_TALENT_LEVEL_IS_MAX",
	-15002:  "PLAYER_TALENT_UP_NOT_ENOUGH_RESOURCE",
	-15003:  "PLAYER_TALENT_UP_NEED_PREV_TALENT",
	-16000:  "PLAYER_TOWER_ALREADY_FIGHTED",
	-16001:  "PLAYER_TOWER_NOT_FOUND",
	-16002:  "PLAYER_TOWER_NOT_ENOUGH_STAMINA",
	-16003:  "PLAYER_TOWER_FIGHT_RECORD_NOT_FOUND",
	-16004:  "PLAYER_TOWER_ALREADY_HIGHEST",
	-16005:  "PLAYER_TOWER_CANT_FIGHT",
	-17000:  "PLAYER_GOLDHAND_DATA_NOT_FOUND",
	-17001:  "PLAYER_GOLDHAND_REFRESH_IS_COOLINGDOWN",
	-18000:  "PLAYER_SHOP_TABLE_DATA_NOT_FOUND",
	-18001:  "PLAYER_SHOP_ITEM_TABLE_DATA_NOT_FOUND",
	-18002:  "PLAYER_SHOP_REFRESH_RESOURCE_NOT_ENOUGH",
	-18003:  "PLAYER_SHOP_ITEM_NOT_FOUND",
	-18004:  "PLAYER_SHOP_ITEM_NUM_NOT_ENOUGH",
	-18005:  "PLAYER_SHOP_ITEM_BUY_RESOURCE_NOT_ENOUGH",
	-18006:  "PLAYER_SHOP_ITEM_RANDOM_DATA_INVALID",
	-18007:  "PLAYER_SHOP_GUILD_NOT_JOIN",
	-19000:  "PLAYER_ARENA_ONLY_FIGHT_MATCHED_PLAYER",
	-19001:  "PLAYER_ARENA_MATCH_PLAYER_FAILED",
	-19002:  "PLAYER_ARENA_IS_RESETING",
	-19003:  "PLAYER_ARENA_SEASON_IS_RESETING",
	-19004:  "PLAYER_ARENA_TICKETS_NOT_ENOUGH",
	-20000:  "RANK_LIST_TYPE_INVALID",
	-20100:  "PLAYER_ACTIVE_STAGE_PURCHASE_NUM_OUT",
	-20101:  "PLAYER_ACTIVE_STAGE_CHALLENGE_NUM_MAX",
	-20102:  "PLAYER_ACTIVE_STAGE_LEVEL_NOT_ENOUGH",
	-21000:  "PLAYER_FRIEND_ALREADY_ADD",
	-21001:  "PLAYER_FRIEND_ALREADY_ASKED",
	-21002:  "PLAYER_FRIEND_PLAYER_NO_IN_ASK_LIST",
	-21003:  "PLAYER_FRIEND_NOT_FOUND",
	-21004:  "PLAYER_FRIEND_BOSS_DATA_NOT_FOUND",
	-21005:  "PLAYER_FRIEND_BOSS_REFRESH_IS_COOLDOWN",
	-21006:  "PLAYER_FRIEND_BOSS_IS_FIGHTING",
	-21007:  "PLAYER_FRIEND_BOSS_IS_FINISHED",
	-21008:  "PLAYER_FRIEND_BOSS_NOT_FOUND",
	-21009:  "PLAYER_FRIEND_NONE",
	-21010:  "PLAYER_FRIEND_BOSS_STAMINA_NOT_ENOUGH",
	-22000:  "PLAYER_TASK_NOT_FOUND",
	-22001:  "PLAYER_TASK_NOT_COMPLETE",
	-22002:  "PLAYER_TASK_NOT_REWARD",
	-22003:  "PLAYER_TASK_ALREADY_REWARDED",
	-22004:  "PLAYER_TASK_PREV_NOT_COMPLETE",
	-23000:  "PLAYER_EXPLORE_TABLE_DATA_NOT_FOUND",
	-23001:  "PLAYER_EXPLORE_SEL_ROLES_CANT_SAME",
	-23002:  "PLAYER_EXPLORE_USER_DATA_NOT_FOUND",
	-23003:  "PLAYER_EXPLORE_ALREADY_STARTED",
	-23004:  "PLAYER_EXPLORE_SEL_ROLE_NOT_ENOUGH",
	-23005:  "PLAYER_EXPLORE_SEL_ROLE_STAR_NOT_ENOUGH",
	-23006:  "PLAYER_EXPLORE_SEL_ROLE_CAMP_INVALID",
	-23007:  "PLAYER_EXPLORE_SEL_ROLE_TYPE_INVALID",
	-23008:  "PLAYER_EXPLORE_CANT_UNLOCK_IF_STARTED",
	-23009:  "PLAYER_EXPLORE_IS_INCOMPLETE",
	-23010:  "PLAYER_EXPLORE_NO_FIGHT_BOSS_STATE",
	-23011:  "PLAYER_EXPLORE_STATE_NOT_STARTED",
	-24000:  "PLAYER_GUILD_ALREADY_CREATED_OR_JOINED",
	-24001:  "PLAYER_GUILD_CREATED_DB_ERROR",
	-24002:  "PLAYER_GUILD_NOT_ENOUGH_LEVEL_TO_OPEN",
	-24003:  "PLAYER_GUILD_NOT_JOINED",
	-24004:  "PLAYER_GUILD_DATA_NOT_FOUND",
	-24005:  "PLAYER_GUILD_NO_GUILDS_TO_RECOMMEND",
	-24006:  "PLAYER_GUILD_CANT_GET_WITH_AUTHORITY",
	-24007:  "PLAYER_GUILD_STATE_IS_DELETED_OR_DELETING",
	-24008:  "PLAYER_GUILD_STATE_IS_NOT_DELETING",
	-24009:  "PLAYER_GUILD_JOIN_NEED_COOLDOWN",
	-24010:  "PLAYER_GUILD_IS_ALREADY_MEMBER",
	-24011:  "PLAYER_GUILD_MEMBER_NUM_LIMITED",
	-24012:  "PLAYER_GUILD_LEVELUP_TABLE_DATA_NOT_FOUND",
	-24013:  "PLAYER_GUILD_PRESIDENT_CANT_QUIT",
	-24014:  "PLAYER_GUILD_SIGN_IN_IS_COOLDOWN",
	-24015:  "PLAYER_GUILD_SET_OFFICER_ONLY_PRESIDENT",
	-24016:  "PLAYER_GUILD_CANT_CHANGE_PRESIDENT_SELF",
	-24017:  "PLAYER_GUILD_RECRUIT_IS_COOLDOWN",
	-24018:  "PLAYER_GUILD_DONATE_TABLE_DAT_NOT_FOUND",
	-24019:  "PLAYER_GUILD_ALREADY_ASKED_DONATE",
	-24020:  "PLAYER_GUILD_CANT_ASK_DONATE_TO_SELF",
	-24021:  "PLAYER_GUILD_NOT_ASK_DONATE",
	-24022:  "PLAYER_GUILD_NOT_ENOUGH_DONATE_SCORE",
	-24023:  "PLAYER_GUILD_NOT_ASK_JOIN",
	-24024:  "PLAYER_GUILD_NAME_TOO_LONG",
	-24025:  "PLAYER_GUILD_NAME_IS_USED",
	-24026:  "PLAYER_GUILD_LOGO_INVALID",
	-24027:  "PLAYER_GUILD_CHANGE_NAME_FAILED",
	-25000:  "PLAYER_GUILD_STAGE_TABLE_DATA_NOT_FOUND",
	-25001:  "PLAYER_GUILD_STAGE_STATE_IS_DEAD",
	-25002:  "PLAYER_GUILD_STAGE_EX_DATA_NOT_FOUND",
	-25003:  "PLAYER_GUILD_STAGE_IS_FIGHTING",
	-25004:  "PLAYER_GUILD_STAGE_CANT_FIGHTING",
	-25005:  "PLAYER_GUILD_STAGE_CANT_RESPAWN_NO_DEAD",
	-25006:  "PLAYER_GUILD_STAGE_RESPAWN_NUM_USED_OUT",
	-25007:  "PLAYER_GUILD_STAGE_RESET_IS_COOLDOWN",
	-25008:  "PLAYER_GUILD_STAGE_CANT_GET_DMG_RANKLIST",
	-26000:  "CHAT_SEND_MSG_COOLING_DOWN",
	-26001:  "CHAT_SEND_MSG_BYTES_TOO_LONG",
	-26002:  "CHAT_CANT_SEND_WITH_NO_FREE",
	-26003:  "CHAT_PULL_COOLING_DOWN",
	-200000: "CHARGE_ORDER_DATA_EMPTY",
	-200001: "CHARGE_ORDER_DATA_INVALID",
	-200002: "CHARGE_ORDER_SIGNATURE_INVALID",
	-200003: "CHARGE_ORDER_SN_EMPTY",
	-200004: "CHARGE_ORDER_SN_ALREDY_USED",
	-200005: "CHARGE_ORDER_VERIFY_FAILED",
}
var E_ERR_value = map[string]int32{
	"NONE":                                            0,
	"INTERNAL":                                        -1,
	"PLAYER_ACC_OR_PASSWORD_ERROR":                    -2,
	"PLAYER_NOT_EXIST":                                -3,
	"PLAYER_ALREADY_LOGINED":                          -4,
	"PLAYER_OTHER_PLACE_LOGIN":                        -5,
	"PLAYER_TOKEN_ERROR":                              -6,
	"PLAYER_SELECT_SERVER_NOT_FOUND":                  -7,
	"PLAYER_ALREADY_SELECTED_SERVER":                  -8,
	"PLAYER_IS_OFFLINE":                               -9,
	"PLAYER_SEND_TOO_FREQUENTLY":                      -10,
	"PLAYER_GOLD_NOT_ENOUGH":                          -11,
	"PLAYER_DIAMOND_NOT_ENOUGH":                       -12,
	"PLAYER_SET_ATTACK_MEMBERS_FAILED":                -10000,
	"PLAYER_SET_DEFENSE_MEMBERS_FAILED":               -10001,
	"PLAYER_IS_DEFENSING":                             -10002,
	"PLAYER_BATTLE_RECORD_NOT_FOUND":                  -10003,
	"PLAYER_BATTLE_RECORD_FORBIDDEN_DELETE":           -10004,
	"PLAYER_BATTLE_RECORD_DATA_INVALID":               -10005,
	"PLAYER_TEAM_MEMBERS_IS_EMPTY":                    -10006,
	"PLAYER_TEAM_TYPE_INVALID":                        -10007,
	"PLAYER_ITEM_NOT_FOUND":                           -11000,
	"PLAYER_ITEM_TABLE_ID_NOT_FOUND":                  -11001,
	"PLAYER_ITEM_NUM_NOT_ENOUGH":                      -11002,
	"PLAYER_ITEM_TYPE_NOT_MATCH":                      -11003,
	"PLAYER_EQUIP_SLOT_EMPTY":                         -11004,
	"PLAYER_EQUIP_TYPE_INVALID":                       -11005,
	"PLAYER_ITEM_FUSION_FAILED":                       -11006,
	"PLAYER_ITEM_COUNT_NOT_ENOUGH_TO_FUSION":          -11007,
	"PLAYER_ITEM_UPGRADE_TYPE_INVALID":                -11008,
	"PLAYER_ITEM_UPGRADE_RES_NOT_ENOUGH":              -11009,
	"PLAYER_ITEM_UPGRADE_SLOT_NO_ITEM":                -11010,
	"PLAYER_ITEM_UPGRADE_DATA_NOT_FOUND":              -11011,
	"PLAYER_ITEM_UPGRADE_FAILED":                      -11012,
	"PLAYER_ITEM_ONE_KEY_UPGRADE_NOT_ENOUGH_MATERIAL": -11013,
	"PLAYER_ROLE_NOT_FOUND":                           -12000,
	"PLAYER_ROLE_TABLE_ID_NOT_FOUND":                  -12001,
	"PLAYER_ROLE_LEVEL_DATA_NOT_FOUND":                -12002,
	"PLAYER_ROLE_LEVEL_IS_MAX":                        -12003,
	"PLAYER_ROLE_RANK_IS_MAX":                         -12004,
	"PLAYER_ROLE_RANKUP_DATA_NOT_FOUND":               -12005,
	"PLAYER_ROLE_IN_TEAM_CANT_DECOMPOSE":              -12006,
	"PLAYER_ROLE_FUSION_FAILED":                       -12007,
	"PLAYER_FUSION_NEED_ROLE_NOT_FOUND":               -12008,
	"PLAYER_FUSION_ROLE_INVALID":                      -12009,
	"PLAYER_FUSION_ROLE_TABLE_DATA_NOT_FOUND":         -12010,
	"PLAYER_FUSION_MAIN_ROLE_NOT_FOUND":               -12011,
	"PLAYER_FUSION_ROLE_MATERIAL_NOT_ENOUGH":          -12012,
	"PLAYER_FUSION_MAIN_CARD_INVALID":                 -12013,
	"PLAYER_FUSION_NEED_RESOURCE_NOT_ENOUGH":          -12014,
	"PLAYER_ROLE_IS_LOCKED":                           -12015,
	"PLAYER_ROLE_INVENTORY_NOT_ENOUGH_SPACE":          -12016,
	"PLAYER_ROLE_LEFT_SLOT_DROP_FAILED":               -12017,
	"PLAYER_ROLE_OPEN_LEFTSLOT_LEVEL_NOT_ENOUGH":      -12018,
	"PLAYER_ROLE_LEFT_SLOT_ALREADY_OPENED":            -12019,
	"PLAYER_STAGE_TABLE_DATA_NOT_FOUND":               -13000,
	"PLAYER_ALREADY_FIGHT_CAMPAIGN":                   -13001,
	"PLAYER_CAMPAIGN_MUST_PlAY_NEXT":                  -13002,
	"PLAYER_NOT_FOUND_CAMPAIGN_TABLE_DATA":            -13003,
	"PLAYER_CANT_FIGHT_THE_CAMPAIGN":                  -13004,
	"PLAYER_STAGE_TABLE_DATA_INVALID":                 -13005,
	"PLAYER_STAGE_ROLE_NUM_LIMITED":                   -13006,
	"PLAYER_MAIL_OVER_MAX_COUNT":                      -14000,
	"PLAYER_MAIL_NOT_FOUND":                           -14001,
	"PLAYER_MAIL_NO_ATTACHED_ITEM":                    -14002,
	"PLAYER_MAIL_SEND_FAILED":                         -14003,
	"PLAYER_MAIL_RECEIVER_NOT_FOUND":                  -14004,
	"PLAYER_MAIL_PLAYER_IS_COOLDOWN":                  -14005,
	"PLAYER_MAIL_TITLE_TOO_LONG":                      -14006,
	"PLAYER_MAIL_CONTENT_TOO_LONG":                    -14007,
	"PLAYER_TALENT_NOT_FOUND":                         -15000,
	"PLAYER_TALENT_LEVEL_IS_MAX":                      -15001,
	"PLAYER_TALENT_UP_NOT_ENOUGH_RESOURCE":            -15002,
	"PLAYER_TALENT_UP_NEED_PREV_TALENT":               -15003,
	"PLAYER_TOWER_ALREADY_FIGHTED":                    -16000,
	"PLAYER_TOWER_NOT_FOUND":                          -16001,
	"PLAYER_TOWER_NOT_ENOUGH_STAMINA":                 -16002,
	"PLAYER_TOWER_FIGHT_RECORD_NOT_FOUND":             -16003,
	"PLAYER_TOWER_ALREADY_HIGHEST":                    -16004,
	"PLAYER_TOWER_CANT_FIGHT":                         -16005,
	"PLAYER_GOLDHAND_DATA_NOT_FOUND":                  -17000,
	"PLAYER_GOLDHAND_REFRESH_IS_COOLINGDOWN":          -17001,
	"PLAYER_SHOP_TABLE_DATA_NOT_FOUND":                -18000,
	"PLAYER_SHOP_ITEM_TABLE_DATA_NOT_FOUND":           -18001,
	"PLAYER_SHOP_REFRESH_RESOURCE_NOT_ENOUGH":         -18002,
	"PLAYER_SHOP_ITEM_NOT_FOUND":                      -18003,
	"PLAYER_SHOP_ITEM_NUM_NOT_ENOUGH":                 -18004,
	"PLAYER_SHOP_ITEM_BUY_RESOURCE_NOT_ENOUGH":        -18005,
	"PLAYER_SHOP_ITEM_RANDOM_DATA_INVALID":            -18006,
	"PLAYER_SHOP_GUILD_NOT_JOIN":                      -18007,
	"PLAYER_ARENA_ONLY_FIGHT_MATCHED_PLAYER":          -19000,
	"PLAYER_ARENA_MATCH_PLAYER_FAILED":                -19001,
	"PLAYER_ARENA_IS_RESETING":                        -19002,
	"PLAYER_ARENA_SEASON_IS_RESETING":                 -19003,
	"PLAYER_ARENA_TICKETS_NOT_ENOUGH":                 -19004,
	"RANK_LIST_TYPE_INVALID":                          -20000,
	"PLAYER_ACTIVE_STAGE_PURCHASE_NUM_OUT":            -20100,
	"PLAYER_ACTIVE_STAGE_CHALLENGE_NUM_MAX":           -20101,
	"PLAYER_ACTIVE_STAGE_LEVEL_NOT_ENOUGH":            -20102,
	"PLAYER_FRIEND_ALREADY_ADD":                       -21000,
	"PLAYER_FRIEND_ALREADY_ASKED":                     -21001,
	"PLAYER_FRIEND_PLAYER_NO_IN_ASK_LIST":             -21002,
	"PLAYER_FRIEND_NOT_FOUND":                         -21003,
	"PLAYER_FRIEND_BOSS_DATA_NOT_FOUND":               -21004,
	"PLAYER_FRIEND_BOSS_REFRESH_IS_COOLDOWN":          -21005,
	"PLAYER_FRIEND_BOSS_IS_FIGHTING":                  -21006,
	"PLAYER_FRIEND_BOSS_IS_FINISHED":                  -21007,
	"PLAYER_FRIEND_BOSS_NOT_FOUND":                    -21008,
	"PLAYER_FRIEND_NONE":                              -21009,
	"PLAYER_FRIEND_BOSS_STAMINA_NOT_ENOUGH":           -21010,
	"PLAYER_TASK_NOT_FOUND":                           -22000,
	"PLAYER_TASK_NOT_COMPLETE":                        -22001,
	"PLAYER_TASK_NOT_REWARD":                          -22002,
	"PLAYER_TASK_ALREADY_REWARDED":                    -22003,
	"PLAYER_TASK_PREV_NOT_COMPLETE":                   -22004,
	"PLAYER_EXPLORE_TABLE_DATA_NOT_FOUND":             -23000,
	"PLAYER_EXPLORE_SEL_ROLES_CANT_SAME":              -23001,
	"PLAYER_EXPLORE_USER_DATA_NOT_FOUND":              -23002,
	"PLAYER_EXPLORE_ALREADY_STARTED":                  -23003,
	"PLAYER_EXPLORE_SEL_ROLE_NOT_ENOUGH":              -23004,
	"PLAYER_EXPLORE_SEL_ROLE_STAR_NOT_ENOUGH":         -23005,
	"PLAYER_EXPLORE_SEL_ROLE_CAMP_INVALID":            -23006,
	"PLAYER_EXPLORE_SEL_ROLE_TYPE_INVALID":            -23007,
	"PLAYER_EXPLORE_CANT_UNLOCK_IF_STARTED":           -23008,
	"PLAYER_EXPLORE_IS_INCOMPLETE":                    -23009,
	"PLAYER_EXPLORE_NO_FIGHT_BOSS_STATE":              -23010,
	"PLAYER_EXPLORE_STATE_NOT_STARTED":                -23011,
	"PLAYER_GUILD_ALREADY_CREATED_OR_JOINED":          -24000,
	"PLAYER_GUILD_CREATED_DB_ERROR":                   -24001,
	"PLAYER_GUILD_NOT_ENOUGH_LEVEL_TO_OPEN":           -24002,
	"PLAYER_GUILD_NOT_JOINED":                         -24003,
	"PLAYER_GUILD_DATA_NOT_FOUND":                     -24004,
	"PLAYER_GUILD_NO_GUILDS_TO_RECOMMEND":             -24005,
	"PLAYER_GUILD_CANT_GET_WITH_AUTHORITY":            -24006,
	"PLAYER_GUILD_STATE_IS_DELETED_OR_DELETING":       -24007,
	"PLAYER_GUILD_STATE_IS_NOT_DELETING":              -24008,
	"PLAYER_GUILD_JOIN_NEED_COOLDOWN":                 -24009,
	"PLAYER_GUILD_IS_ALREADY_MEMBER":                  -24010,
	"PLAYER_GUILD_MEMBER_NUM_LIMITED":                 -24011,
	"PLAYER_GUILD_LEVELUP_TABLE_DATA_NOT_FOUND":       -24012,
	"PLAYER_GUILD_PRESIDENT_CANT_QUIT":                -24013,
	"PLAYER_GUILD_SIGN_IN_IS_COOLDOWN":                -24014,
	"PLAYER_GUILD_SET_OFFICER_ONLY_PRESIDENT":         -24015,
	"PLAYER_GUILD_CANT_CHANGE_PRESIDENT_SELF":         -24016,
	"PLAYER_GUILD_RECRUIT_IS_COOLDOWN":                -24017,
	"PLAYER_GUILD_DONATE_TABLE_DAT_NOT_FOUND":         -24018,
	"PLAYER_GUILD_ALREADY_ASKED_DONATE":               -24019,
	"PLAYER_GUILD_CANT_ASK_DONATE_TO_SELF":            -24020,
	"PLAYER_GUILD_NOT_ASK_DONATE":                     -24021,
	"PLAYER_GUILD_NOT_ENOUGH_DONATE_SCORE":            -24022,
	"PLAYER_GUILD_NOT_ASK_JOIN":                       -24023,
	"PLAYER_GUILD_NAME_TOO_LONG":                      -24024,
	"PLAYER_GUILD_NAME_IS_USED":                       -24025,
	"PLAYER_GUILD_LOGO_INVALID":                       -24026,
	"PLAYER_GUILD_CHANGE_NAME_FAILED":                 -24027,
	"PLAYER_GUILD_STAGE_TABLE_DATA_NOT_FOUND":         -25000,
	"PLAYER_GUILD_STAGE_STATE_IS_DEAD":                -25001,
	"PLAYER_GUILD_STAGE_EX_DATA_NOT_FOUND":            -25002,
	"PLAYER_GUILD_STAGE_IS_FIGHTING":                  -25003,
	"PLAYER_GUILD_STAGE_CANT_FIGHTING":                -25004,
	"PLAYER_GUILD_STAGE_CANT_RESPAWN_NO_DEAD":         -25005,
	"PLAYER_GUILD_STAGE_RESPAWN_NUM_USED_OUT":         -25006,
	"PLAYER_GUILD_STAGE_RESET_IS_COOLDOWN":            -25007,
	"PLAYER_GUILD_STAGE_CANT_GET_DMG_RANKLIST":        -25008,
	"CHAT_SEND_MSG_COOLING_DOWN":                      -26000,
	"CHAT_SEND_MSG_BYTES_TOO_LONG":                    -26001,
	"CHAT_CANT_SEND_WITH_NO_FREE":                     -26002,
	"CHAT_PULL_COOLING_DOWN":                          -26003,
	"CHARGE_ORDER_DATA_EMPTY":                         -200000,
	"CHARGE_ORDER_DATA_INVALID":                       -200001,
	"CHARGE_ORDER_SIGNATURE_INVALID":                  -200002,
	"CHARGE_ORDER_SN_EMPTY":                           -200003,
	"CHARGE_ORDER_SN_ALREDY_USED":                     -200004,
	"CHARGE_ORDER_VERIFY_FAILED":                      -200005,
}

func (x E_ERR) String() string {
	return proto.EnumName(E_ERR_name, int32(x))
}
func (E_ERR) EnumDescriptor() ([]byte, []int) { return fileDescriptor0, []int{0} }

// 红点状态
type MODULE int32

const (
	MODULE_STATE_NONE                 MODULE = 0
	MODULE_STATE_HANGUP_RANDOM_INCOME MODULE = 1
	MODULE_STATE_NEW_MAIL             MODULE = 2
)

var MODULE_name = map[int32]string{
	0: "STATE_NONE",
	1: "STATE_HANGUP_RANDOM_INCOME",
	2: "STATE_NEW_MAIL",
}
var MODULE_value = map[string]int32{
	"STATE_NONE":                 0,
	"STATE_HANGUP_RANDOM_INCOME": 1,
	"STATE_NEW_MAIL":             2,
}

func (x MODULE) String() string {
	return proto.EnumName(MODULE_name, int32(x))
}
func (MODULE) EnumDescriptor() ([]byte, []int) { return fileDescriptor0, []int{1} }

// 红点提示通知
type S2CStateNotify struct {
	States       []int32 `protobuf:"varint,1,rep,packed,name=States" json:"States,omitempty"`
	CancelStates []int32 `protobuf:"varint,2,rep,packed,name=CancelStates" json:"CancelStates,omitempty"`
}

func (m *S2CStateNotify) Reset()                    { *m = S2CStateNotify{} }
func (m *S2CStateNotify) String() string            { return proto.CompactTextString(m) }
func (*S2CStateNotify) ProtoMessage()               {}
func (*S2CStateNotify) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{0} }

func (m *S2CStateNotify) GetStates() []int32 {
	if m != nil {
		return m.States
	}
	return nil
}

func (m *S2CStateNotify) GetCancelStates() []int32 {
	if m != nil {
		return m.CancelStates
	}
	return nil
}

// 心跳
type C2SHeartbeat struct {
}

func (m *C2SHeartbeat) Reset()                    { *m = C2SHeartbeat{} }
func (m *C2SHeartbeat) String() string            { return proto.CompactTextString(m) }
func (*C2SHeartbeat) ProtoMessage()               {}
func (*C2SHeartbeat) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{1} }

type S2CHeartbeat struct {
	SysTime int32 `protobuf:"varint,1,opt,name=SysTime" json:"SysTime,omitempty"`
}

func (m *S2CHeartbeat) Reset()                    { *m = S2CHeartbeat{} }
func (m *S2CHeartbeat) String() string            { return proto.CompactTextString(m) }
func (*S2CHeartbeat) ProtoMessage()               {}
func (*S2CHeartbeat) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{2} }

func (m *S2CHeartbeat) GetSysTime() int32 {
	if m != nil {
		return m.SysTime
	}
	return 0
}

// 请求数据同步
type C2SDataSyncRequest struct {
	Base      bool `protobuf:"varint,1,opt,name=Base" json:"Base,omitempty"`
	Items     bool `protobuf:"varint,2,opt,name=Items" json:"Items,omitempty"`
	Roles     bool `protobuf:"varint,3,opt,name=Roles" json:"Roles,omitempty"`
	Teams     bool `protobuf:"varint,4,opt,name=Teams" json:"Teams,omitempty"`
	Campaigns bool `protobuf:"varint,5,opt,name=Campaigns" json:"Campaigns,omitempty"`
}

func (m *C2SDataSyncRequest) Reset()                    { *m = C2SDataSyncRequest{} }
func (m *C2SDataSyncRequest) String() string            { return proto.CompactTextString(m) }
func (*C2SDataSyncRequest) ProtoMessage()               {}
func (*C2SDataSyncRequest) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{3} }

func (m *C2SDataSyncRequest) GetBase() bool {
	if m != nil {
		return m.Base
	}
	return false
}

func (m *C2SDataSyncRequest) GetItems() bool {
	if m != nil {
		return m.Items
	}
	return false
}

func (m *C2SDataSyncRequest) GetRoles() bool {
	if m != nil {
		return m.Roles
	}
	return false
}

func (m *C2SDataSyncRequest) GetTeams() bool {
	if m != nil {
		return m.Teams
	}
	return false
}

func (m *C2SDataSyncRequest) GetCampaigns() bool {
	if m != nil {
		return m.Campaigns
	}
	return false
}

// 测试用消息
type C2S_TEST_COMMAND struct {
	Cmd  string   `protobuf:"bytes,1,opt,name=cmd" json:"cmd,omitempty"`
	Args []string `protobuf:"bytes,2,rep,name=args" json:"args,omitempty"`
}

func (m *C2S_TEST_COMMAND) Reset()                    { *m = C2S_TEST_COMMAND{} }
func (m *C2S_TEST_COMMAND) String() string            { return proto.CompactTextString(m) }
func (*C2S_TEST_COMMAND) ProtoMessage()               {}
func (*C2S_TEST_COMMAND) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{4} }

func (m *C2S_TEST_COMMAND) GetCmd() string {
	if m != nil {
		return m.Cmd
	}
	return ""
}

func (m *C2S_TEST_COMMAND) GetArgs() []string {
	if m != nil {
		return m.Args
	}
	return nil
}

// 物品
type ItemInfo struct {
	ItemCfgId int32 `protobuf:"varint,1,opt,name=ItemCfgId" json:"ItemCfgId,omitempty"`
	ItemNum   int32 `protobuf:"varint,2,opt,name=ItemNum" json:"ItemNum,omitempty"`
}

func (m *ItemInfo) Reset()                    { *m = ItemInfo{} }
func (m *ItemInfo) String() string            { return proto.CompactTextString(m) }
func (*ItemInfo) ProtoMessage()               {}
func (*ItemInfo) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{5} }

func (m *ItemInfo) GetItemCfgId() int32 {
	if m != nil {
		return m.ItemCfgId
	}
	return 0
}

func (m *ItemInfo) GetItemNum() int32 {
	if m != nil {
		return m.ItemNum
	}
	return 0
}

// 登陆
type C2SLoginRequest struct {
	Acc      string `protobuf:"bytes,1,opt,name=Acc" json:"Acc,omitempty"`
	Password string `protobuf:"bytes,2,opt,name=Password" json:"Password,omitempty"`
	Channel  string `protobuf:"bytes,3,opt,name=Channel" json:"Channel,omitempty"`
}

func (m *C2SLoginRequest) Reset()                    { *m = C2SLoginRequest{} }
func (m *C2SLoginRequest) String() string            { return proto.CompactTextString(m) }
func (*C2SLoginRequest) ProtoMessage()               {}
func (*C2SLoginRequest) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{6} }

func (m *C2SLoginRequest) GetAcc() string {
	if m != nil {
		return m.Acc
	}
	return ""
}

func (m *C2SLoginRequest) GetPassword() string {
	if m != nil {
		return m.Password
	}
	return ""
}

func (m *C2SLoginRequest) GetChannel() string {
	if m != nil {
		return m.Channel
	}
	return ""
}

// 服务器信息
type ServerInfo struct {
	Id   int32  `protobuf:"varint,1,opt,name=Id" json:"Id,omitempty"`
	Name string `protobuf:"bytes,2,opt,name=Name" json:"Name,omitempty"`
	IP   string `protobuf:"bytes,3,opt,name=IP" json:"IP,omitempty"`
}

func (m *ServerInfo) Reset()                    { *m = ServerInfo{} }
func (m *ServerInfo) String() string            { return proto.CompactTextString(m) }
func (*ServerInfo) ProtoMessage()               {}
func (*ServerInfo) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{7} }

func (m *ServerInfo) GetId() int32 {
	if m != nil {
		return m.Id
	}
	return 0
}

func (m *ServerInfo) GetName() string {
	if m != nil {
		return m.Name
	}
	return ""
}

func (m *ServerInfo) GetIP() string {
	if m != nil {
		return m.IP
	}
	return ""
}

// 登陆返回
type S2CLoginResponse struct {
	Acc     string        `protobuf:"bytes,1,opt,name=Acc" json:"Acc,omitempty"`
	Token   string        `protobuf:"bytes,2,opt,name=Token" json:"Token,omitempty"`
	Servers []*ServerInfo `protobuf:"bytes,3,rep,name=Servers" json:"Servers,omitempty"`
}

func (m *S2CLoginResponse) Reset()                    { *m = S2CLoginResponse{} }
func (m *S2CLoginResponse) String() string            { return proto.CompactTextString(m) }
func (*S2CLoginResponse) ProtoMessage()               {}
func (*S2CLoginResponse) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{8} }

func (m *S2CLoginResponse) GetAcc() string {
	if m != nil {
		return m.Acc
	}
	return ""
}

func (m *S2CLoginResponse) GetToken() string {
	if m != nil {
		return m.Token
	}
	return ""
}

func (m *S2CLoginResponse) GetServers() []*ServerInfo {
	if m != nil {
		return m.Servers
	}
	return nil
}

// / 其它地方登录
type S2COtherPlaceLogin struct {
}

func (m *S2COtherPlaceLogin) Reset()                    { *m = S2COtherPlaceLogin{} }
func (m *S2COtherPlaceLogin) String() string            { return proto.CompactTextString(m) }
func (*S2COtherPlaceLogin) ProtoMessage()               {}
func (*S2COtherPlaceLogin) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{9} }

// 选择服务器
type C2SSelectServerRequest struct {
	Acc      string `protobuf:"bytes,1,opt,name=Acc" json:"Acc,omitempty"`
	Token    string `protobuf:"bytes,2,opt,name=Token" json:"Token,omitempty"`
	ServerId int32  `protobuf:"varint,3,opt,name=ServerId" json:"ServerId,omitempty"`
}

func (m *C2SSelectServerRequest) Reset()                    { *m = C2SSelectServerRequest{} }
func (m *C2SSelectServerRequest) String() string            { return proto.CompactTextString(m) }
func (*C2SSelectServerRequest) ProtoMessage()               {}
func (*C2SSelectServerRequest) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{10} }

func (m *C2SSelectServerRequest) GetAcc() string {
	if m != nil {
		return m.Acc
	}
	return ""
}

func (m *C2SSelectServerRequest) GetToken() string {
	if m != nil {
		return m.Token
	}
	return ""
}

func (m *C2SSelectServerRequest) GetServerId() int32 {
	if m != nil {
		return m.ServerId
	}
	return 0
}

// 选择服务器返回
type S2CSelectServerResponse struct {
	Acc   string `protobuf:"bytes,1,opt,name=Acc" json:"Acc,omitempty"`
	Token string `protobuf:"bytes,2,opt,name=Token" json:"Token,omitempty"`
	IP    string `protobuf:"bytes,3,opt,name=IP" json:"IP,omitempty"`
}

func (m *S2CSelectServerResponse) Reset()                    { *m = S2CSelectServerResponse{} }
func (m *S2CSelectServerResponse) String() string            { return proto.CompactTextString(m) }
func (*S2CSelectServerResponse) ProtoMessage()               {}
func (*S2CSelectServerResponse) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{11} }

func (m *S2CSelectServerResponse) GetAcc() string {
	if m != nil {
		return m.Acc
	}
	return ""
}

func (m *S2CSelectServerResponse) GetToken() string {
	if m != nil {
		return m.Token
	}
	return ""
}

func (m *S2CSelectServerResponse) GetIP() string {
	if m != nil {
		return m.IP
	}
	return ""
}

type C2S_MSG_DATA struct {
	PlayerId int32  `protobuf:"varint,1,opt,name=PlayerId" json:"PlayerId,omitempty"`
	Token    string `protobuf:"bytes,2,opt,name=Token" json:"Token,omitempty"`
	MsgCode  int32  `protobuf:"varint,3,opt,name=MsgCode" json:"MsgCode,omitempty"`
	Data     []byte `protobuf:"bytes,4,opt,name=Data,proto3" json:"Data,omitempty"`
}

func (m *C2S_MSG_DATA) Reset()                    { *m = C2S_MSG_DATA{} }
func (m *C2S_MSG_DATA) String() string            { return proto.CompactTextString(m) }
func (*C2S_MSG_DATA) ProtoMessage()               {}
func (*C2S_MSG_DATA) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{12} }

func (m *C2S_MSG_DATA) GetPlayerId() int32 {
	if m != nil {
		return m.PlayerId
	}
	return 0
}

func (m *C2S_MSG_DATA) GetToken() string {
	if m != nil {
		return m.Token
	}
	return ""
}

func (m *C2S_MSG_DATA) GetMsgCode() int32 {
	if m != nil {
		return m.MsgCode
	}
	return 0
}

func (m *C2S_MSG_DATA) GetData() []byte {
	if m != nil {
		return m.Data
	}
	return nil
}

type S2C_MSG_DATA struct {
	ErrorCode  int32  `protobuf:"varint,1,opt,name=ErrorCode" json:"ErrorCode,omitempty"`
	ErrorMsg   string `protobuf:"bytes,2,opt,name=ErrorMsg" json:"ErrorMsg,omitempty"`
	Data       []byte `protobuf:"bytes,3,opt,name=Data,proto3" json:"Data,omitempty"`
	CurrMsgNum int32  `protobuf:"varint,4,opt,name=CurrMsgNum" json:"CurrMsgNum,omitempty"`
}

func (m *S2C_MSG_DATA) Reset()                    { *m = S2C_MSG_DATA{} }
func (m *S2C_MSG_DATA) String() string            { return proto.CompactTextString(m) }
func (*S2C_MSG_DATA) ProtoMessage()               {}
func (*S2C_MSG_DATA) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{13} }

func (m *S2C_MSG_DATA) GetErrorCode() int32 {
	if m != nil {
		return m.ErrorCode
	}
	return 0
}

func (m *S2C_MSG_DATA) GetErrorMsg() string {
	if m != nil {
		return m.ErrorMsg
	}
	return ""
}

func (m *S2C_MSG_DATA) GetData() []byte {
	if m != nil {
		return m.Data
	}
	return nil
}

func (m *S2C_MSG_DATA) GetCurrMsgNum() int32 {
	if m != nil {
		return m.CurrMsgNum
	}
	return 0
}

// 进入游戏服务器
type C2SEnterGameRequest struct {
	Acc   string `protobuf:"bytes,1,opt,name=Acc" json:"Acc,omitempty"`
	Token string `protobuf:"bytes,2,opt,name=Token" json:"Token,omitempty"`
}

func (m *C2SEnterGameRequest) Reset()                    { *m = C2SEnterGameRequest{} }
func (m *C2SEnterGameRequest) String() string            { return proto.CompactTextString(m) }
func (*C2SEnterGameRequest) ProtoMessage()               {}
func (*C2SEnterGameRequest) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{14} }

func (m *C2SEnterGameRequest) GetAcc() string {
	if m != nil {
		return m.Acc
	}
	return ""
}

func (m *C2SEnterGameRequest) GetToken() string {
	if m != nil {
		return m.Token
	}
	return ""
}

// 返回
type S2CEnterGameResponse struct {
	Acc      string `protobuf:"bytes,1,opt,name=Acc" json:"Acc,omitempty"`
	PlayerId int32  `protobuf:"varint,2,opt,name=PlayerId" json:"PlayerId,omitempty"`
}

func (m *S2CEnterGameResponse) Reset()                    { *m = S2CEnterGameResponse{} }
func (m *S2CEnterGameResponse) String() string            { return proto.CompactTextString(m) }
func (*S2CEnterGameResponse) ProtoMessage()               {}
func (*S2CEnterGameResponse) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{15} }

func (m *S2CEnterGameResponse) GetAcc() string {
	if m != nil {
		return m.Acc
	}
	return ""
}

func (m *S2CEnterGameResponse) GetPlayerId() int32 {
	if m != nil {
		return m.PlayerId
	}
	return 0
}

// 通知客户端进入游戏服务器完成
type S2CEnterGameCompleteNotify struct {
}

func (m *S2CEnterGameCompleteNotify) Reset()                    { *m = S2CEnterGameCompleteNotify{} }
func (m *S2CEnterGameCompleteNotify) String() string            { return proto.CompactTextString(m) }
func (*S2CEnterGameCompleteNotify) ProtoMessage()               {}
func (*S2CEnterGameCompleteNotify) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{16} }

// 离开游戏服务器
type C2SLeaveGameRequest struct {
}

func (m *C2SLeaveGameRequest) Reset()                    { *m = C2SLeaveGameRequest{} }
func (m *C2SLeaveGameRequest) String() string            { return proto.CompactTextString(m) }
func (*C2SLeaveGameRequest) ProtoMessage()               {}
func (*C2SLeaveGameRequest) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{17} }

// 返回
type S2CLeaveGameResponse struct {
}

func (m *S2CLeaveGameResponse) Reset()                    { *m = S2CLeaveGameResponse{} }
func (m *S2CLeaveGameResponse) String() string            { return proto.CompactTextString(m) }
func (*S2CLeaveGameResponse) ProtoMessage()               {}
func (*S2CLeaveGameResponse) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{18} }

// 玩家信息
type S2CPlayerInfoResponse struct {
	Level    int32  `protobuf:"varint,1,opt,name=Level" json:"Level,omitempty"`
	Exp      int32  `protobuf:"varint,2,opt,name=Exp" json:"Exp,omitempty"`
	Gold     int32  `protobuf:"varint,3,opt,name=Gold" json:"Gold,omitempty"`
	Diamond  int32  `protobuf:"varint,4,opt,name=Diamond" json:"Diamond,omitempty"`
	Icon     string `protobuf:"bytes,5,opt,name=Icon" json:"Icon,omitempty"`
	VipLevel int32  `protobuf:"varint,6,opt,name=VipLevel" json:"VipLevel,omitempty"`
	Name     string `protobuf:"bytes,7,opt,name=Name" json:"Name,omitempty"`
	SysTime  int32  `protobuf:"varint,8,opt,name=SysTime" json:"SysTime,omitempty"`
	GuildId  int32  `protobuf:"varint,9,opt,name=GuildId" json:"GuildId,omitempty"`
}

func (m *S2CPlayerInfoResponse) Reset()                    { *m = S2CPlayerInfoResponse{} }
func (m *S2CPlayerInfoResponse) String() string            { return proto.CompactTextString(m) }
func (*S2CPlayerInfoResponse) ProtoMessage()               {}
func (*S2CPlayerInfoResponse) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{19} }

func (m *S2CPlayerInfoResponse) GetLevel() int32 {
	if m != nil {
		return m.Level
	}
	return 0
}

func (m *S2CPlayerInfoResponse) GetExp() int32 {
	if m != nil {
		return m.Exp
	}
	return 0
}

func (m *S2CPlayerInfoResponse) GetGold() int32 {
	if m != nil {
		return m.Gold
	}
	return 0
}

func (m *S2CPlayerInfoResponse) GetDiamond() int32 {
	if m != nil {
		return m.Diamond
	}
	return 0
}

func (m *S2CPlayerInfoResponse) GetIcon() string {
	if m != nil {
		return m.Icon
	}
	return ""
}

func (m *S2CPlayerInfoResponse) GetVipLevel() int32 {
	if m != nil {
		return m.VipLevel
	}
	return 0
}

func (m *S2CPlayerInfoResponse) GetName() string {
	if m != nil {
		return m.Name
	}
	return ""
}

func (m *S2CPlayerInfoResponse) GetSysTime() int32 {
	if m != nil {
		return m.SysTime
	}
	return 0
}

func (m *S2CPlayerInfoResponse) GetGuildId() int32 {
	if m != nil {
		return m.GuildId
	}
	return 0
}

// ----------------------------------- 战斗 -----------------------------------
// 设置阵容
type C2SSetTeamRequest struct {
	TeamType    int32   `protobuf:"varint,1,opt,name=TeamType" json:"TeamType,omitempty"`
	TeamMembers []int32 `protobuf:"varint,2,rep,packed,name=TeamMembers" json:"TeamMembers,omitempty"`
}

func (m *C2SSetTeamRequest) Reset()                    { *m = C2SSetTeamRequest{} }
func (m *C2SSetTeamRequest) String() string            { return proto.CompactTextString(m) }
func (*C2SSetTeamRequest) ProtoMessage()               {}
func (*C2SSetTeamRequest) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{20} }

func (m *C2SSetTeamRequest) GetTeamType() int32 {
	if m != nil {
		return m.TeamType
	}
	return 0
}

func (m *C2SSetTeamRequest) GetTeamMembers() []int32 {
	if m != nil {
		return m.TeamMembers
	}
	return nil
}

type S2CSetTeamResponse struct {
	TeamType    int32   `protobuf:"varint,1,opt,name=TeamType" json:"TeamType,omitempty"`
	TeamMembers []int32 `protobuf:"varint,2,rep,packed,name=TeamMembers" json:"TeamMembers,omitempty"`
}

func (m *S2CSetTeamResponse) Reset()                    { *m = S2CSetTeamResponse{} }
func (m *S2CSetTeamResponse) String() string            { return proto.CompactTextString(m) }
func (*S2CSetTeamResponse) ProtoMessage()               {}
func (*S2CSetTeamResponse) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{21} }

func (m *S2CSetTeamResponse) GetTeamType() int32 {
	if m != nil {
		return m.TeamType
	}
	return 0
}

func (m *S2CSetTeamResponse) GetTeamMembers() []int32 {
	if m != nil {
		return m.TeamMembers
	}
	return nil
}

type TeamData struct {
	TeamType    int32   `protobuf:"varint,1,opt,name=TeamType" json:"TeamType,omitempty"`
	TeamMembers []int32 `protobuf:"varint,2,rep,packed,name=TeamMembers" json:"TeamMembers,omitempty"`
}

func (m *TeamData) Reset()                    { *m = TeamData{} }
func (m *TeamData) String() string            { return proto.CompactTextString(m) }
func (*TeamData) ProtoMessage()               {}
func (*TeamData) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{22} }

func (m *TeamData) GetTeamType() int32 {
	if m != nil {
		return m.TeamType
	}
	return 0
}

func (m *TeamData) GetTeamMembers() []int32 {
	if m != nil {
		return m.TeamMembers
	}
	return nil
}

// 阵容数据
type S2CTeamsResponse struct {
	Teams []*TeamData `protobuf:"bytes,1,rep,name=Teams" json:"Teams,omitempty"`
}

func (m *S2CTeamsResponse) Reset()                    { *m = S2CTeamsResponse{} }
func (m *S2CTeamsResponse) String() string            { return proto.CompactTextString(m) }
func (*S2CTeamsResponse) ProtoMessage()               {}
func (*S2CTeamsResponse) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{23} }

func (m *S2CTeamsResponse) GetTeams() []*TeamData {
	if m != nil {
		return m.Teams
	}
	return nil
}

// 阵营成员
type BattleMemberItem struct {
	Id      int32 `protobuf:"varint,1,opt,name=Id" json:"Id,omitempty"`
	Pos     int32 `protobuf:"varint,2,opt,name=Pos" json:"Pos,omitempty"`
	HP      int32 `protobuf:"varint,3,opt,name=HP" json:"HP,omitempty"`
	MaxHP   int32 `protobuf:"varint,4,opt,name=MaxHP" json:"MaxHP,omitempty"`
	Energy  int32 `protobuf:"varint,5,opt,name=Energy" json:"Energy,omitempty"`
	TableId int32 `protobuf:"varint,6,opt,name=TableId" json:"TableId,omitempty"`
	Rank    int32 `protobuf:"varint,7,opt,name=Rank" json:"Rank,omitempty"`
	Level   int32 `protobuf:"varint,8,opt,name=Level" json:"Level,omitempty"`
	Side    int32 `protobuf:"varint,9,opt,name=Side" json:"Side,omitempty"`
}

func (m *BattleMemberItem) Reset()                    { *m = BattleMemberItem{} }
func (m *BattleMemberItem) String() string            { return proto.CompactTextString(m) }
func (*BattleMemberItem) ProtoMessage()               {}
func (*BattleMemberItem) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{24} }

func (m *BattleMemberItem) GetId() int32 {
	if m != nil {
		return m.Id
	}
	return 0
}

func (m *BattleMemberItem) GetPos() int32 {
	if m != nil {
		return m.Pos
	}
	return 0
}

func (m *BattleMemberItem) GetHP() int32 {
	if m != nil {
		return m.HP
	}
	return 0
}

func (m *BattleMemberItem) GetMaxHP() int32 {
	if m != nil {
		return m.MaxHP
	}
	return 0
}

func (m *BattleMemberItem) GetEnergy() int32 {
	if m != nil {
		return m.Energy
	}
	return 0
}

func (m *BattleMemberItem) GetTableId() int32 {
	if m != nil {
		return m.TableId
	}
	return 0
}

func (m *BattleMemberItem) GetRank() int32 {
	if m != nil {
		return m.Rank
	}
	return 0
}

func (m *BattleMemberItem) GetLevel() int32 {
	if m != nil {
		return m.Level
	}
	return 0
}

func (m *BattleMemberItem) GetSide() int32 {
	if m != nil {
		return m.Side
	}
	return 0
}

// 战斗成员
type BattleFighter struct {
	Pos        int32 `protobuf:"varint,1,opt,name=Pos" json:"Pos,omitempty"`
	HP         int32 `protobuf:"varint,2,opt,name=HP" json:"HP,omitempty"`
	MaxHP      int32 `protobuf:"varint,3,opt,name=MaxHP" json:"MaxHP,omitempty"`
	Damage     int32 `protobuf:"varint,4,opt,name=Damage" json:"Damage,omitempty"`
	Energy     int32 `protobuf:"varint,5,opt,name=Energy" json:"Energy,omitempty"`
	Side       int32 `protobuf:"varint,6,opt,name=Side" json:"Side,omitempty"`
	IsCritical bool  `protobuf:"varint,7,opt,name=IsCritical" json:"IsCritical,omitempty"`
	IsBlock    bool  `protobuf:"varint,8,opt,name=IsBlock" json:"IsBlock,omitempty"`
	IsAbsorb   bool  `protobuf:"varint,9,opt,name=IsAbsorb" json:"IsAbsorb,omitempty"`
	AntiType   int32 `protobuf:"varint,10,opt,name=AntiType" json:"AntiType,omitempty"`
	Shield     int32 `protobuf:"varint,11,opt,name=Shield" json:"Shield,omitempty"`
}

func (m *BattleFighter) Reset()                    { *m = BattleFighter{} }
func (m *BattleFighter) String() string            { return proto.CompactTextString(m) }
func (*BattleFighter) ProtoMessage()               {}
func (*BattleFighter) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{25} }

func (m *BattleFighter) GetPos() int32 {
	if m != nil {
		return m.Pos
	}
	return 0
}

func (m *BattleFighter) GetHP() int32 {
	if m != nil {
		return m.HP
	}
	return 0
}

func (m *BattleFighter) GetMaxHP() int32 {
	if m != nil {
		return m.MaxHP
	}
	return 0
}

func (m *BattleFighter) GetDamage() int32 {
	if m != nil {
		return m.Damage
	}
	return 0
}

func (m *BattleFighter) GetEnergy() int32 {
	if m != nil {
		return m.Energy
	}
	return 0
}

func (m *BattleFighter) GetSide() int32 {
	if m != nil {
		return m.Side
	}
	return 0
}

func (m *BattleFighter) GetIsCritical() bool {
	if m != nil {
		return m.IsCritical
	}
	return false
}

func (m *BattleFighter) GetIsBlock() bool {
	if m != nil {
		return m.IsBlock
	}
	return false
}

func (m *BattleFighter) GetIsAbsorb() bool {
	if m != nil {
		return m.IsAbsorb
	}
	return false
}

func (m *BattleFighter) GetAntiType() int32 {
	if m != nil {
		return m.AntiType
	}
	return 0
}

func (m *BattleFighter) GetShield() int32 {
	if m != nil {
		return m.Shield
	}
	return 0
}

type BattleMemberBuff struct {
	Side   int32 `protobuf:"varint,1,opt,name=Side" json:"Side,omitempty"`
	Pos    int32 `protobuf:"varint,2,opt,name=Pos" json:"Pos,omitempty"`
	BuffId int32 `protobuf:"varint,3,opt,name=BuffId" json:"BuffId,omitempty"`
}

func (m *BattleMemberBuff) Reset()                    { *m = BattleMemberBuff{} }
func (m *BattleMemberBuff) String() string            { return proto.CompactTextString(m) }
func (*BattleMemberBuff) ProtoMessage()               {}
func (*BattleMemberBuff) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{26} }

func (m *BattleMemberBuff) GetSide() int32 {
	if m != nil {
		return m.Side
	}
	return 0
}

func (m *BattleMemberBuff) GetPos() int32 {
	if m != nil {
		return m.Pos
	}
	return 0
}

func (m *BattleMemberBuff) GetBuffId() int32 {
	if m != nil {
		return m.BuffId
	}
	return 0
}

// 战报项(一次攻击的结果)
type BattleReportItem struct {
	Side        int32               `protobuf:"varint,1,opt,name=Side" json:"Side,omitempty"`
	SkillId     int32               `protobuf:"varint,2,opt,name=SkillId" json:"SkillId,omitempty"`
	User        *BattleFighter      `protobuf:"bytes,3,opt,name=User" json:"User,omitempty"`
	BeHiters    []*BattleFighter    `protobuf:"bytes,4,rep,name=BeHiters" json:"BeHiters,omitempty"`
	SummonNpcs  []*BattleMemberItem `protobuf:"bytes,5,rep,name=SummonNpcs" json:"SummonNpcs,omitempty"`
	AddBuffs    []*BattleMemberBuff `protobuf:"bytes,6,rep,name=AddBuffs" json:"AddBuffs,omitempty"`
	RemoveBuffs []*BattleMemberBuff `protobuf:"bytes,7,rep,name=RemoveBuffs" json:"RemoveBuffs,omitempty"`
	IsSummon    bool                `protobuf:"varint,8,opt,name=IsSummon" json:"IsSummon,omitempty"`
	HasCombo    bool                `protobuf:"varint,9,opt,name=HasCombo" json:"HasCombo,omitempty"`
}

func (m *BattleReportItem) Reset()                    { *m = BattleReportItem{} }
func (m *BattleReportItem) String() string            { return proto.CompactTextString(m) }
func (*BattleReportItem) ProtoMessage()               {}
func (*BattleReportItem) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{27} }

func (m *BattleReportItem) GetSide() int32 {
	if m != nil {
		return m.Side
	}
	return 0
}

func (m *BattleReportItem) GetSkillId() int32 {
	if m != nil {
		return m.SkillId
	}
	return 0
}

func (m *BattleReportItem) GetUser() *BattleFighter {
	if m != nil {
		return m.User
	}
	return nil
}

func (m *BattleReportItem) GetBeHiters() []*BattleFighter {
	if m != nil {
		return m.BeHiters
	}
	return nil
}

func (m *BattleReportItem) GetSummonNpcs() []*BattleMemberItem {
	if m != nil {
		return m.SummonNpcs
	}
	return nil
}

func (m *BattleReportItem) GetAddBuffs() []*BattleMemberBuff {
	if m != nil {
		return m.AddBuffs
	}
	return nil
}

func (m *BattleReportItem) GetRemoveBuffs() []*BattleMemberBuff {
	if m != nil {
		return m.RemoveBuffs
	}
	return nil
}

func (m *BattleReportItem) GetIsSummon() bool {
	if m != nil {
		return m.IsSummon
	}
	return false
}

func (m *BattleReportItem) GetHasCombo() bool {
	if m != nil {
		return m.HasCombo
	}
	return false
}

// 一回合战报
type BattleRoundReports struct {
	RoundNum            int32               `protobuf:"varint,1,opt,name=RoundNum" json:"RoundNum,omitempty"`
	Reports             []*BattleReportItem `protobuf:"bytes,2,rep,name=Reports" json:"Reports,omitempty"`
	RemoveBuffs         []*BattleMemberBuff `protobuf:"bytes,3,rep,name=RemoveBuffs" json:"RemoveBuffs,omitempty"`
	ChangedFighters     []*BattleFighter    `protobuf:"bytes,4,rep,name=ChangedFighters" json:"ChangedFighters,omitempty"`
	MyMembersEnergy     map[int32]int32     `protobuf:"bytes,5,rep,name=MyMembersEnergy" json:"MyMembersEnergy,omitempty" protobuf_key:"varint,1,opt,name=key" protobuf_val:"varint,2,opt,name=value"`
	TargetMembersEnergy map[int32]int32     `protobuf:"bytes,6,rep,name=TargetMembersEnergy" json:"TargetMembersEnergy,omitempty" protobuf_key:"varint,1,opt,name=key" protobuf_val:"varint,2,opt,name=value"`
}

func (m *BattleRoundReports) Reset()                    { *m = BattleRoundReports{} }
func (m *BattleRoundReports) String() string            { return proto.CompactTextString(m) }
func (*BattleRoundReports) ProtoMessage()               {}
func (*BattleRoundReports) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{28} }

func (m *BattleRoundReports) GetRoundNum() int32 {
	if m != nil {
		return m.RoundNum
	}
	return 0
}

func (m *BattleRoundReports) GetReports() []*BattleReportItem {
	if m != nil {
		return m.Reports
	}
	return nil
}

func (m *BattleRoundReports) GetRemoveBuffs() []*BattleMemberBuff {
	if m != nil {
		return m.RemoveBuffs
	}
	return nil
}

func (m *BattleRoundReports) GetChangedFighters() []*BattleFighter {
	if m != nil {
		return m.ChangedFighters
	}
	return nil
}

func (m *BattleRoundReports) GetMyMembersEnergy() map[int32]int32 {
	if m != nil {
		return m.MyMembersEnergy
	}
	return nil
}

func (m *BattleRoundReports) GetTargetMembersEnergy() map[int32]int32 {
	if m != nil {
		return m.TargetMembersEnergy
	}
	return nil
}

// 请求战斗结果
type C2SBattleResultRequest struct {
	AttackMembers  []int32 `protobuf:"varint,1,rep,packed,name=AttackMembers" json:"AttackMembers,omitempty"`
	FightPlayerId  int32   `protobuf:"varint,2,opt,name=FightPlayerId" json:"FightPlayerId,omitempty"`
	CampaignId     int32   `protobuf:"varint,3,opt,name=CampaignId" json:"CampaignId,omitempty"`
	BattleType     int32   `protobuf:"varint,4,opt,name=BattleType" json:"BattleType,omitempty"`
	BattleParam    int32   `protobuf:"varint,5,opt,name=BattleParam" json:"BattleParam,omitempty"`
	AssistFriendId int32   `protobuf:"varint,6,opt,name=AssistFriendId" json:"AssistFriendId,omitempty"`
	AssistRoleId   int32   `protobuf:"varint,7,opt,name=AssistRoleId" json:"AssistRoleId,omitempty"`
	AssistPos      int32   `protobuf:"varint,8,opt,name=AssistPos" json:"AssistPos,omitempty"`
	SweepNum       int32   `protobuf:"varint,9,opt,name=SweepNum" json:"SweepNum,omitempty"`
}

func (m *C2SBattleResultRequest) Reset()                    { *m = C2SBattleResultRequest{} }
func (m *C2SBattleResultRequest) String() string            { return proto.CompactTextString(m) }
func (*C2SBattleResultRequest) ProtoMessage()               {}
func (*C2SBattleResultRequest) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{29} }

func (m *C2SBattleResultRequest) GetAttackMembers() []int32 {
	if m != nil {
		return m.AttackMembers
	}
	return nil
}

func (m *C2SBattleResultRequest) GetFightPlayerId() int32 {
	if m != nil {
		return m.FightPlayerId
	}
	return 0
}

func (m *C2SBattleResultRequest) GetCampaignId() int32 {
	if m != nil {
		return m.CampaignId
	}
	return 0
}

func (m *C2SBattleResultRequest) GetBattleType() int32 {
	if m != nil {
		return m.BattleType
	}
	return 0
}

func (m *C2SBattleResultRequest) GetBattleParam() int32 {
	if m != nil {
		return m.BattleParam
	}
	return 0
}

func (m *C2SBattleResultRequest) GetAssistFriendId() int32 {
	if m != nil {
		return m.AssistFriendId
	}
	return 0
}

func (m *C2SBattleResultRequest) GetAssistRoleId() int32 {
	if m != nil {
		return m.AssistRoleId
	}
	return 0
}

func (m *C2SBattleResultRequest) GetAssistPos() int32 {
	if m != nil {
		return m.AssistPos
	}
	return 0
}

func (m *C2SBattleResultRequest) GetSweepNum() int32 {
	if m != nil {
		return m.SweepNum
	}
	return 0
}

type S2CBattleResultResponse struct {
	IsWin               bool                  `protobuf:"varint,1,opt,name=IsWin" json:"IsWin,omitempty"`
	MyTeam              []*BattleMemberItem   `protobuf:"bytes,2,rep,name=MyTeam" json:"MyTeam,omitempty"`
	TargetTeam          []*BattleMemberItem   `protobuf:"bytes,3,rep,name=TargetTeam" json:"TargetTeam,omitempty"`
	EnterReports        []*BattleReportItem   `protobuf:"bytes,4,rep,name=EnterReports" json:"EnterReports,omitempty"`
	Rounds              []*BattleRoundReports `protobuf:"bytes,5,rep,name=Rounds" json:"Rounds,omitempty"`
	MyMemberDamages     map[int32]int32       `protobuf:"bytes,6,rep,name=MyMemberDamages" json:"MyMemberDamages,omitempty" protobuf_key:"varint,1,opt,name=key" protobuf_val:"varint,2,opt,name=value"`
	TargetMemberDamages map[int32]int32       `protobuf:"bytes,7,rep,name=TargetMemberDamages" json:"TargetMemberDamages,omitempty" protobuf_key:"varint,1,opt,name=key" protobuf_val:"varint,2,opt,name=value"`
	MyMemberCures       map[int32]int32       `protobuf:"bytes,8,rep,name=MyMemberCures" json:"MyMemberCures,omitempty" protobuf_key:"varint,1,opt,name=key" protobuf_val:"varint,2,opt,name=value"`
	TargetMemberCures   map[int32]int32       `protobuf:"bytes,9,rep,name=TargetMemberCures" json:"TargetMemberCures,omitempty" protobuf_key:"varint,1,opt,name=key" protobuf_val:"varint,2,opt,name=value"`
	HasNextWave         bool                  `protobuf:"varint,10,opt,name=HasNextWave" json:"HasNextWave,omitempty"`
	NextCampaignId      int32                 `protobuf:"varint,11,opt,name=NextCampaignId" json:"NextCampaignId,omitempty"`
	BattleType          int32                 `protobuf:"varint,12,opt,name=BattleType" json:"BattleType,omitempty"`
	BattleParam         int32                 `protobuf:"varint,13,opt,name=BattleParam" json:"BattleParam,omitempty"`
	AssistFriendId      int32                 `protobuf:"varint,14,opt,name=AssistFriendId" json:"AssistFriendId,omitempty"`
	AssistRoleId        int32                 `protobuf:"varint,15,opt,name=AssistRoleId" json:"AssistRoleId,omitempty"`
	AssistPos           int32                 `protobuf:"varint,16,opt,name=AssistPos" json:"AssistPos,omitempty"`
	SweepNum            int32                 `protobuf:"varint,17,opt,name=SweepNum" json:"SweepNum,omitempty"`
	ExtraValue          int32                 `protobuf:"varint,18,opt,name=ExtraValue" json:"ExtraValue,omitempty"`
}

func (m *S2CBattleResultResponse) Reset()                    { *m = S2CBattleResultResponse{} }
func (m *S2CBattleResultResponse) String() string            { return proto.CompactTextString(m) }
func (*S2CBattleResultResponse) ProtoMessage()               {}
func (*S2CBattleResultResponse) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{30} }

func (m *S2CBattleResultResponse) GetIsWin() bool {
	if m != nil {
		return m.IsWin
	}
	return false
}

func (m *S2CBattleResultResponse) GetMyTeam() []*BattleMemberItem {
	if m != nil {
		return m.MyTeam
	}
	return nil
}

func (m *S2CBattleResultResponse) GetTargetTeam() []*BattleMemberItem {
	if m != nil {
		return m.TargetTeam
	}
	return nil
}

func (m *S2CBattleResultResponse) GetEnterReports() []*BattleReportItem {
	if m != nil {
		return m.EnterReports
	}
	return nil
}

func (m *S2CBattleResultResponse) GetRounds() []*BattleRoundReports {
	if m != nil {
		return m.Rounds
	}
	return nil
}

func (m *S2CBattleResultResponse) GetMyMemberDamages() map[int32]int32 {
	if m != nil {
		return m.MyMemberDamages
	}
	return nil
}

func (m *S2CBattleResultResponse) GetTargetMemberDamages() map[int32]int32 {
	if m != nil {
		return m.TargetMemberDamages
	}
	return nil
}

func (m *S2CBattleResultResponse) GetMyMemberCures() map[int32]int32 {
	if m != nil {
		return m.MyMemberCures
	}
	return nil
}

func (m *S2CBattleResultResponse) GetTargetMemberCures() map[int32]int32 {
	if m != nil {
		return m.TargetMemberCures
	}
	return nil
}

func (m *S2CBattleResultResponse) GetHasNextWave() bool {
	if m != nil {
		return m.HasNextWave
	}
	return false
}

func (m *S2CBattleResultResponse) GetNextCampaignId() int32 {
	if m != nil {
		return m.NextCampaignId
	}
	return 0
}

func (m *S2CBattleResultResponse) GetBattleType() int32 {
	if m != nil {
		return m.BattleType
	}
	return 0
}

func (m *S2CBattleResultResponse) GetBattleParam() int32 {
	if m != nil {
		return m.BattleParam
	}
	return 0
}

func (m *S2CBattleResultResponse) GetAssistFriendId() int32 {
	if m != nil {
		return m.AssistFriendId
	}
	return 0
}

func (m *S2CBattleResultResponse) GetAssistRoleId() int32 {
	if m != nil {
		return m.AssistRoleId
	}
	return 0
}

func (m *S2CBattleResultResponse) GetAssistPos() int32 {
	if m != nil {
		return m.AssistPos
	}
	return 0
}

func (m *S2CBattleResultResponse) GetSweepNum() int32 {
	if m != nil {
		return m.SweepNum
	}
	return 0
}

func (m *S2CBattleResultResponse) GetExtraValue() int32 {
	if m != nil {
		return m.ExtraValue
	}
	return 0
}

// 请求录像列表
type C2SBattleRecordListRequest struct {
}

func (m *C2SBattleRecordListRequest) Reset()                    { *m = C2SBattleRecordListRequest{} }
func (m *C2SBattleRecordListRequest) String() string            { return proto.CompactTextString(m) }
func (*C2SBattleRecordListRequest) ProtoMessage()               {}
func (*C2SBattleRecordListRequest) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{31} }

type BattleRecordData struct {
	RecordId      int32  `protobuf:"varint,1,opt,name=RecordId" json:"RecordId,omitempty"`
	AttackerId    int32  `protobuf:"varint,2,opt,name=AttackerId" json:"AttackerId,omitempty"`
	AttackerName  string `protobuf:"bytes,3,opt,name=AttackerName" json:"AttackerName,omitempty"`
	DefenserId    int32  `protobuf:"varint,4,opt,name=DefenserId" json:"DefenserId,omitempty"`
	DefenserName  string `protobuf:"bytes,5,opt,name=DefenserName" json:"DefenserName,omitempty"`
	RecordTime    int32  `protobuf:"varint,6,opt,name=RecordTime" json:"RecordTime,omitempty"`
	IsWin         bool   `protobuf:"varint,7,opt,name=IsWin" json:"IsWin,omitempty"`
	AddScore      int32  `protobuf:"varint,8,opt,name=AddScore" json:"AddScore,omitempty"`
	AttackerLevel int32  `protobuf:"varint,9,opt,name=AttackerLevel" json:"AttackerLevel,omitempty"`
	DefenserLevel int32  `protobuf:"varint,10,opt,name=DefenserLevel" json:"DefenserLevel,omitempty"`
	AttackerHead  int32  `protobuf:"varint,11,opt,name=AttackerHead" json:"AttackerHead,omitempty"`
	DefenserHead  int32  `protobuf:"varint,12,opt,name=DefenserHead" json:"DefenserHead,omitempty"`
}

func (m *BattleRecordData) Reset()                    { *m = BattleRecordData{} }
func (m *BattleRecordData) String() string            { return proto.CompactTextString(m) }
func (*BattleRecordData) ProtoMessage()               {}
func (*BattleRecordData) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{32} }

func (m *BattleRecordData) GetRecordId() int32 {
	if m != nil {
		return m.RecordId
	}
	return 0
}

func (m *BattleRecordData) GetAttackerId() int32 {
	if m != nil {
		return m.AttackerId
	}
	return 0
}

func (m *BattleRecordData) GetAttackerName() string {
	if m != nil {
		return m.AttackerName
	}
	return ""
}

func (m *BattleRecordData) GetDefenserId() int32 {
	if m != nil {
		return m.DefenserId
	}
	return 0
}

func (m *BattleRecordData) GetDefenserName() string {
	if m != nil {
		return m.DefenserName
	}
	return ""
}

func (m *BattleRecordData) GetRecordTime() int32 {
	if m != nil {
		return m.RecordTime
	}
	return 0
}

func (m *BattleRecordData) GetIsWin() bool {
	if m != nil {
		return m.IsWin
	}
	return false
}

func (m *BattleRecordData) GetAddScore() int32 {
	if m != nil {
		return m.AddScore
	}
	return 0
}

func (m *BattleRecordData) GetAttackerLevel() int32 {
	if m != nil {
		return m.AttackerLevel
	}
	return 0
}

func (m *BattleRecordData) GetDefenserLevel() int32 {
	if m != nil {
		return m.DefenserLevel
	}
	return 0
}

func (m *BattleRecordData) GetAttackerHead() int32 {
	if m != nil {
		return m.AttackerHead
	}
	return 0
}

func (m *BattleRecordData) GetDefenserHead() int32 {
	if m != nil {
		return m.DefenserHead
	}
	return 0
}

type S2CBattleRecordListResponse struct {
	Records []*BattleRecordData `protobuf:"bytes,1,rep,name=Records" json:"Records,omitempty"`
}

func (m *S2CBattleRecordListResponse) Reset()                    { *m = S2CBattleRecordListResponse{} }
func (m *S2CBattleRecordListResponse) String() string            { return proto.CompactTextString(m) }
func (*S2CBattleRecordListResponse) ProtoMessage()               {}
func (*S2CBattleRecordListResponse) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{33} }

func (m *S2CBattleRecordListResponse) GetRecords() []*BattleRecordData {
	if m != nil {
		return m.Records
	}
	return nil
}

// 请求录像
type C2SBattleRecordRequest struct {
	Id int32 `protobuf:"varint,1,opt,name=Id" json:"Id,omitempty"`
}

func (m *C2SBattleRecordRequest) Reset()                    { *m = C2SBattleRecordRequest{} }
func (m *C2SBattleRecordRequest) String() string            { return proto.CompactTextString(m) }
func (*C2SBattleRecordRequest) ProtoMessage()               {}
func (*C2SBattleRecordRequest) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{34} }

func (m *C2SBattleRecordRequest) GetId() int32 {
	if m != nil {
		return m.Id
	}
	return 0
}

type S2CBattleRecordResponse struct {
	Id           int32  `protobuf:"varint,1,opt,name=Id" json:"Id,omitempty"`
	AttackerId   int32  `protobuf:"varint,2,opt,name=AttackerId" json:"AttackerId,omitempty"`
	AttackerName string `protobuf:"bytes,3,opt,name=AttackerName" json:"AttackerName,omitempty"`
	DefenserId   int32  `protobuf:"varint,4,opt,name=DefenserId" json:"DefenserId,omitempty"`
	DefenserName string `protobuf:"bytes,5,opt,name=DefenserName" json:"DefenserName,omitempty"`
	RecordData   []byte `protobuf:"bytes,6,opt,name=RecordData,proto3" json:"RecordData,omitempty"`
	RecordTime   int32  `protobuf:"varint,7,opt,name=RecordTime" json:"RecordTime,omitempty"`
}

func (m *S2CBattleRecordResponse) Reset()                    { *m = S2CBattleRecordResponse{} }
func (m *S2CBattleRecordResponse) String() string            { return proto.CompactTextString(m) }
func (*S2CBattleRecordResponse) ProtoMessage()               {}
func (*S2CBattleRecordResponse) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{35} }

func (m *S2CBattleRecordResponse) GetId() int32 {
	if m != nil {
		return m.Id
	}
	return 0
}

func (m *S2CBattleRecordResponse) GetAttackerId() int32 {
	if m != nil {
		return m.AttackerId
	}
	return 0
}

func (m *S2CBattleRecordResponse) GetAttackerName() string {
	if m != nil {
		return m.AttackerName
	}
	return ""
}

func (m *S2CBattleRecordResponse) GetDefenserId() int32 {
	if m != nil {
		return m.DefenserId
	}
	return 0
}

func (m *S2CBattleRecordResponse) GetDefenserName() string {
	if m != nil {
		return m.DefenserName
	}
	return ""
}

func (m *S2CBattleRecordResponse) GetRecordData() []byte {
	if m != nil {
		return m.RecordData
	}
	return nil
}

func (m *S2CBattleRecordResponse) GetRecordTime() int32 {
	if m != nil {
		return m.RecordTime
	}
	return 0
}

// 删除录像
type C2SBattleRecordDeleteRequest struct {
	RecordId int32 `protobuf:"varint,1,opt,name=RecordId" json:"RecordId,omitempty"`
}

func (m *C2SBattleRecordDeleteRequest) Reset()                    { *m = C2SBattleRecordDeleteRequest{} }
func (m *C2SBattleRecordDeleteRequest) String() string            { return proto.CompactTextString(m) }
func (*C2SBattleRecordDeleteRequest) ProtoMessage()               {}
func (*C2SBattleRecordDeleteRequest) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{36} }

func (m *C2SBattleRecordDeleteRequest) GetRecordId() int32 {
	if m != nil {
		return m.RecordId
	}
	return 0
}

type S2CBattleRecordDeleteResponse struct {
	RecordId int32 `protobuf:"varint,1,opt,name=RecordId" json:"RecordId,omitempty"`
}

func (m *S2CBattleRecordDeleteResponse) Reset()                    { *m = S2CBattleRecordDeleteResponse{} }
func (m *S2CBattleRecordDeleteResponse) String() string            { return proto.CompactTextString(m) }
func (*S2CBattleRecordDeleteResponse) ProtoMessage()               {}
func (*S2CBattleRecordDeleteResponse) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{37} }

func (m *S2CBattleRecordDeleteResponse) GetRecordId() int32 {
	if m != nil {
		return m.RecordId
	}
	return 0
}

// 战斗随机奖励
type S2CBattleRandomRewardNotify struct {
	Items     []*ItemInfo `protobuf:"bytes,1,rep,name=Items" json:"Items,omitempty"`
	FakeItems []int32     `protobuf:"varint,2,rep,packed,name=FakeItems" json:"FakeItems,omitempty"`
}

func (m *S2CBattleRandomRewardNotify) Reset()                    { *m = S2CBattleRandomRewardNotify{} }
func (m *S2CBattleRandomRewardNotify) String() string            { return proto.CompactTextString(m) }
func (*S2CBattleRandomRewardNotify) ProtoMessage()               {}
func (*S2CBattleRandomRewardNotify) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{38} }

func (m *S2CBattleRandomRewardNotify) GetItems() []*ItemInfo {
	if m != nil {
		return m.Items
	}
	return nil
}

func (m *S2CBattleRandomRewardNotify) GetFakeItems() []int32 {
	if m != nil {
		return m.FakeItems
	}
	return nil
}

// ---------------------------------- 关卡 ------------------------------------
// 请求战役关卡数据
type C2SCampaignDataRequest struct {
}

func (m *C2SCampaignDataRequest) Reset()                    { *m = C2SCampaignDataRequest{} }
func (m *C2SCampaignDataRequest) String() string            { return proto.CompactTextString(m) }
func (*C2SCampaignDataRequest) ProtoMessage()               {}
func (*C2SCampaignDataRequest) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{39} }

type S2CCampaignDataResponse struct {
	PassedCampaignIds []int32     `protobuf:"varint,1,rep,packed,name=PassedCampaignIds" json:"PassedCampaignIds,omitempty"`
	UnlockCampaignId  int32       `protobuf:"varint,2,opt,name=UnlockCampaignId" json:"UnlockCampaignId,omitempty"`
	HangupCampaignId  int32       `protobuf:"varint,3,opt,name=HangupCampaignId" json:"HangupCampaignId,omitempty"`
	StaticIncomes     []*ItemInfo `protobuf:"bytes,4,rep,name=StaticIncomes" json:"StaticIncomes,omitempty"`
}

func (m *S2CCampaignDataResponse) Reset()                    { *m = S2CCampaignDataResponse{} }
func (m *S2CCampaignDataResponse) String() string            { return proto.CompactTextString(m) }
func (*S2CCampaignDataResponse) ProtoMessage()               {}
func (*S2CCampaignDataResponse) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{40} }

func (m *S2CCampaignDataResponse) GetPassedCampaignIds() []int32 {
	if m != nil {
		return m.PassedCampaignIds
	}
	return nil
}

func (m *S2CCampaignDataResponse) GetUnlockCampaignId() int32 {
	if m != nil {
		return m.UnlockCampaignId
	}
	return 0
}

func (m *S2CCampaignDataResponse) GetHangupCampaignId() int32 {
	if m != nil {
		return m.HangupCampaignId
	}
	return 0
}

func (m *S2CCampaignDataResponse) GetStaticIncomes() []*ItemInfo {
	if m != nil {
		return m.StaticIncomes
	}
	return nil
}

// 请求战役挂机收益
type C2SCampaignHangupIncomeRequest struct {
	IncomeType int32 `protobuf:"varint,1,opt,name=IncomeType" json:"IncomeType,omitempty"`
}

func (m *C2SCampaignHangupIncomeRequest) Reset()                    { *m = C2SCampaignHangupIncomeRequest{} }
func (m *C2SCampaignHangupIncomeRequest) String() string            { return proto.CompactTextString(m) }
func (*C2SCampaignHangupIncomeRequest) ProtoMessage()               {}
func (*C2SCampaignHangupIncomeRequest) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{41} }

func (m *C2SCampaignHangupIncomeRequest) GetIncomeType() int32 {
	if m != nil {
		return m.IncomeType
	}
	return 0
}

// 关卡战斗结果奖励
type S2CCampaignHangupIncomeResponse struct {
	IncomeType int32       `protobuf:"varint,1,opt,name=IncomeType" json:"IncomeType,omitempty"`
	Rewards    []*ItemInfo `protobuf:"bytes,2,rep,name=Rewards" json:"Rewards,omitempty"`
}

func (m *S2CCampaignHangupIncomeResponse) Reset()         { *m = S2CCampaignHangupIncomeResponse{} }
func (m *S2CCampaignHangupIncomeResponse) String() string { return proto.CompactTextString(m) }
func (*S2CCampaignHangupIncomeResponse) ProtoMessage()    {}
func (*S2CCampaignHangupIncomeResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor0, []int{42}
}

func (m *S2CCampaignHangupIncomeResponse) GetIncomeType() int32 {
	if m != nil {
		return m.IncomeType
	}
	return 0
}

func (m *S2CCampaignHangupIncomeResponse) GetRewards() []*ItemInfo {
	if m != nil {
		return m.Rewards
	}
	return nil
}

// 设置挂机战役关卡
type C2SBattleSetHangupCampaignRequest struct {
	CampaignId int32 `protobuf:"varint,1,opt,name=CampaignId" json:"CampaignId,omitempty"`
}

func (m *C2SBattleSetHangupCampaignRequest) Reset()         { *m = C2SBattleSetHangupCampaignRequest{} }
func (m *C2SBattleSetHangupCampaignRequest) String() string { return proto.CompactTextString(m) }
func (*C2SBattleSetHangupCampaignRequest) ProtoMessage()    {}
func (*C2SBattleSetHangupCampaignRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor0, []int{43}
}

func (m *C2SBattleSetHangupCampaignRequest) GetCampaignId() int32 {
	if m != nil {
		return m.CampaignId
	}
	return 0
}

// 设置挂机战役关卡返回
type S2CBattleSetHangupCampaignResponse struct {
	CampaignId int32 `protobuf:"varint,1,opt,name=CampaignId" json:"CampaignId,omitempty"`
}

func (m *S2CBattleSetHangupCampaignResponse) Reset()         { *m = S2CBattleSetHangupCampaignResponse{} }
func (m *S2CBattleSetHangupCampaignResponse) String() string { return proto.CompactTextString(m) }
func (*S2CBattleSetHangupCampaignResponse) ProtoMessage()    {}
func (*S2CBattleSetHangupCampaignResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor0, []int{44}
}

func (m *S2CBattleSetHangupCampaignResponse) GetCampaignId() int32 {
	if m != nil {
		return m.CampaignId
	}
	return 0
}

// ----------------------------------- 物品 ------------------------------------
// 请求同步物品数据
type C2SItemsSyncRequest struct {
}

func (m *C2SItemsSyncRequest) Reset()                    { *m = C2SItemsSyncRequest{} }
func (m *C2SItemsSyncRequest) String() string            { return proto.CompactTextString(m) }
func (*C2SItemsSyncRequest) ProtoMessage()               {}
func (*C2SItemsSyncRequest) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{45} }

// 进入游戏同步物品数据
type S2CItemsSync struct {
	Items []*ItemInfo `protobuf:"bytes,1,rep,name=Items" json:"Items,omitempty"`
}

func (m *S2CItemsSync) Reset()                    { *m = S2CItemsSync{} }
func (m *S2CItemsSync) String() string            { return proto.CompactTextString(m) }
func (*S2CItemsSync) ProtoMessage()               {}
func (*S2CItemsSync) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{46} }

func (m *S2CItemsSync) GetItems() []*ItemInfo {
	if m != nil {
		return m.Items
	}
	return nil
}

// 物品数据更新
type S2CItemsUpdate struct {
	ItemsAdd []*ItemInfo `protobuf:"bytes,1,rep,name=ItemsAdd" json:"ItemsAdd,omitempty"`
}

func (m *S2CItemsUpdate) Reset()                    { *m = S2CItemsUpdate{} }
func (m *S2CItemsUpdate) String() string            { return proto.CompactTextString(m) }
func (*S2CItemsUpdate) ProtoMessage()               {}
func (*S2CItemsUpdate) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{47} }

func (m *S2CItemsUpdate) GetItemsAdd() []*ItemInfo {
	if m != nil {
		return m.ItemsAdd
	}
	return nil
}

// 物品合成
type C2SItemFusionRequest struct {
	PieceId   int32 `protobuf:"varint,1,opt,name=PieceId" json:"PieceId,omitempty"`
	FusionNum int32 `protobuf:"varint,2,opt,name=FusionNum" json:"FusionNum,omitempty"`
}

func (m *C2SItemFusionRequest) Reset()                    { *m = C2SItemFusionRequest{} }
func (m *C2SItemFusionRequest) String() string            { return proto.CompactTextString(m) }
func (*C2SItemFusionRequest) ProtoMessage()               {}
func (*C2SItemFusionRequest) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{48} }

func (m *C2SItemFusionRequest) GetPieceId() int32 {
	if m != nil {
		return m.PieceId
	}
	return 0
}

func (m *C2SItemFusionRequest) GetFusionNum() int32 {
	if m != nil {
		return m.FusionNum
	}
	return 0
}

type S2CItemFusionResponse struct {
	Items []*ItemInfo `protobuf:"bytes,1,rep,name=Items" json:"Items,omitempty"`
}

func (m *S2CItemFusionResponse) Reset()                    { *m = S2CItemFusionResponse{} }
func (m *S2CItemFusionResponse) String() string            { return proto.CompactTextString(m) }
func (*S2CItemFusionResponse) ProtoMessage()               {}
func (*S2CItemFusionResponse) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{49} }

func (m *S2CItemFusionResponse) GetItems() []*ItemInfo {
	if m != nil {
		return m.Items
	}
	return nil
}

// 出售物品
type C2SItemSellRequest struct {
	ItemId  int32 `protobuf:"varint,1,opt,name=ItemId" json:"ItemId,omitempty"`
	ItemNum int32 `protobuf:"varint,2,opt,name=ItemNum" json:"ItemNum,omitempty"`
}

func (m *C2SItemSellRequest) Reset()                    { *m = C2SItemSellRequest{} }
func (m *C2SItemSellRequest) String() string            { return proto.CompactTextString(m) }
func (*C2SItemSellRequest) ProtoMessage()               {}
func (*C2SItemSellRequest) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{50} }

func (m *C2SItemSellRequest) GetItemId() int32 {
	if m != nil {
		return m.ItemId
	}
	return 0
}

func (m *C2SItemSellRequest) GetItemNum() int32 {
	if m != nil {
		return m.ItemNum
	}
	return 0
}

type S2CItemSellResponse struct {
	ItemId  int32 `protobuf:"varint,1,opt,name=ItemId" json:"ItemId,omitempty"`
	ItemNum int32 `protobuf:"varint,2,opt,name=ItemNum" json:"ItemNum,omitempty"`
}

func (m *S2CItemSellResponse) Reset()                    { *m = S2CItemSellResponse{} }
func (m *S2CItemSellResponse) String() string            { return proto.CompactTextString(m) }
func (*S2CItemSellResponse) ProtoMessage()               {}
func (*S2CItemSellResponse) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{51} }

func (m *S2CItemSellResponse) GetItemId() int32 {
	if m != nil {
		return m.ItemId
	}
	return 0
}

func (m *S2CItemSellResponse) GetItemNum() int32 {
	if m != nil {
		return m.ItemNum
	}
	return 0
}

// 装备物品
type C2SItemEquipRequest struct {
	RoleId int32 `protobuf:"varint,1,opt,name=RoleId" json:"RoleId,omitempty"`
	ItemId int32 `protobuf:"varint,2,opt,name=ItemId" json:"ItemId,omitempty"`
}

func (m *C2SItemEquipRequest) Reset()                    { *m = C2SItemEquipRequest{} }
func (m *C2SItemEquipRequest) String() string            { return proto.CompactTextString(m) }
func (*C2SItemEquipRequest) ProtoMessage()               {}
func (*C2SItemEquipRequest) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{52} }

func (m *C2SItemEquipRequest) GetRoleId() int32 {
	if m != nil {
		return m.RoleId
	}
	return 0
}

func (m *C2SItemEquipRequest) GetItemId() int32 {
	if m != nil {
		return m.ItemId
	}
	return 0
}

type S2CItemEquipResponse struct {
	RoleId    int32 `protobuf:"varint,1,opt,name=RoleId" json:"RoleId,omitempty"`
	EquipSlot int32 `protobuf:"varint,2,opt,name=EquipSlot" json:"EquipSlot,omitempty"`
	ItemId    int32 `protobuf:"varint,3,opt,name=ItemId" json:"ItemId,omitempty"`
}

func (m *S2CItemEquipResponse) Reset()                    { *m = S2CItemEquipResponse{} }
func (m *S2CItemEquipResponse) String() string            { return proto.CompactTextString(m) }
func (*S2CItemEquipResponse) ProtoMessage()               {}
func (*S2CItemEquipResponse) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{53} }

func (m *S2CItemEquipResponse) GetRoleId() int32 {
	if m != nil {
		return m.RoleId
	}
	return 0
}

func (m *S2CItemEquipResponse) GetEquipSlot() int32 {
	if m != nil {
		return m.EquipSlot
	}
	return 0
}

func (m *S2CItemEquipResponse) GetItemId() int32 {
	if m != nil {
		return m.ItemId
	}
	return 0
}

// 卸载物品
type C2SItemUnequipRequest struct {
	RoleId    int32 `protobuf:"varint,1,opt,name=RoleId" json:"RoleId,omitempty"`
	EquipSlot int32 `protobuf:"varint,2,opt,name=EquipSlot" json:"EquipSlot,omitempty"`
}

func (m *C2SItemUnequipRequest) Reset()                    { *m = C2SItemUnequipRequest{} }
func (m *C2SItemUnequipRequest) String() string            { return proto.CompactTextString(m) }
func (*C2SItemUnequipRequest) ProtoMessage()               {}
func (*C2SItemUnequipRequest) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{54} }

func (m *C2SItemUnequipRequest) GetRoleId() int32 {
	if m != nil {
		return m.RoleId
	}
	return 0
}

func (m *C2SItemUnequipRequest) GetEquipSlot() int32 {
	if m != nil {
		return m.EquipSlot
	}
	return 0
}

type S2CItemUnequipResponse struct {
	RoleId    int32 `protobuf:"varint,1,opt,name=RoleId" json:"RoleId,omitempty"`
	EquipSlot int32 `protobuf:"varint,2,opt,name=EquipSlot" json:"EquipSlot,omitempty"`
}

func (m *S2CItemUnequipResponse) Reset()                    { *m = S2CItemUnequipResponse{} }
func (m *S2CItemUnequipResponse) String() string            { return proto.CompactTextString(m) }
func (*S2CItemUnequipResponse) ProtoMessage()               {}
func (*S2CItemUnequipResponse) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{55} }

func (m *S2CItemUnequipResponse) GetRoleId() int32 {
	if m != nil {
		return m.RoleId
	}
	return 0
}

func (m *S2CItemUnequipResponse) GetEquipSlot() int32 {
	if m != nil {
		return m.EquipSlot
	}
	return 0
}

// 物品升级
type C2SItemUpgradeRequest struct {
	RoleId      int32 `protobuf:"varint,1,opt,name=RoleId" json:"RoleId,omitempty"`
	ItemId      int32 `protobuf:"varint,2,opt,name=ItemId" json:"ItemId,omitempty"`
	UpgradeType int32 `protobuf:"varint,3,opt,name=UpgradeType" json:"UpgradeType,omitempty"`
	ItemNum     int32 `protobuf:"varint,4,opt,name=ItemNum" json:"ItemNum,omitempty"`
}

func (m *C2SItemUpgradeRequest) Reset()                    { *m = C2SItemUpgradeRequest{} }
func (m *C2SItemUpgradeRequest) String() string            { return proto.CompactTextString(m) }
func (*C2SItemUpgradeRequest) ProtoMessage()               {}
func (*C2SItemUpgradeRequest) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{56} }

func (m *C2SItemUpgradeRequest) GetRoleId() int32 {
	if m != nil {
		return m.RoleId
	}
	return 0
}

func (m *C2SItemUpgradeRequest) GetItemId() int32 {
	if m != nil {
		return m.ItemId
	}
	return 0
}

func (m *C2SItemUpgradeRequest) GetUpgradeType() int32 {
	if m != nil {
		return m.UpgradeType
	}
	return 0
}

func (m *C2SItemUpgradeRequest) GetItemNum() int32 {
	if m != nil {
		return m.ItemNum
	}
	return 0
}

type S2CItemUpgradeResponse struct {
	RoleId   int32           `protobuf:"varint,1,opt,name=RoleId" json:"RoleId,omitempty"`
	NewItems map[int32]int32 `protobuf:"bytes,2,rep,name=NewItems" json:"NewItems,omitempty" protobuf_key:"varint,1,opt,name=key" protobuf_val:"varint,2,opt,name=value"`
}

func (m *S2CItemUpgradeResponse) Reset()                    { *m = S2CItemUpgradeResponse{} }
func (m *S2CItemUpgradeResponse) String() string            { return proto.CompactTextString(m) }
func (*S2CItemUpgradeResponse) ProtoMessage()               {}
func (*S2CItemUpgradeResponse) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{57} }

func (m *S2CItemUpgradeResponse) GetRoleId() int32 {
	if m != nil {
		return m.RoleId
	}
	return 0
}

func (m *S2CItemUpgradeResponse) GetNewItems() map[int32]int32 {
	if m != nil {
		return m.NewItems
	}
	return nil
}

// 物品一键合成装备
type C2SItemOneKeyUpgradeRequest struct {
	ItemIds []int32 `protobuf:"varint,1,rep,packed,name=ItemIds" json:"ItemIds,omitempty"`
}

func (m *C2SItemOneKeyUpgradeRequest) Reset()                    { *m = C2SItemOneKeyUpgradeRequest{} }
func (m *C2SItemOneKeyUpgradeRequest) String() string            { return proto.CompactTextString(m) }
func (*C2SItemOneKeyUpgradeRequest) ProtoMessage()               {}
func (*C2SItemOneKeyUpgradeRequest) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{58} }

func (m *C2SItemOneKeyUpgradeRequest) GetItemIds() []int32 {
	if m != nil {
		return m.ItemIds
	}
	return nil
}

type S2CItemOneKeyUpgradeResponse struct {
	ItemIds     []int32         `protobuf:"varint,1,rep,packed,name=ItemIds" json:"ItemIds,omitempty"`
	CostItems   map[int32]int32 `protobuf:"bytes,2,rep,name=CostItems" json:"CostItems,omitempty" protobuf_key:"varint,1,opt,name=key" protobuf_val:"varint,2,opt,name=value"`
	ResultItems map[int32]int32 `protobuf:"bytes,3,rep,name=ResultItems" json:"ResultItems,omitempty" protobuf_key:"varint,1,opt,name=key" protobuf_val:"varint,2,opt,name=value"`
}

func (m *S2CItemOneKeyUpgradeResponse) Reset()                    { *m = S2CItemOneKeyUpgradeResponse{} }
func (m *S2CItemOneKeyUpgradeResponse) String() string            { return proto.CompactTextString(m) }
func (*S2CItemOneKeyUpgradeResponse) ProtoMessage()               {}
func (*S2CItemOneKeyUpgradeResponse) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{59} }

func (m *S2CItemOneKeyUpgradeResponse) GetItemIds() []int32 {
	if m != nil {
		return m.ItemIds
	}
	return nil
}

func (m *S2CItemOneKeyUpgradeResponse) GetCostItems() map[int32]int32 {
	if m != nil {
		return m.CostItems
	}
	return nil
}

func (m *S2CItemOneKeyUpgradeResponse) GetResultItems() map[int32]int32 {
	if m != nil {
		return m.ResultItems
	}
	return nil
}

// ----------------------------------- 角色 ------------------------------------
// 请求角色
type C2SRolesRequest struct {
}

func (m *C2SRolesRequest) Reset()                    { *m = C2SRolesRequest{} }
func (m *C2SRolesRequest) String() string            { return proto.CompactTextString(m) }
func (*C2SRolesRequest) ProtoMessage()               {}
func (*C2SRolesRequest) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{60} }

type AttrData struct {
	AttrId int32 `protobuf:"varint,1,opt,name=AttrId" json:"AttrId,omitempty"`
	Value  int32 `protobuf:"varint,2,opt,name=Value" json:"Value,omitempty"`
}

func (m *AttrData) Reset()                    { *m = AttrData{} }
func (m *AttrData) String() string            { return proto.CompactTextString(m) }
func (*AttrData) ProtoMessage()               {}
func (*AttrData) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{61} }

func (m *AttrData) GetAttrId() int32 {
	if m != nil {
		return m.AttrId
	}
	return 0
}

func (m *AttrData) GetValue() int32 {
	if m != nil {
		return m.Value
	}
	return 0
}

type Role struct {
	Id      int32   `protobuf:"varint,1,opt,name=Id" json:"Id,omitempty"`
	TableId int32   `protobuf:"varint,2,opt,name=TableId" json:"TableId,omitempty"`
	Rank    int32   `protobuf:"varint,3,opt,name=Rank" json:"Rank,omitempty"`
	Level   int32   `protobuf:"varint,4,opt,name=Level" json:"Level,omitempty"`
	IsLock  bool    `protobuf:"varint,5,opt,name=IsLock" json:"IsLock,omitempty"`
	Equips  []int32 `protobuf:"varint,6,rep,packed,name=Equips" json:"Equips,omitempty"`
}

func (m *Role) Reset()                    { *m = Role{} }
func (m *Role) String() string            { return proto.CompactTextString(m) }
func (*Role) ProtoMessage()               {}
func (*Role) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{62} }

func (m *Role) GetId() int32 {
	if m != nil {
		return m.Id
	}
	return 0
}

func (m *Role) GetTableId() int32 {
	if m != nil {
		return m.TableId
	}
	return 0
}

func (m *Role) GetRank() int32 {
	if m != nil {
		return m.Rank
	}
	return 0
}

func (m *Role) GetLevel() int32 {
	if m != nil {
		return m.Level
	}
	return 0
}

func (m *Role) GetIsLock() bool {
	if m != nil {
		return m.IsLock
	}
	return false
}

func (m *Role) GetEquips() []int32 {
	if m != nil {
		return m.Equips
	}
	return nil
}

// 请求角色返回
type S2CRolesResponse struct {
	Roles []*Role `protobuf:"bytes,1,rep,name=Roles" json:"Roles,omitempty"`
}

func (m *S2CRolesResponse) Reset()                    { *m = S2CRolesResponse{} }
func (m *S2CRolesResponse) String() string            { return proto.CompactTextString(m) }
func (*S2CRolesResponse) ProtoMessage()               {}
func (*S2CRolesResponse) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{63} }

func (m *S2CRolesResponse) GetRoles() []*Role {
	if m != nil {
		return m.Roles
	}
	return nil
}

// 角色信息更新通知
type S2CRolesChangeNotify struct {
	Adds    []*Role `protobuf:"bytes,1,rep,name=Adds" json:"Adds,omitempty"`
	Removes []int32 `protobuf:"varint,2,rep,packed,name=Removes" json:"Removes,omitempty"`
	Updates []*Role `protobuf:"bytes,3,rep,name=Updates" json:"Updates,omitempty"`
}

func (m *S2CRolesChangeNotify) Reset()                    { *m = S2CRolesChangeNotify{} }
func (m *S2CRolesChangeNotify) String() string            { return proto.CompactTextString(m) }
func (*S2CRolesChangeNotify) ProtoMessage()               {}
func (*S2CRolesChangeNotify) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{64} }

func (m *S2CRolesChangeNotify) GetAdds() []*Role {
	if m != nil {
		return m.Adds
	}
	return nil
}

func (m *S2CRolesChangeNotify) GetRemoves() []int32 {
	if m != nil {
		return m.Removes
	}
	return nil
}

func (m *S2CRolesChangeNotify) GetUpdates() []*Role {
	if m != nil {
		return m.Updates
	}
	return nil
}

// 角色属性请求
type C2SRoleAttrsRequest struct {
	RoleId int32 `protobuf:"varint,1,opt,name=RoleId" json:"RoleId,omitempty"`
}

func (m *C2SRoleAttrsRequest) Reset()                    { *m = C2SRoleAttrsRequest{} }
func (m *C2SRoleAttrsRequest) String() string            { return proto.CompactTextString(m) }
func (*C2SRoleAttrsRequest) ProtoMessage()               {}
func (*C2SRoleAttrsRequest) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{65} }

func (m *C2SRoleAttrsRequest) GetRoleId() int32 {
	if m != nil {
		return m.RoleId
	}
	return 0
}

// 角色属性返回
type S2CRoleAttrsResponse struct {
	RoleId int32   `protobuf:"varint,1,opt,name=RoleId" json:"RoleId,omitempty"`
	Attrs  []int32 `protobuf:"varint,2,rep,packed,name=Attrs" json:"Attrs,omitempty"`
	Power  int32   `protobuf:"varint,3,opt,name=Power" json:"Power,omitempty"`
}

func (m *S2CRoleAttrsResponse) Reset()                    { *m = S2CRoleAttrsResponse{} }
func (m *S2CRoleAttrsResponse) String() string            { return proto.CompactTextString(m) }
func (*S2CRoleAttrsResponse) ProtoMessage()               {}
func (*S2CRoleAttrsResponse) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{66} }

func (m *S2CRoleAttrsResponse) GetRoleId() int32 {
	if m != nil {
		return m.RoleId
	}
	return 0
}

func (m *S2CRoleAttrsResponse) GetAttrs() []int32 {
	if m != nil {
		return m.Attrs
	}
	return nil
}

func (m *S2CRoleAttrsResponse) GetPower() int32 {
	if m != nil {
		return m.Power
	}
	return 0
}

// 角色升级
type C2SRoleLevelUpRequest struct {
	RoleId int32 `protobuf:"varint,1,opt,name=RoleId" json:"RoleId,omitempty"`
	UpNum  int32 `protobuf:"varint,2,opt,name=UpNum" json:"UpNum,omitempty"`
}

func (m *C2SRoleLevelUpRequest) Reset()                    { *m = C2SRoleLevelUpRequest{} }
func (m *C2SRoleLevelUpRequest) String() string            { return proto.CompactTextString(m) }
func (*C2SRoleLevelUpRequest) ProtoMessage()               {}
func (*C2SRoleLevelUpRequest) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{67} }

func (m *C2SRoleLevelUpRequest) GetRoleId() int32 {
	if m != nil {
		return m.RoleId
	}
	return 0
}

func (m *C2SRoleLevelUpRequest) GetUpNum() int32 {
	if m != nil {
		return m.UpNum
	}
	return 0
}

type S2CRoleLevelUpResponse struct {
	RoleId int32 `protobuf:"varint,1,opt,name=RoleId" json:"RoleId,omitempty"`
	UpNum  int32 `protobuf:"varint,2,opt,name=UpNum" json:"UpNum,omitempty"`
	Level  int32 `protobuf:"varint,3,opt,name=Level" json:"Level,omitempty"`
}

func (m *S2CRoleLevelUpResponse) Reset()                    { *m = S2CRoleLevelUpResponse{} }
func (m *S2CRoleLevelUpResponse) String() string            { return proto.CompactTextString(m) }
func (*S2CRoleLevelUpResponse) ProtoMessage()               {}
func (*S2CRoleLevelUpResponse) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{68} }

func (m *S2CRoleLevelUpResponse) GetRoleId() int32 {
	if m != nil {
		return m.RoleId
	}
	return 0
}

func (m *S2CRoleLevelUpResponse) GetUpNum() int32 {
	if m != nil {
		return m.UpNum
	}
	return 0
}

func (m *S2CRoleLevelUpResponse) GetLevel() int32 {
	if m != nil {
		return m.Level
	}
	return 0
}

// 角色升阶
type C2SRoleRankUpRequest struct {
	RoleId int32 `protobuf:"varint,1,opt,name=RoleId" json:"RoleId,omitempty"`
}

func (m *C2SRoleRankUpRequest) Reset()                    { *m = C2SRoleRankUpRequest{} }
func (m *C2SRoleRankUpRequest) String() string            { return proto.CompactTextString(m) }
func (*C2SRoleRankUpRequest) ProtoMessage()               {}
func (*C2SRoleRankUpRequest) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{69} }

func (m *C2SRoleRankUpRequest) GetRoleId() int32 {
	if m != nil {
		return m.RoleId
	}
	return 0
}

type S2CRoleRankUpResponse struct {
	RoleId int32 `protobuf:"varint,1,opt,name=RoleId" json:"RoleId,omitempty"`
	Rank   int32 `protobuf:"varint,2,opt,name=Rank" json:"Rank,omitempty"`
}

func (m *S2CRoleRankUpResponse) Reset()                    { *m = S2CRoleRankUpResponse{} }
func (m *S2CRoleRankUpResponse) String() string            { return proto.CompactTextString(m) }
func (*S2CRoleRankUpResponse) ProtoMessage()               {}
func (*S2CRoleRankUpResponse) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{70} }

func (m *S2CRoleRankUpResponse) GetRoleId() int32 {
	if m != nil {
		return m.RoleId
	}
	return 0
}

func (m *S2CRoleRankUpResponse) GetRank() int32 {
	if m != nil {
		return m.Rank
	}
	return 0
}

// 角色分解
type C2SRoleDecomposeRequest struct {
	RoleIds []int32 `protobuf:"varint,1,rep,packed,name=RoleIds" json:"RoleIds,omitempty"`
}

func (m *C2SRoleDecomposeRequest) Reset()                    { *m = C2SRoleDecomposeRequest{} }
func (m *C2SRoleDecomposeRequest) String() string            { return proto.CompactTextString(m) }
func (*C2SRoleDecomposeRequest) ProtoMessage()               {}
func (*C2SRoleDecomposeRequest) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{71} }

func (m *C2SRoleDecomposeRequest) GetRoleIds() []int32 {
	if m != nil {
		return m.RoleIds
	}
	return nil
}

type S2CRoleDecomposeResponse struct {
	RoleIds  []int32     `protobuf:"varint,1,rep,packed,name=RoleIds" json:"RoleIds,omitempty"`
	GetItems []*ItemInfo `protobuf:"bytes,2,rep,name=GetItems" json:"GetItems,omitempty"`
}

func (m *S2CRoleDecomposeResponse) Reset()                    { *m = S2CRoleDecomposeResponse{} }
func (m *S2CRoleDecomposeResponse) String() string            { return proto.CompactTextString(m) }
func (*S2CRoleDecomposeResponse) ProtoMessage()               {}
func (*S2CRoleDecomposeResponse) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{72} }

func (m *S2CRoleDecomposeResponse) GetRoleIds() []int32 {
	if m != nil {
		return m.RoleIds
	}
	return nil
}

func (m *S2CRoleDecomposeResponse) GetGetItems() []*ItemInfo {
	if m != nil {
		return m.GetItems
	}
	return nil
}

// 角色合成
type C2SRoleFusionRequest struct {
	FusionId     int32   `protobuf:"varint,1,opt,name=FusionId" json:"FusionId,omitempty"`
	MainCardId   int32   `protobuf:"varint,2,opt,name=MainCardId" json:"MainCardId,omitempty"`
	Cost1CardIds []int32 `protobuf:"varint,3,rep,packed,name=Cost1CardIds" json:"Cost1CardIds,omitempty"`
	Cost2CardIds []int32 `protobuf:"varint,4,rep,packed,name=Cost2CardIds" json:"Cost2CardIds,omitempty"`
	Cost3CardIds []int32 `protobuf:"varint,5,rep,packed,name=Cost3CardIds" json:"Cost3CardIds,omitempty"`
}

func (m *C2SRoleFusionRequest) Reset()                    { *m = C2SRoleFusionRequest{} }
func (m *C2SRoleFusionRequest) String() string            { return proto.CompactTextString(m) }
func (*C2SRoleFusionRequest) ProtoMessage()               {}
func (*C2SRoleFusionRequest) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{73} }

func (m *C2SRoleFusionRequest) GetFusionId() int32 {
	if m != nil {
		return m.FusionId
	}
	return 0
}

func (m *C2SRoleFusionRequest) GetMainCardId() int32 {
	if m != nil {
		return m.MainCardId
	}
	return 0
}

func (m *C2SRoleFusionRequest) GetCost1CardIds() []int32 {
	if m != nil {
		return m.Cost1CardIds
	}
	return nil
}

func (m *C2SRoleFusionRequest) GetCost2CardIds() []int32 {
	if m != nil {
		return m.Cost2CardIds
	}
	return nil
}

func (m *C2SRoleFusionRequest) GetCost3CardIds() []int32 {
	if m != nil {
		return m.Cost3CardIds
	}
	return nil
}

type S2CRoleFusionResponse struct {
	NewCardId int32       `protobuf:"varint,1,opt,name=NewCardId" json:"NewCardId,omitempty"`
	RoleId    int32       `protobuf:"varint,2,opt,name=RoleId" json:"RoleId,omitempty"`
	GetItems  []*ItemInfo `protobuf:"bytes,3,rep,name=GetItems" json:"GetItems,omitempty"`
}

func (m *S2CRoleFusionResponse) Reset()                    { *m = S2CRoleFusionResponse{} }
func (m *S2CRoleFusionResponse) String() string            { return proto.CompactTextString(m) }
func (*S2CRoleFusionResponse) ProtoMessage()               {}
func (*S2CRoleFusionResponse) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{74} }

func (m *S2CRoleFusionResponse) GetNewCardId() int32 {
	if m != nil {
		return m.NewCardId
	}
	return 0
}

func (m *S2CRoleFusionResponse) GetRoleId() int32 {
	if m != nil {
		return m.RoleId
	}
	return 0
}

func (m *S2CRoleFusionResponse) GetGetItems() []*ItemInfo {
	if m != nil {
		return m.GetItems
	}
	return nil
}

// 请求锁定角色
type C2SRoleLockRequest struct {
	RoleId int32 `protobuf:"varint,1,opt,name=RoleId" json:"RoleId,omitempty"`
	IsLock bool  `protobuf:"varint,2,opt,name=IsLock" json:"IsLock,omitempty"`
}

func (m *C2SRoleLockRequest) Reset()                    { *m = C2SRoleLockRequest{} }
func (m *C2SRoleLockRequest) String() string            { return proto.CompactTextString(m) }
func (*C2SRoleLockRequest) ProtoMessage()               {}
func (*C2SRoleLockRequest) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{75} }

func (m *C2SRoleLockRequest) GetRoleId() int32 {
	if m != nil {
		return m.RoleId
	}
	return 0
}

func (m *C2SRoleLockRequest) GetIsLock() bool {
	if m != nil {
		return m.IsLock
	}
	return false
}

type S2CRoleLockResponse struct {
	RoleId int32 `protobuf:"varint,1,opt,name=RoleId" json:"RoleId,omitempty"`
	IsLock bool  `protobuf:"varint,2,opt,name=IsLock" json:"IsLock,omitempty"`
}

func (m *S2CRoleLockResponse) Reset()                    { *m = S2CRoleLockResponse{} }
func (m *S2CRoleLockResponse) String() string            { return proto.CompactTextString(m) }
func (*S2CRoleLockResponse) ProtoMessage()               {}
func (*S2CRoleLockResponse) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{76} }

func (m *S2CRoleLockResponse) GetRoleId() int32 {
	if m != nil {
		return m.RoleId
	}
	return 0
}

func (m *S2CRoleLockResponse) GetIsLock() bool {
	if m != nil {
		return m.IsLock
	}
	return false
}

// 角色图鉴请求
type C2SRoleHandbookRequest struct {
}

func (m *C2SRoleHandbookRequest) Reset()                    { *m = C2SRoleHandbookRequest{} }
func (m *C2SRoleHandbookRequest) String() string            { return proto.CompactTextString(m) }
func (*C2SRoleHandbookRequest) ProtoMessage()               {}
func (*C2SRoleHandbookRequest) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{77} }

type S2CRoleHandbookResponse struct {
	Roles []int32 `protobuf:"varint,1,rep,packed,name=Roles" json:"Roles,omitempty"`
}

func (m *S2CRoleHandbookResponse) Reset()                    { *m = S2CRoleHandbookResponse{} }
func (m *S2CRoleHandbookResponse) String() string            { return proto.CompactTextString(m) }
func (*S2CRoleHandbookResponse) ProtoMessage()               {}
func (*S2CRoleHandbookResponse) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{78} }

func (m *S2CRoleHandbookResponse) GetRoles() []int32 {
	if m != nil {
		return m.Roles
	}
	return nil
}

// 左槽开启
type C2SRoleLeftSlotOpenRequest struct {
	RoleId int32 `protobuf:"varint,1,opt,name=RoleId" json:"RoleId,omitempty"`
}

func (m *C2SRoleLeftSlotOpenRequest) Reset()                    { *m = C2SRoleLeftSlotOpenRequest{} }
func (m *C2SRoleLeftSlotOpenRequest) String() string            { return proto.CompactTextString(m) }
func (*C2SRoleLeftSlotOpenRequest) ProtoMessage()               {}
func (*C2SRoleLeftSlotOpenRequest) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{79} }

func (m *C2SRoleLeftSlotOpenRequest) GetRoleId() int32 {
	if m != nil {
		return m.RoleId
	}
	return 0
}

type S2CRoleLeftSlotOpenResponse struct {
	RoleId int32 `protobuf:"varint,1,opt,name=RoleId" json:"RoleId,omitempty"`
}

func (m *S2CRoleLeftSlotOpenResponse) Reset()                    { *m = S2CRoleLeftSlotOpenResponse{} }
func (m *S2CRoleLeftSlotOpenResponse) String() string            { return proto.CompactTextString(m) }
func (*S2CRoleLeftSlotOpenResponse) ProtoMessage()               {}
func (*S2CRoleLeftSlotOpenResponse) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{80} }

func (m *S2CRoleLeftSlotOpenResponse) GetRoleId() int32 {
	if m != nil {
		return m.RoleId
	}
	return 0
}

// 一键穿戴
type C2SRoleOneKeyEquipRequest struct {
	RoleId int32   `protobuf:"varint,1,opt,name=RoleId" json:"RoleId,omitempty"`
	Equips []int32 `protobuf:"varint,2,rep,packed,name=Equips" json:"Equips,omitempty"`
}

func (m *C2SRoleOneKeyEquipRequest) Reset()                    { *m = C2SRoleOneKeyEquipRequest{} }
func (m *C2SRoleOneKeyEquipRequest) String() string            { return proto.CompactTextString(m) }
func (*C2SRoleOneKeyEquipRequest) ProtoMessage()               {}
func (*C2SRoleOneKeyEquipRequest) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{81} }

func (m *C2SRoleOneKeyEquipRequest) GetRoleId() int32 {
	if m != nil {
		return m.RoleId
	}
	return 0
}

func (m *C2SRoleOneKeyEquipRequest) GetEquips() []int32 {
	if m != nil {
		return m.Equips
	}
	return nil
}

type S2CRoleOneKeyEquipResponse struct {
	RoleId int32   `protobuf:"varint,1,opt,name=RoleId" json:"RoleId,omitempty"`
	Equips []int32 `protobuf:"varint,2,rep,packed,name=Equips" json:"Equips,omitempty"`
}

func (m *S2CRoleOneKeyEquipResponse) Reset()                    { *m = S2CRoleOneKeyEquipResponse{} }
func (m *S2CRoleOneKeyEquipResponse) String() string            { return proto.CompactTextString(m) }
func (*S2CRoleOneKeyEquipResponse) ProtoMessage()               {}
func (*S2CRoleOneKeyEquipResponse) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{82} }

func (m *S2CRoleOneKeyEquipResponse) GetRoleId() int32 {
	if m != nil {
		return m.RoleId
	}
	return 0
}

func (m *S2CRoleOneKeyEquipResponse) GetEquips() []int32 {
	if m != nil {
		return m.Equips
	}
	return nil
}

// 一键脱装
type C2SRoleOnekeyUnequipRequest struct {
	RoleId int32 `protobuf:"varint,1,opt,name=RoleId" json:"RoleId,omitempty"`
}

func (m *C2SRoleOnekeyUnequipRequest) Reset()                    { *m = C2SRoleOnekeyUnequipRequest{} }
func (m *C2SRoleOnekeyUnequipRequest) String() string            { return proto.CompactTextString(m) }
func (*C2SRoleOnekeyUnequipRequest) ProtoMessage()               {}
func (*C2SRoleOnekeyUnequipRequest) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{83} }

func (m *C2SRoleOnekeyUnequipRequest) GetRoleId() int32 {
	if m != nil {
		return m.RoleId
	}
	return 0
}

type S2CRoleOneKeyUnequipResponse struct {
	RoleId int32   `protobuf:"varint,1,opt,name=RoleId" json:"RoleId,omitempty"`
	Equips []int32 `protobuf:"varint,2,rep,packed,name=Equips" json:"Equips,omitempty"`
}

func (m *S2CRoleOneKeyUnequipResponse) Reset()                    { *m = S2CRoleOneKeyUnequipResponse{} }
func (m *S2CRoleOneKeyUnequipResponse) String() string            { return proto.CompactTextString(m) }
func (*S2CRoleOneKeyUnequipResponse) ProtoMessage()               {}
func (*S2CRoleOneKeyUnequipResponse) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{84} }

func (m *S2CRoleOneKeyUnequipResponse) GetRoleId() int32 {
	if m != nil {
		return m.RoleId
	}
	return 0
}

func (m *S2CRoleOneKeyUnequipResponse) GetEquips() []int32 {
	if m != nil {
		return m.Equips
	}
	return nil
}

// 左槽升级保存
type C2SRoleLeftSlotResultSaveRequest struct {
	RoleId int32 `protobuf:"varint,1,opt,name=RoleId" json:"RoleId,omitempty"`
}

func (m *C2SRoleLeftSlotResultSaveRequest) Reset()         { *m = C2SRoleLeftSlotResultSaveRequest{} }
func (m *C2SRoleLeftSlotResultSaveRequest) String() string { return proto.CompactTextString(m) }
func (*C2SRoleLeftSlotResultSaveRequest) ProtoMessage()    {}
func (*C2SRoleLeftSlotResultSaveRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor0, []int{85}
}

func (m *C2SRoleLeftSlotResultSaveRequest) GetRoleId() int32 {
	if m != nil {
		return m.RoleId
	}
	return 0
}

type S2CRoleLeftSlotResultSaveResponse struct {
	RoleId int32 `protobuf:"varint,1,opt,name=RoleId" json:"RoleId,omitempty"`
}

func (m *S2CRoleLeftSlotResultSaveResponse) Reset()         { *m = S2CRoleLeftSlotResultSaveResponse{} }
func (m *S2CRoleLeftSlotResultSaveResponse) String() string { return proto.CompactTextString(m) }
func (*S2CRoleLeftSlotResultSaveResponse) ProtoMessage()    {}
func (*S2CRoleLeftSlotResultSaveResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor0, []int{86}
}

func (m *S2CRoleLeftSlotResultSaveResponse) GetRoleId() int32 {
	if m != nil {
		return m.RoleId
	}
	return 0
}

// 左槽升级取消
type C2SRoleLeftSlotResultCancelRequest struct {
	RoleId int32 `protobuf:"varint,1,opt,name=RoleId" json:"RoleId,omitempty"`
}

func (m *C2SRoleLeftSlotResultCancelRequest) Reset()         { *m = C2SRoleLeftSlotResultCancelRequest{} }
func (m *C2SRoleLeftSlotResultCancelRequest) String() string { return proto.CompactTextString(m) }
func (*C2SRoleLeftSlotResultCancelRequest) ProtoMessage()    {}
func (*C2SRoleLeftSlotResultCancelRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor0, []int{87}
}

func (m *C2SRoleLeftSlotResultCancelRequest) GetRoleId() int32 {
	if m != nil {
		return m.RoleId
	}
	return 0
}

type S2CRoleLeftSlotResultCancelResponse struct {
	RoleId int32 `protobuf:"varint,1,opt,name=RoleId" json:"RoleId,omitempty"`
}

func (m *S2CRoleLeftSlotResultCancelResponse) Reset()         { *m = S2CRoleLeftSlotResultCancelResponse{} }
func (m *S2CRoleLeftSlotResultCancelResponse) String() string { return proto.CompactTextString(m) }
func (*S2CRoleLeftSlotResultCancelResponse) ProtoMessage()    {}
func (*S2CRoleLeftSlotResultCancelResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor0, []int{88}
}

func (m *S2CRoleLeftSlotResultCancelResponse) GetRoleId() int32 {
	if m != nil {
		return m.RoleId
	}
	return 0
}

// --------------------------------- 邮件 -------------------------------------
// 发送邮件
type C2SMailSendRequest struct {
	ReceiverId    int32       `protobuf:"varint,1,opt,name=ReceiverId" json:"ReceiverId,omitempty"`
	MailType      int32       `protobuf:"varint,2,opt,name=MailType" json:"MailType,omitempty"`
	MailTitle     string      `protobuf:"bytes,3,opt,name=MailTitle" json:"MailTitle,omitempty"`
	MailContent   string      `protobuf:"bytes,4,opt,name=MailContent" json:"MailContent,omitempty"`
	AttachedItems []*ItemInfo `protobuf:"bytes,5,rep,name=AttachedItems" json:"AttachedItems,omitempty"`
}

func (m *C2SMailSendRequest) Reset()                    { *m = C2SMailSendRequest{} }
func (m *C2SMailSendRequest) String() string            { return proto.CompactTextString(m) }
func (*C2SMailSendRequest) ProtoMessage()               {}
func (*C2SMailSendRequest) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{89} }

func (m *C2SMailSendRequest) GetReceiverId() int32 {
	if m != nil {
		return m.ReceiverId
	}
	return 0
}

func (m *C2SMailSendRequest) GetMailType() int32 {
	if m != nil {
		return m.MailType
	}
	return 0
}

func (m *C2SMailSendRequest) GetMailTitle() string {
	if m != nil {
		return m.MailTitle
	}
	return ""
}

func (m *C2SMailSendRequest) GetMailContent() string {
	if m != nil {
		return m.MailContent
	}
	return ""
}

func (m *C2SMailSendRequest) GetAttachedItems() []*ItemInfo {
	if m != nil {
		return m.AttachedItems
	}
	return nil
}

type S2CMailSendResponse struct {
	MailId int32 `protobuf:"varint,1,opt,name=MailId" json:"MailId,omitempty"`
}

func (m *S2CMailSendResponse) Reset()                    { *m = S2CMailSendResponse{} }
func (m *S2CMailSendResponse) String() string            { return proto.CompactTextString(m) }
func (*S2CMailSendResponse) ProtoMessage()               {}
func (*S2CMailSendResponse) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{90} }

func (m *S2CMailSendResponse) GetMailId() int32 {
	if m != nil {
		return m.MailId
	}
	return 0
}

// 获取邮件列表
type C2SMailListRequest struct {
}

func (m *C2SMailListRequest) Reset()                    { *m = C2SMailListRequest{} }
func (m *C2SMailListRequest) String() string            { return proto.CompactTextString(m) }
func (*C2SMailListRequest) ProtoMessage()               {}
func (*C2SMailListRequest) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{91} }

type MailBasicData struct {
	Id            int32  `protobuf:"varint,1,opt,name=Id" json:"Id,omitempty"`
	Type          int32  `protobuf:"varint,2,opt,name=Type" json:"Type,omitempty"`
	Title         string `protobuf:"bytes,3,opt,name=Title" json:"Title,omitempty"`
	SenderName    string `protobuf:"bytes,4,opt,name=SenderName" json:"SenderName,omitempty"`
	SenderId      int32  `protobuf:"varint,5,opt,name=SenderId" json:"SenderId,omitempty"`
	SendTime      int32  `protobuf:"varint,6,opt,name=SendTime" json:"SendTime,omitempty"`
	IsRead        bool   `protobuf:"varint,7,opt,name=IsRead" json:"IsRead,omitempty"`
	IsGetAttached bool   `protobuf:"varint,8,opt,name=IsGetAttached" json:"IsGetAttached,omitempty"`
	HasAttached   bool   `protobuf:"varint,9,opt,name=HasAttached" json:"HasAttached,omitempty"`
}

func (m *MailBasicData) Reset()                    { *m = MailBasicData{} }
func (m *MailBasicData) String() string            { return proto.CompactTextString(m) }
func (*MailBasicData) ProtoMessage()               {}
func (*MailBasicData) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{92} }

func (m *MailBasicData) GetId() int32 {
	if m != nil {
		return m.Id
	}
	return 0
}

func (m *MailBasicData) GetType() int32 {
	if m != nil {
		return m.Type
	}
	return 0
}

func (m *MailBasicData) GetTitle() string {
	if m != nil {
		return m.Title
	}
	return ""
}

func (m *MailBasicData) GetSenderName() string {
	if m != nil {
		return m.SenderName
	}
	return ""
}

func (m *MailBasicData) GetSenderId() int32 {
	if m != nil {
		return m.SenderId
	}
	return 0
}

func (m *MailBasicData) GetSendTime() int32 {
	if m != nil {
		return m.SendTime
	}
	return 0
}

func (m *MailBasicData) GetIsRead() bool {
	if m != nil {
		return m.IsRead
	}
	return false
}

func (m *MailBasicData) GetIsGetAttached() bool {
	if m != nil {
		return m.IsGetAttached
	}
	return false
}

func (m *MailBasicData) GetHasAttached() bool {
	if m != nil {
		return m.HasAttached
	}
	return false
}

type S2CMailListResponse struct {
	Mails []*MailBasicData `protobuf:"bytes,1,rep,name=Mails" json:"Mails,omitempty"`
}

func (m *S2CMailListResponse) Reset()                    { *m = S2CMailListResponse{} }
func (m *S2CMailListResponse) String() string            { return proto.CompactTextString(m) }
func (*S2CMailListResponse) ProtoMessage()               {}
func (*S2CMailListResponse) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{93} }

func (m *S2CMailListResponse) GetMails() []*MailBasicData {
	if m != nil {
		return m.Mails
	}
	return nil
}

// 请求邮件具体内容
type C2SMailDetailRequest struct {
	Ids []int32 `protobuf:"varint,1,rep,packed,name=Ids" json:"Ids,omitempty"`
}

func (m *C2SMailDetailRequest) Reset()                    { *m = C2SMailDetailRequest{} }
func (m *C2SMailDetailRequest) String() string            { return proto.CompactTextString(m) }
func (*C2SMailDetailRequest) ProtoMessage()               {}
func (*C2SMailDetailRequest) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{94} }

func (m *C2SMailDetailRequest) GetIds() []int32 {
	if m != nil {
		return m.Ids
	}
	return nil
}

type MailDetail struct {
	Id            int32       `protobuf:"varint,1,opt,name=Id" json:"Id,omitempty"`
	Content       string      `protobuf:"bytes,2,opt,name=Content" json:"Content,omitempty"`
	AttachedItems []*ItemInfo `protobuf:"bytes,3,rep,name=AttachedItems" json:"AttachedItems,omitempty"`
}

func (m *MailDetail) Reset()                    { *m = MailDetail{} }
func (m *MailDetail) String() string            { return proto.CompactTextString(m) }
func (*MailDetail) ProtoMessage()               {}
func (*MailDetail) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{95} }

func (m *MailDetail) GetId() int32 {
	if m != nil {
		return m.Id
	}
	return 0
}

func (m *MailDetail) GetContent() string {
	if m != nil {
		return m.Content
	}
	return ""
}

func (m *MailDetail) GetAttachedItems() []*ItemInfo {
	if m != nil {
		return m.AttachedItems
	}
	return nil
}

type S2CMailDetailResponse struct {
	Mails []*MailDetail `protobuf:"bytes,1,rep,name=Mails" json:"Mails,omitempty"`
}

func (m *S2CMailDetailResponse) Reset()                    { *m = S2CMailDetailResponse{} }
func (m *S2CMailDetailResponse) String() string            { return proto.CompactTextString(m) }
func (*S2CMailDetailResponse) ProtoMessage()               {}
func (*S2CMailDetailResponse) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{96} }

func (m *S2CMailDetailResponse) GetMails() []*MailDetail {
	if m != nil {
		return m.Mails
	}
	return nil
}

// 获取邮件附加物品
type C2SMailGetAttachedItemsRequest struct {
	MailIds []int32 `protobuf:"varint,1,rep,packed,name=MailIds" json:"MailIds,omitempty"`
}

func (m *C2SMailGetAttachedItemsRequest) Reset()                    { *m = C2SMailGetAttachedItemsRequest{} }
func (m *C2SMailGetAttachedItemsRequest) String() string            { return proto.CompactTextString(m) }
func (*C2SMailGetAttachedItemsRequest) ProtoMessage()               {}
func (*C2SMailGetAttachedItemsRequest) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{97} }

func (m *C2SMailGetAttachedItemsRequest) GetMailIds() []int32 {
	if m != nil {
		return m.MailIds
	}
	return nil
}

type S2CMailGetAttachedItemsResponse struct {
	MailIds       []int32         `protobuf:"varint,1,rep,packed,name=MailIds" json:"MailIds,omitempty"`
	AttachedItems map[int32]int32 `protobuf:"bytes,2,rep,name=AttachedItems" json:"AttachedItems,omitempty" protobuf_key:"varint,1,opt,name=key" protobuf_val:"varint,2,opt,name=value"`
}

func (m *S2CMailGetAttachedItemsResponse) Reset()         { *m = S2CMailGetAttachedItemsResponse{} }
func (m *S2CMailGetAttachedItemsResponse) String() string { return proto.CompactTextString(m) }
func (*S2CMailGetAttachedItemsResponse) ProtoMessage()    {}
func (*S2CMailGetAttachedItemsResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor0, []int{98}
}

func (m *S2CMailGetAttachedItemsResponse) GetMailIds() []int32 {
	if m != nil {
		return m.MailIds
	}
	return nil
}

func (m *S2CMailGetAttachedItemsResponse) GetAttachedItems() map[int32]int32 {
	if m != nil {
		return m.AttachedItems
	}
	return nil
}

// 删除邮件
type C2SMailDeleteRequest struct {
	MailIds []int32 `protobuf:"varint,1,rep,packed,name=MailIds" json:"MailIds,omitempty"`
}

func (m *C2SMailDeleteRequest) Reset()                    { *m = C2SMailDeleteRequest{} }
func (m *C2SMailDeleteRequest) String() string            { return proto.CompactTextString(m) }
func (*C2SMailDeleteRequest) ProtoMessage()               {}
func (*C2SMailDeleteRequest) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{99} }

func (m *C2SMailDeleteRequest) GetMailIds() []int32 {
	if m != nil {
		return m.MailIds
	}
	return nil
}

type S2CMailDeleteResponse struct {
	MailIds []int32 `protobuf:"varint,1,rep,packed,name=MailIds" json:"MailIds,omitempty"`
}

func (m *S2CMailDeleteResponse) Reset()                    { *m = S2CMailDeleteResponse{} }
func (m *S2CMailDeleteResponse) String() string            { return proto.CompactTextString(m) }
func (*S2CMailDeleteResponse) ProtoMessage()               {}
func (*S2CMailDeleteResponse) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{100} }

func (m *S2CMailDeleteResponse) GetMailIds() []int32 {
	if m != nil {
		return m.MailIds
	}
	return nil
}

// 新邮件通知
type S2CMailsNewNotify struct {
	Mails []*MailBasicData `protobuf:"bytes,1,rep,name=Mails" json:"Mails,omitempty"`
}

func (m *S2CMailsNewNotify) Reset()                    { *m = S2CMailsNewNotify{} }
func (m *S2CMailsNewNotify) String() string            { return proto.CompactTextString(m) }
func (*S2CMailsNewNotify) ProtoMessage()               {}
func (*S2CMailsNewNotify) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{101} }

func (m *S2CMailsNewNotify) GetMails() []*MailBasicData {
	if m != nil {
		return m.Mails
	}
	return nil
}

// --------------------------------- 天赋 -------------------------------------
// 天赋升级
type C2STalentUpRequest struct {
	TalentId int32 `protobuf:"varint,1,opt,name=TalentId" json:"TalentId,omitempty"`
}

func (m *C2STalentUpRequest) Reset()                    { *m = C2STalentUpRequest{} }
func (m *C2STalentUpRequest) String() string            { return proto.CompactTextString(m) }
func (*C2STalentUpRequest) ProtoMessage()               {}
func (*C2STalentUpRequest) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{102} }

func (m *C2STalentUpRequest) GetTalentId() int32 {
	if m != nil {
		return m.TalentId
	}
	return 0
}

type S2CTalentUpResponse struct {
	TalentId int32 `protobuf:"varint,1,opt,name=TalentId" json:"TalentId,omitempty"`
	Level    int32 `protobuf:"varint,2,opt,name=Level" json:"Level,omitempty"`
}

func (m *S2CTalentUpResponse) Reset()                    { *m = S2CTalentUpResponse{} }
func (m *S2CTalentUpResponse) String() string            { return proto.CompactTextString(m) }
func (*S2CTalentUpResponse) ProtoMessage()               {}
func (*S2CTalentUpResponse) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{103} }

func (m *S2CTalentUpResponse) GetTalentId() int32 {
	if m != nil {
		return m.TalentId
	}
	return 0
}

func (m *S2CTalentUpResponse) GetLevel() int32 {
	if m != nil {
		return m.Level
	}
	return 0
}

// 请求天赋列表
type C2STalentListRequest struct {
}

func (m *C2STalentListRequest) Reset()                    { *m = C2STalentListRequest{} }
func (m *C2STalentListRequest) String() string            { return proto.CompactTextString(m) }
func (*C2STalentListRequest) ProtoMessage()               {}
func (*C2STalentListRequest) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{104} }

type TalentInfo struct {
	Id    int32 `protobuf:"varint,1,opt,name=Id" json:"Id,omitempty"`
	Level int32 `protobuf:"varint,2,opt,name=Level" json:"Level,omitempty"`
}

func (m *TalentInfo) Reset()                    { *m = TalentInfo{} }
func (m *TalentInfo) String() string            { return proto.CompactTextString(m) }
func (*TalentInfo) ProtoMessage()               {}
func (*TalentInfo) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{105} }

func (m *TalentInfo) GetId() int32 {
	if m != nil {
		return m.Id
	}
	return 0
}

func (m *TalentInfo) GetLevel() int32 {
	if m != nil {
		return m.Level
	}
	return 0
}

type S2CTalentListResponse struct {
	Talents []*TalentInfo `protobuf:"bytes,1,rep,name=Talents" json:"Talents,omitempty"`
}

func (m *S2CTalentListResponse) Reset()                    { *m = S2CTalentListResponse{} }
func (m *S2CTalentListResponse) String() string            { return proto.CompactTextString(m) }
func (*S2CTalentListResponse) ProtoMessage()               {}
func (*S2CTalentListResponse) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{106} }

func (m *S2CTalentListResponse) GetTalents() []*TalentInfo {
	if m != nil {
		return m.Talents
	}
	return nil
}

// 天赋重置
type C2STalentResetRequest struct {
	Tag int32 `protobuf:"varint,1,opt,name=Tag" json:"Tag,omitempty"`
}

func (m *C2STalentResetRequest) Reset()                    { *m = C2STalentResetRequest{} }
func (m *C2STalentResetRequest) String() string            { return proto.CompactTextString(m) }
func (*C2STalentResetRequest) ProtoMessage()               {}
func (*C2STalentResetRequest) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{107} }

func (m *C2STalentResetRequest) GetTag() int32 {
	if m != nil {
		return m.Tag
	}
	return 0
}

type S2CTalentResetResponse struct {
	Tag         int32   `protobuf:"varint,1,opt,name=Tag" json:"Tag,omitempty"`
	CostDiamond int32   `protobuf:"varint,2,opt,name=CostDiamond" json:"CostDiamond,omitempty"`
	ReturnItems []int32 `protobuf:"varint,3,rep,packed,name=ReturnItems" json:"ReturnItems,omitempty"`
}

func (m *S2CTalentResetResponse) Reset()                    { *m = S2CTalentResetResponse{} }
func (m *S2CTalentResetResponse) String() string            { return proto.CompactTextString(m) }
func (*S2CTalentResetResponse) ProtoMessage()               {}
func (*S2CTalentResetResponse) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{108} }

func (m *S2CTalentResetResponse) GetTag() int32 {
	if m != nil {
		return m.Tag
	}
	return 0
}

func (m *S2CTalentResetResponse) GetCostDiamond() int32 {
	if m != nil {
		return m.CostDiamond
	}
	return 0
}

func (m *S2CTalentResetResponse) GetReturnItems() []int32 {
	if m != nil {
		return m.ReturnItems
	}
	return nil
}

// --------------------------------- 爬塔 ------------------------------------
// 请求爬塔数据
type C2STowerDataRequest struct {
}

func (m *C2STowerDataRequest) Reset()                    { *m = C2STowerDataRequest{} }
func (m *C2STowerDataRequest) String() string            { return proto.CompactTextString(m) }
func (*C2STowerDataRequest) ProtoMessage()               {}
func (*C2STowerDataRequest) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{109} }

type S2CTowerDataResponse struct {
	CurrTowerId   int32 `protobuf:"varint,1,opt,name=CurrTowerId" json:"CurrTowerId,omitempty"`
	TowerKeys     int32 `protobuf:"varint,2,opt,name=TowerKeys" json:"TowerKeys,omitempty"`
	RemainSeconds int32 `protobuf:"varint,3,opt,name=RemainSeconds" json:"RemainSeconds,omitempty"`
}

func (m *S2CTowerDataResponse) Reset()                    { *m = S2CTowerDataResponse{} }
func (m *S2CTowerDataResponse) String() string            { return proto.CompactTextString(m) }
func (*S2CTowerDataResponse) ProtoMessage()               {}
func (*S2CTowerDataResponse) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{110} }

func (m *S2CTowerDataResponse) GetCurrTowerId() int32 {
	if m != nil {
		return m.CurrTowerId
	}
	return 0
}

func (m *S2CTowerDataResponse) GetTowerKeys() int32 {
	if m != nil {
		return m.TowerKeys
	}
	return 0
}

func (m *S2CTowerDataResponse) GetRemainSeconds() int32 {
	if m != nil {
		return m.RemainSeconds
	}
	return 0
}

// 请求爬塔某层录像
type C2STowerRecordsInfoRequest struct {
	TowerId int32 `protobuf:"varint,1,opt,name=TowerId" json:"TowerId,omitempty"`
}

func (m *C2STowerRecordsInfoRequest) Reset()                    { *m = C2STowerRecordsInfoRequest{} }
func (m *C2STowerRecordsInfoRequest) String() string            { return proto.CompactTextString(m) }
func (*C2STowerRecordsInfoRequest) ProtoMessage()               {}
func (*C2STowerRecordsInfoRequest) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{111} }

func (m *C2STowerRecordsInfoRequest) GetTowerId() int32 {
	if m != nil {
		return m.TowerId
	}
	return 0
}

type TowerFightRecord struct {
	TowerFightId int32  `protobuf:"varint,1,opt,name=TowerFightId" json:"TowerFightId,omitempty"`
	AttackerId   int32  `protobuf:"varint,2,opt,name=AttackerId" json:"AttackerId,omitempty"`
	AttackerName string `protobuf:"bytes,3,opt,name=AttackerName" json:"AttackerName,omitempty"`
	CreateTime   int32  `protobuf:"varint,4,opt,name=CreateTime" json:"CreateTime,omitempty"`
}

func (m *TowerFightRecord) Reset()                    { *m = TowerFightRecord{} }
func (m *TowerFightRecord) String() string            { return proto.CompactTextString(m) }
func (*TowerFightRecord) ProtoMessage()               {}
func (*TowerFightRecord) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{112} }

func (m *TowerFightRecord) GetTowerFightId() int32 {
	if m != nil {
		return m.TowerFightId
	}
	return 0
}

func (m *TowerFightRecord) GetAttackerId() int32 {
	if m != nil {
		return m.AttackerId
	}
	return 0
}

func (m *TowerFightRecord) GetAttackerName() string {
	if m != nil {
		return m.AttackerName
	}
	return ""
}

func (m *TowerFightRecord) GetCreateTime() int32 {
	if m != nil {
		return m.CreateTime
	}
	return 0
}

type S2CTowerRecordsInfoResponse struct {
	Records []*TowerFightRecord `protobuf:"bytes,1,rep,name=Records" json:"Records,omitempty"`
}

func (m *S2CTowerRecordsInfoResponse) Reset()                    { *m = S2CTowerRecordsInfoResponse{} }
func (m *S2CTowerRecordsInfoResponse) String() string            { return proto.CompactTextString(m) }
func (*S2CTowerRecordsInfoResponse) ProtoMessage()               {}
func (*S2CTowerRecordsInfoResponse) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{113} }

func (m *S2CTowerRecordsInfoResponse) GetRecords() []*TowerFightRecord {
	if m != nil {
		return m.Records
	}
	return nil
}

// 请求爬塔的某个录像具体数据
type C2STowerRecordDataRequest struct {
	TowerFightId int32 `protobuf:"varint,1,opt,name=TowerFightId" json:"TowerFightId,omitempty"`
}

func (m *C2STowerRecordDataRequest) Reset()                    { *m = C2STowerRecordDataRequest{} }
func (m *C2STowerRecordDataRequest) String() string            { return proto.CompactTextString(m) }
func (*C2STowerRecordDataRequest) ProtoMessage()               {}
func (*C2STowerRecordDataRequest) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{114} }

func (m *C2STowerRecordDataRequest) GetTowerFightId() int32 {
	if m != nil {
		return m.TowerFightId
	}
	return 0
}

type S2CTowerRecordDataResponse struct {
	RecordData []byte `protobuf:"bytes,1,opt,name=RecordData,proto3" json:"RecordData,omitempty"`
}

func (m *S2CTowerRecordDataResponse) Reset()                    { *m = S2CTowerRecordDataResponse{} }
func (m *S2CTowerRecordDataResponse) String() string            { return proto.CompactTextString(m) }
func (*S2CTowerRecordDataResponse) ProtoMessage()               {}
func (*S2CTowerRecordDataResponse) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{115} }

func (m *S2CTowerRecordDataResponse) GetRecordData() []byte {
	if m != nil {
		return m.RecordData
	}
	return nil
}

// 请求爬塔排行榜
type C2STowerRankingListRequest struct {
}

func (m *C2STowerRankingListRequest) Reset()                    { *m = C2STowerRankingListRequest{} }
func (m *C2STowerRankingListRequest) String() string            { return proto.CompactTextString(m) }
func (*C2STowerRankingListRequest) ProtoMessage()               {}
func (*C2STowerRankingListRequest) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{116} }

type TowerRankInfo struct {
	PlayerId    int32  `protobuf:"varint,1,opt,name=PlayerId" json:"PlayerId,omitempty"`
	PlayerName  string `protobuf:"bytes,2,opt,name=PlayerName" json:"PlayerName,omitempty"`
	TowerId     int32  `protobuf:"varint,3,opt,name=TowerId" json:"TowerId,omitempty"`
	PlayerLevel int32  `protobuf:"varint,4,opt,name=PlayerLevel" json:"PlayerLevel,omitempty"`
}

func (m *TowerRankInfo) Reset()                    { *m = TowerRankInfo{} }
func (m *TowerRankInfo) String() string            { return proto.CompactTextString(m) }
func (*TowerRankInfo) ProtoMessage()               {}
func (*TowerRankInfo) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{117} }

func (m *TowerRankInfo) GetPlayerId() int32 {
	if m != nil {
		return m.PlayerId
	}
	return 0
}

func (m *TowerRankInfo) GetPlayerName() string {
	if m != nil {
		return m.PlayerName
	}
	return ""
}

func (m *TowerRankInfo) GetTowerId() int32 {
	if m != nil {
		return m.TowerId
	}
	return 0
}

func (m *TowerRankInfo) GetPlayerLevel() int32 {
	if m != nil {
		return m.PlayerLevel
	}
	return 0
}

type S2CTowerRankingListResponse struct {
	Ranks []*TowerRankInfo `protobuf:"bytes,1,rep,name=Ranks" json:"Ranks,omitempty"`
}

func (m *S2CTowerRankingListResponse) Reset()                    { *m = S2CTowerRankingListResponse{} }
func (m *S2CTowerRankingListResponse) String() string            { return proto.CompactTextString(m) }
func (*S2CTowerRankingListResponse) ProtoMessage()               {}
func (*S2CTowerRankingListResponse) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{118} }

func (m *S2CTowerRankingListResponse) GetRanks() []*TowerRankInfo {
	if m != nil {
		return m.Ranks
	}
	return nil
}

// ---------------------------------- 抽卡 ------------------------------------
// 请求抽卡数据
type C2SDrawDataRequest struct {
}

func (m *C2SDrawDataRequest) Reset()                    { *m = C2SDrawDataRequest{} }
func (m *C2SDrawDataRequest) String() string            { return proto.CompactTextString(m) }
func (*C2SDrawDataRequest) ProtoMessage()               {}
func (*C2SDrawDataRequest) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{119} }

type S2CDrawDataResponse struct {
	FreeDrawRemainSeconds map[int32]int32 `protobuf:"bytes,1,rep,name=FreeDrawRemainSeconds" json:"FreeDrawRemainSeconds,omitempty" protobuf_key:"varint,1,opt,name=key" protobuf_val:"varint,2,opt,name=value"`
}

func (m *S2CDrawDataResponse) Reset()                    { *m = S2CDrawDataResponse{} }
func (m *S2CDrawDataResponse) String() string            { return proto.CompactTextString(m) }
func (*S2CDrawDataResponse) ProtoMessage()               {}
func (*S2CDrawDataResponse) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{120} }

func (m *S2CDrawDataResponse) GetFreeDrawRemainSeconds() map[int32]int32 {
	if m != nil {
		return m.FreeDrawRemainSeconds
	}
	return nil
}

// 请求抽卡
type C2SDrawCardRequest struct {
	DrawType int32 `protobuf:"varint,1,opt,name=DrawType" json:"DrawType,omitempty"`
}

func (m *C2SDrawCardRequest) Reset()                    { *m = C2SDrawCardRequest{} }
func (m *C2SDrawCardRequest) String() string            { return proto.CompactTextString(m) }
func (*C2SDrawCardRequest) ProtoMessage()               {}
func (*C2SDrawCardRequest) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{121} }

func (m *C2SDrawCardRequest) GetDrawType() int32 {
	if m != nil {
		return m.DrawType
	}
	return 0
}

type S2CDrawCardResponse struct {
	DrawType    int32   `protobuf:"varint,1,opt,name=DrawType" json:"DrawType,omitempty"`
	RoleTableId []int32 `protobuf:"varint,2,rep,packed,name=RoleTableId" json:"RoleTableId,omitempty"`
	IsFreeDraw  bool    `protobuf:"varint,3,opt,name=IsFreeDraw" json:"IsFreeDraw,omitempty"`
}

func (m *S2CDrawCardResponse) Reset()                    { *m = S2CDrawCardResponse{} }
func (m *S2CDrawCardResponse) String() string            { return proto.CompactTextString(m) }
func (*S2CDrawCardResponse) ProtoMessage()               {}
func (*S2CDrawCardResponse) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{122} }

func (m *S2CDrawCardResponse) GetDrawType() int32 {
	if m != nil {
		return m.DrawType
	}
	return 0
}

func (m *S2CDrawCardResponse) GetRoleTableId() []int32 {
	if m != nil {
		return m.RoleTableId
	}
	return nil
}

func (m *S2CDrawCardResponse) GetIsFreeDraw() bool {
	if m != nil {
		return m.IsFreeDraw
	}
	return false
}

// ---------------------------------- 点金手 ----------------------------------
// 请求点金
type C2STouchGoldRequest struct {
	Type int32 `protobuf:"varint,1,opt,name=Type" json:"Type,omitempty"`
}

func (m *C2STouchGoldRequest) Reset()                    { *m = C2STouchGoldRequest{} }
func (m *C2STouchGoldRequest) String() string            { return proto.CompactTextString(m) }
func (*C2STouchGoldRequest) ProtoMessage()               {}
func (*C2STouchGoldRequest) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{123} }

func (m *C2STouchGoldRequest) GetType() int32 {
	if m != nil {
		return m.Type
	}
	return 0
}

type S2CTouchGoldResponse struct {
	Type                     int32 `protobuf:"varint,1,opt,name=Type" json:"Type,omitempty"`
	GetGold                  int32 `protobuf:"varint,2,opt,name=GetGold" json:"GetGold,omitempty"`
	CostDiamond              int32 `protobuf:"varint,3,opt,name=CostDiamond" json:"CostDiamond,omitempty"`
	NextRefreshRemainSeconds int32 `protobuf:"varint,4,opt,name=NextRefreshRemainSeconds" json:"NextRefreshRemainSeconds,omitempty"`
}

func (m *S2CTouchGoldResponse) Reset()                    { *m = S2CTouchGoldResponse{} }
func (m *S2CTouchGoldResponse) String() string            { return proto.CompactTextString(m) }
func (*S2CTouchGoldResponse) ProtoMessage()               {}
func (*S2CTouchGoldResponse) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{124} }

func (m *S2CTouchGoldResponse) GetType() int32 {
	if m != nil {
		return m.Type
	}
	return 0
}

func (m *S2CTouchGoldResponse) GetGetGold() int32 {
	if m != nil {
		return m.GetGold
	}
	return 0
}

func (m *S2CTouchGoldResponse) GetCostDiamond() int32 {
	if m != nil {
		return m.CostDiamond
	}
	return 0
}

func (m *S2CTouchGoldResponse) GetNextRefreshRemainSeconds() int32 {
	if m != nil {
		return m.NextRefreshRemainSeconds
	}
	return 0
}

// 点金手数据
type C2SGoldHandDataRequest struct {
}

func (m *C2SGoldHandDataRequest) Reset()                    { *m = C2SGoldHandDataRequest{} }
func (m *C2SGoldHandDataRequest) String() string            { return proto.CompactTextString(m) }
func (*C2SGoldHandDataRequest) ProtoMessage()               {}
func (*C2SGoldHandDataRequest) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{125} }

type S2CGoldHandDataResponse struct {
	RemainRefreshSeconds int32           `protobuf:"varint,1,opt,name=RemainRefreshSeconds" json:"RemainRefreshSeconds,omitempty"`
	LeftNums             map[int32]int32 `protobuf:"bytes,2,rep,name=LeftNums" json:"LeftNums,omitempty" protobuf_key:"varint,1,opt,name=key" protobuf_val:"varint,2,opt,name=value"`
}

func (m *S2CGoldHandDataResponse) Reset()                    { *m = S2CGoldHandDataResponse{} }
func (m *S2CGoldHandDataResponse) String() string            { return proto.CompactTextString(m) }
func (*S2CGoldHandDataResponse) ProtoMessage()               {}
func (*S2CGoldHandDataResponse) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{126} }

func (m *S2CGoldHandDataResponse) GetRemainRefreshSeconds() int32 {
	if m != nil {
		return m.RemainRefreshSeconds
	}
	return 0
}

func (m *S2CGoldHandDataResponse) GetLeftNums() map[int32]int32 {
	if m != nil {
		return m.LeftNums
	}
	return nil
}

// ---------------------------------- 商店 ------------------------------------
// 请求商店
type C2SShopDataRequest struct {
	ShopId int32 `protobuf:"varint,1,opt,name=ShopId" json:"ShopId,omitempty"`
}

func (m *C2SShopDataRequest) Reset()                    { *m = C2SShopDataRequest{} }
func (m *C2SShopDataRequest) String() string            { return proto.CompactTextString(m) }
func (*C2SShopDataRequest) ProtoMessage()               {}
func (*C2SShopDataRequest) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{127} }

func (m *C2SShopDataRequest) GetShopId() int32 {
	if m != nil {
		return m.ShopId
	}
	return 0
}

type ShopItem struct {
	Id           int32     `protobuf:"varint,1,opt,name=Id" json:"Id,omitempty"`
	ItemId       int32     `protobuf:"varint,2,opt,name=ItemId" json:"ItemId,omitempty"`
	CostResource *ItemInfo `protobuf:"bytes,3,opt,name=CostResource" json:"CostResource,omitempty"`
	BuyNum       int32     `protobuf:"varint,4,opt,name=BuyNum" json:"BuyNum,omitempty"`
}

func (m *ShopItem) Reset()                    { *m = ShopItem{} }
func (m *ShopItem) String() string            { return proto.CompactTextString(m) }
func (*ShopItem) ProtoMessage()               {}
func (*ShopItem) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{128} }

func (m *ShopItem) GetId() int32 {
	if m != nil {
		return m.Id
	}
	return 0
}

func (m *ShopItem) GetItemId() int32 {
	if m != nil {
		return m.ItemId
	}
	return 0
}

func (m *ShopItem) GetCostResource() *ItemInfo {
	if m != nil {
		return m.CostResource
	}
	return nil
}

func (m *ShopItem) GetBuyNum() int32 {
	if m != nil {
		return m.BuyNum
	}
	return 0
}

type S2CShopDataResponse struct {
	ShopId                       int32       `protobuf:"varint,1,opt,name=ShopId" json:"ShopId,omitempty"`
	Items                        []*ShopItem `protobuf:"bytes,2,rep,name=Items" json:"Items,omitempty"`
	NextFreeRefreshRemainSeconds int32       `protobuf:"varint,3,opt,name=NextFreeRefreshRemainSeconds" json:"NextFreeRefreshRemainSeconds,omitempty"`
	NextAutoRefreshRemainSeconds int32       `protobuf:"varint,4,opt,name=NextAutoRefreshRemainSeconds" json:"NextAutoRefreshRemainSeconds,omitempty"`
}

func (m *S2CShopDataResponse) Reset()                    { *m = S2CShopDataResponse{} }
func (m *S2CShopDataResponse) String() string            { return proto.CompactTextString(m) }
func (*S2CShopDataResponse) ProtoMessage()               {}
func (*S2CShopDataResponse) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{129} }

func (m *S2CShopDataResponse) GetShopId() int32 {
	if m != nil {
		return m.ShopId
	}
	return 0
}

func (m *S2CShopDataResponse) GetItems() []*ShopItem {
	if m != nil {
		return m.Items
	}
	return nil
}

func (m *S2CShopDataResponse) GetNextFreeRefreshRemainSeconds() int32 {
	if m != nil {
		return m.NextFreeRefreshRemainSeconds
	}
	return 0
}

func (m *S2CShopDataResponse) GetNextAutoRefreshRemainSeconds() int32 {
	if m != nil {
		return m.NextAutoRefreshRemainSeconds
	}
	return 0
}

// 请求购买商品
type C2SShopBuyItemRequest struct {
	ShopId int32 `protobuf:"varint,1,opt,name=ShopId" json:"ShopId,omitempty"`
	ItemId int32 `protobuf:"varint,2,opt,name=ItemId" json:"ItemId,omitempty"`
	BuyNum int32 `protobuf:"varint,3,opt,name=BuyNum" json:"BuyNum,omitempty"`
}

func (m *C2SShopBuyItemRequest) Reset()                    { *m = C2SShopBuyItemRequest{} }
func (m *C2SShopBuyItemRequest) String() string            { return proto.CompactTextString(m) }
func (*C2SShopBuyItemRequest) ProtoMessage()               {}
func (*C2SShopBuyItemRequest) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{130} }

func (m *C2SShopBuyItemRequest) GetShopId() int32 {
	if m != nil {
		return m.ShopId
	}
	return 0
}

func (m *C2SShopBuyItemRequest) GetItemId() int32 {
	if m != nil {
		return m.ItemId
	}
	return 0
}

func (m *C2SShopBuyItemRequest) GetBuyNum() int32 {
	if m != nil {
		return m.BuyNum
	}
	return 0
}

type S2CShopBuyItemResponse struct {
	ShopId       int32 `protobuf:"varint,1,opt,name=ShopId" json:"ShopId,omitempty"`
	Id           int32 `protobuf:"varint,2,opt,name=Id" json:"Id,omitempty"`
	BuyNum       int32 `protobuf:"varint,3,opt,name=BuyNum" json:"BuyNum,omitempty"`
	RemainBuyNum int32 `protobuf:"varint,4,opt,name=RemainBuyNum" json:"RemainBuyNum,omitempty"`
}

func (m *S2CShopBuyItemResponse) Reset()                    { *m = S2CShopBuyItemResponse{} }
func (m *S2CShopBuyItemResponse) String() string            { return proto.CompactTextString(m) }
func (*S2CShopBuyItemResponse) ProtoMessage()               {}
func (*S2CShopBuyItemResponse) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{131} }

func (m *S2CShopBuyItemResponse) GetShopId() int32 {
	if m != nil {
		return m.ShopId
	}
	return 0
}

func (m *S2CShopBuyItemResponse) GetId() int32 {
	if m != nil {
		return m.Id
	}
	return 0
}

func (m *S2CShopBuyItemResponse) GetBuyNum() int32 {
	if m != nil {
		return m.BuyNum
	}
	return 0
}

func (m *S2CShopBuyItemResponse) GetRemainBuyNum() int32 {
	if m != nil {
		return m.RemainBuyNum
	}
	return 0
}

// 刷新商店
type C2SShopRefreshRequest struct {
	ShopId int32 `protobuf:"varint,1,opt,name=ShopId" json:"ShopId,omitempty"`
}

func (m *C2SShopRefreshRequest) Reset()                    { *m = C2SShopRefreshRequest{} }
func (m *C2SShopRefreshRequest) String() string            { return proto.CompactTextString(m) }
func (*C2SShopRefreshRequest) ProtoMessage()               {}
func (*C2SShopRefreshRequest) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{132} }

func (m *C2SShopRefreshRequest) GetShopId() int32 {
	if m != nil {
		return m.ShopId
	}
	return 0
}

type S2CShopRefreshResponse struct {
	ShopId        int32 `protobuf:"varint,1,opt,name=ShopId" json:"ShopId,omitempty"`
	IsFreeRefresh bool  `protobuf:"varint,2,opt,name=IsFreeRefresh" json:"IsFreeRefresh,omitempty"`
}

func (m *S2CShopRefreshResponse) Reset()                    { *m = S2CShopRefreshResponse{} }
func (m *S2CShopRefreshResponse) String() string            { return proto.CompactTextString(m) }
func (*S2CShopRefreshResponse) ProtoMessage()               {}
func (*S2CShopRefreshResponse) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{133} }

func (m *S2CShopRefreshResponse) GetShopId() int32 {
	if m != nil {
		return m.ShopId
	}
	return 0
}

func (m *S2CShopRefreshResponse) GetIsFreeRefresh() bool {
	if m != nil {
		return m.IsFreeRefresh
	}
	return false
}

// 商店自动刷新通知
type S2CShopAutoRefreshNotify struct {
	ShopId int32 `protobuf:"varint,1,opt,name=ShopId" json:"ShopId,omitempty"`
}

func (m *S2CShopAutoRefreshNotify) Reset()                    { *m = S2CShopAutoRefreshNotify{} }
func (m *S2CShopAutoRefreshNotify) String() string            { return proto.CompactTextString(m) }
func (*S2CShopAutoRefreshNotify) ProtoMessage()               {}
func (*S2CShopAutoRefreshNotify) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{134} }

func (m *S2CShopAutoRefreshNotify) GetShopId() int32 {
	if m != nil {
		return m.ShopId
	}
	return 0
}

// --------------------------------- 排行榜 -----------------------------------
// 排行项
type RankItemInfo struct {
	Rank                   int32  `protobuf:"varint,1,opt,name=Rank" json:"Rank,omitempty"`
	PlayerId               int32  `protobuf:"varint,2,opt,name=PlayerId" json:"PlayerId,omitempty"`
	PlayerName             string `protobuf:"bytes,3,opt,name=PlayerName" json:"PlayerName,omitempty"`
	PlayerLevel            int32  `protobuf:"varint,4,opt,name=PlayerLevel" json:"PlayerLevel,omitempty"`
	PlayerHead             int32  `protobuf:"varint,5,opt,name=PlayerHead" json:"PlayerHead,omitempty"`
	PlayerArenaScore       int32  `protobuf:"varint,6,opt,name=PlayerArenaScore" json:"PlayerArenaScore,omitempty"`
	PlayerArenaGrade       int32  `protobuf:"varint,7,opt,name=PlayerArenaGrade" json:"PlayerArenaGrade,omitempty"`
	PlayerPower            int32  `protobuf:"varint,8,opt,name=PlayerPower" json:"PlayerPower,omitempty"`
	PlayerPassedCampaignId int32  `protobuf:"varint,9,opt,name=PlayerPassedCampaignId" json:"PlayerPassedCampaignId,omitempty"`
	PlayerRolesPower       int32  `protobuf:"varint,10,opt,name=PlayerRolesPower" json:"PlayerRolesPower,omitempty"`
}

func (m *RankItemInfo) Reset()                    { *m = RankItemInfo{} }
func (m *RankItemInfo) String() string            { return proto.CompactTextString(m) }
func (*RankItemInfo) ProtoMessage()               {}
func (*RankItemInfo) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{135} }

func (m *RankItemInfo) GetRank() int32 {
	if m != nil {
		return m.Rank
	}
	return 0
}

func (m *RankItemInfo) GetPlayerId() int32 {
	if m != nil {
		return m.PlayerId
	}
	return 0
}

func (m *RankItemInfo) GetPlayerName() string {
	if m != nil {
		return m.PlayerName
	}
	return ""
}

func (m *RankItemInfo) GetPlayerLevel() int32 {
	if m != nil {
		return m.PlayerLevel
	}
	return 0
}

func (m *RankItemInfo) GetPlayerHead() int32 {
	if m != nil {
		return m.PlayerHead
	}
	return 0
}

func (m *RankItemInfo) GetPlayerArenaScore() int32 {
	if m != nil {
		return m.PlayerArenaScore
	}
	return 0
}

func (m *RankItemInfo) GetPlayerArenaGrade() int32 {
	if m != nil {
		return m.PlayerArenaGrade
	}
	return 0
}

func (m *RankItemInfo) GetPlayerPower() int32 {
	if m != nil {
		return m.PlayerPower
	}
	return 0
}

func (m *RankItemInfo) GetPlayerPassedCampaignId() int32 {
	if m != nil {
		return m.PlayerPassedCampaignId
	}
	return 0
}

func (m *RankItemInfo) GetPlayerRolesPower() int32 {
	if m != nil {
		return m.PlayerRolesPower
	}
	return 0
}

// 请求排行榜
type C2SRankListRequest struct {
	RankListType int32   `protobuf:"varint,1,opt,name=RankListType" json:"RankListType,omitempty"`
	Params       []int32 `protobuf:"varint,2,rep,packed,name=Params" json:"Params,omitempty"`
}

func (m *C2SRankListRequest) Reset()                    { *m = C2SRankListRequest{} }
func (m *C2SRankListRequest) String() string            { return proto.CompactTextString(m) }
func (*C2SRankListRequest) ProtoMessage()               {}
func (*C2SRankListRequest) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{136} }

func (m *C2SRankListRequest) GetRankListType() int32 {
	if m != nil {
		return m.RankListType
	}
	return 0
}

func (m *C2SRankListRequest) GetParams() []int32 {
	if m != nil {
		return m.Params
	}
	return nil
}

type S2CRankListResponse struct {
	RankListType       int32           `protobuf:"varint,1,opt,name=RankListType" json:"RankListType,omitempty"`
	RankItems          []*RankItemInfo `protobuf:"bytes,2,rep,name=RankItems" json:"RankItems,omitempty"`
	SelfHistoryTopRank int32           `protobuf:"varint,3,opt,name=SelfHistoryTopRank" json:"SelfHistoryTopRank,omitempty"`
	SelfRank           int32           `protobuf:"varint,4,opt,name=SelfRank" json:"SelfRank,omitempty"`
	SelfValue          int32           `protobuf:"varint,5,opt,name=SelfValue" json:"SelfValue,omitempty"`
	SelfValue2         int32           `protobuf:"varint,6,opt,name=SelfValue2" json:"SelfValue2,omitempty"`
}

func (m *S2CRankListResponse) Reset()                    { *m = S2CRankListResponse{} }
func (m *S2CRankListResponse) String() string            { return proto.CompactTextString(m) }
func (*S2CRankListResponse) ProtoMessage()               {}
func (*S2CRankListResponse) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{137} }

func (m *S2CRankListResponse) GetRankListType() int32 {
	if m != nil {
		return m.RankListType
	}
	return 0
}

func (m *S2CRankListResponse) GetRankItems() []*RankItemInfo {
	if m != nil {
		return m.RankItems
	}
	return nil
}

func (m *S2CRankListResponse) GetSelfHistoryTopRank() int32 {
	if m != nil {
		return m.SelfHistoryTopRank
	}
	return 0
}

func (m *S2CRankListResponse) GetSelfRank() int32 {
	if m != nil {
		return m.SelfRank
	}
	return 0
}

func (m *S2CRankListResponse) GetSelfValue() int32 {
	if m != nil {
		return m.SelfValue
	}
	return 0
}

func (m *S2CRankListResponse) GetSelfValue2() int32 {
	if m != nil {
		return m.SelfValue2
	}
	return 0
}

// --------------------------------- 竞技场 -----------------------------------
// 竞技场数据请求
type C2SArenaDataRequest struct {
}

func (m *C2SArenaDataRequest) Reset()                    { *m = C2SArenaDataRequest{} }
func (m *C2SArenaDataRequest) String() string            { return proto.CompactTextString(m) }
func (*C2SArenaDataRequest) ProtoMessage()               {}
func (*C2SArenaDataRequest) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{138} }

type S2CArenaDataResponse struct {
	Score                       int32 `protobuf:"varint,1,opt,name=Score" json:"Score,omitempty"`
	Grade                       int32 `protobuf:"varint,2,opt,name=Grade" json:"Grade,omitempty"`
	Rank                        int32 `protobuf:"varint,3,opt,name=Rank" json:"Rank,omitempty"`
	TopRank                     int32 `protobuf:"varint,4,opt,name=TopRank" json:"TopRank,omitempty"`
	DayRemainSeconds            int32 `protobuf:"varint,5,opt,name=DayRemainSeconds" json:"DayRemainSeconds,omitempty"`
	SeasonRemainSeconds         int32 `protobuf:"varint,6,opt,name=SeasonRemainSeconds" json:"SeasonRemainSeconds,omitempty"`
	TicketsRefreshRemainSeconds int32 `protobuf:"varint,7,opt,name=TicketsRefreshRemainSeconds" json:"TicketsRefreshRemainSeconds,omitempty"`
}

func (m *S2CArenaDataResponse) Reset()                    { *m = S2CArenaDataResponse{} }
func (m *S2CArenaDataResponse) String() string            { return proto.CompactTextString(m) }
func (*S2CArenaDataResponse) ProtoMessage()               {}
func (*S2CArenaDataResponse) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{139} }

func (m *S2CArenaDataResponse) GetScore() int32 {
	if m != nil {
		return m.Score
	}
	return 0
}

func (m *S2CArenaDataResponse) GetGrade() int32 {
	if m != nil {
		return m.Grade
	}
	return 0
}

func (m *S2CArenaDataResponse) GetRank() int32 {
	if m != nil {
		return m.Rank
	}
	return 0
}

func (m *S2CArenaDataResponse) GetTopRank() int32 {
	if m != nil {
		return m.TopRank
	}
	return 0
}

func (m *S2CArenaDataResponse) GetDayRemainSeconds() int32 {
	if m != nil {
		return m.DayRemainSeconds
	}
	return 0
}

func (m *S2CArenaDataResponse) GetSeasonRemainSeconds() int32 {
	if m != nil {
		return m.SeasonRemainSeconds
	}
	return 0
}

func (m *S2CArenaDataResponse) GetTicketsRefreshRemainSeconds() int32 {
	if m != nil {
		return m.TicketsRefreshRemainSeconds
	}
	return 0
}

// 请求竞技场对方防守阵容
type C2SArenaPlayerDefenseTeamRequest struct {
	PlayerId int32 `protobuf:"varint,1,opt,name=PlayerId" json:"PlayerId,omitempty"`
}

func (m *C2SArenaPlayerDefenseTeamRequest) Reset()         { *m = C2SArenaPlayerDefenseTeamRequest{} }
func (m *C2SArenaPlayerDefenseTeamRequest) String() string { return proto.CompactTextString(m) }
func (*C2SArenaPlayerDefenseTeamRequest) ProtoMessage()    {}
func (*C2SArenaPlayerDefenseTeamRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor0, []int{140}
}

func (m *C2SArenaPlayerDefenseTeamRequest) GetPlayerId() int32 {
	if m != nil {
		return m.PlayerId
	}
	return 0
}

type PlayerTeamRole struct {
	TableId int32 `protobuf:"varint,1,opt,name=TableId" json:"TableId,omitempty"`
	Pos     int32 `protobuf:"varint,2,opt,name=Pos" json:"Pos,omitempty"`
	Level   int32 `protobuf:"varint,3,opt,name=Level" json:"Level,omitempty"`
	Rank    int32 `protobuf:"varint,4,opt,name=Rank" json:"Rank,omitempty"`
}

func (m *PlayerTeamRole) Reset()                    { *m = PlayerTeamRole{} }
func (m *PlayerTeamRole) String() string            { return proto.CompactTextString(m) }
func (*PlayerTeamRole) ProtoMessage()               {}
func (*PlayerTeamRole) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{141} }

func (m *PlayerTeamRole) GetTableId() int32 {
	if m != nil {
		return m.TableId
	}
	return 0
}

func (m *PlayerTeamRole) GetPos() int32 {
	if m != nil {
		return m.Pos
	}
	return 0
}

func (m *PlayerTeamRole) GetLevel() int32 {
	if m != nil {
		return m.Level
	}
	return 0
}

func (m *PlayerTeamRole) GetRank() int32 {
	if m != nil {
		return m.Rank
	}
	return 0
}

type S2CArenaPlayerDefenseTeamResponse struct {
	PlayerId    int32                     `protobuf:"varint,1,opt,name=PlayerId" json:"PlayerId,omitempty"`
	PlayerLevel int32                     `protobuf:"varint,2,opt,name=PlayerLevel" json:"PlayerLevel,omitempty"`
	PlayerHead  int32                     `protobuf:"varint,3,opt,name=PlayerHead" json:"PlayerHead,omitempty"`
	DefenseTeam map[int32]*PlayerTeamRole `protobuf:"bytes,4,rep,name=DefenseTeam" json:"DefenseTeam,omitempty" protobuf_key:"varint,1,opt,name=key" protobuf_val:"bytes,2,opt,name=value"`
	Power       int32                     `protobuf:"varint,5,opt,name=Power" json:"Power,omitempty"`
	GuildId     int32                     `protobuf:"varint,6,opt,name=GuildId" json:"GuildId,omitempty"`
}

func (m *S2CArenaPlayerDefenseTeamResponse) Reset()         { *m = S2CArenaPlayerDefenseTeamResponse{} }
func (m *S2CArenaPlayerDefenseTeamResponse) String() string { return proto.CompactTextString(m) }
func (*S2CArenaPlayerDefenseTeamResponse) ProtoMessage()    {}
func (*S2CArenaPlayerDefenseTeamResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor0, []int{142}
}

func (m *S2CArenaPlayerDefenseTeamResponse) GetPlayerId() int32 {
	if m != nil {
		return m.PlayerId
	}
	return 0
}

func (m *S2CArenaPlayerDefenseTeamResponse) GetPlayerLevel() int32 {
	if m != nil {
		return m.PlayerLevel
	}
	return 0
}

func (m *S2CArenaPlayerDefenseTeamResponse) GetPlayerHead() int32 {
	if m != nil {
		return m.PlayerHead
	}
	return 0
}

func (m *S2CArenaPlayerDefenseTeamResponse) GetDefenseTeam() map[int32]*PlayerTeamRole {
	if m != nil {
		return m.DefenseTeam
	}
	return nil
}

func (m *S2CArenaPlayerDefenseTeamResponse) GetPower() int32 {
	if m != nil {
		return m.Power
	}
	return 0
}

func (m *S2CArenaPlayerDefenseTeamResponse) GetGuildId() int32 {
	if m != nil {
		return m.GuildId
	}
	return 0
}

// 请求竞技场匹配
type C2SArenaMatchPlayerRequest struct {
}

func (m *C2SArenaMatchPlayerRequest) Reset()                    { *m = C2SArenaMatchPlayerRequest{} }
func (m *C2SArenaMatchPlayerRequest) String() string            { return proto.CompactTextString(m) }
func (*C2SArenaMatchPlayerRequest) ProtoMessage()               {}
func (*C2SArenaMatchPlayerRequest) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{143} }

type S2CArenaMatchPlayerResponse struct {
	PlayerId    int32  `protobuf:"varint,1,opt,name=PlayerId" json:"PlayerId,omitempty"`
	PlayerName  string `protobuf:"bytes,2,opt,name=PlayerName" json:"PlayerName,omitempty"`
	PlayerLevel int32  `protobuf:"varint,3,opt,name=PlayerLevel" json:"PlayerLevel,omitempty"`
	PlayerHead  int32  `protobuf:"varint,4,opt,name=PlayerHead" json:"PlayerHead,omitempty"`
	PlayerGrade int32  `protobuf:"varint,5,opt,name=PlayerGrade" json:"PlayerGrade,omitempty"`
	PlayerScore int32  `protobuf:"varint,6,opt,name=PlayerScore" json:"PlayerScore,omitempty"`
	PlayerPower int32  `protobuf:"varint,7,opt,name=PlayerPower" json:"PlayerPower,omitempty"`
}

func (m *S2CArenaMatchPlayerResponse) Reset()                    { *m = S2CArenaMatchPlayerResponse{} }
func (m *S2CArenaMatchPlayerResponse) String() string            { return proto.CompactTextString(m) }
func (*S2CArenaMatchPlayerResponse) ProtoMessage()               {}
func (*S2CArenaMatchPlayerResponse) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{144} }

func (m *S2CArenaMatchPlayerResponse) GetPlayerId() int32 {
	if m != nil {
		return m.PlayerId
	}
	return 0
}

func (m *S2CArenaMatchPlayerResponse) GetPlayerName() string {
	if m != nil {
		return m.PlayerName
	}
	return ""
}

func (m *S2CArenaMatchPlayerResponse) GetPlayerLevel() int32 {
	if m != nil {
		return m.PlayerLevel
	}
	return 0
}

func (m *S2CArenaMatchPlayerResponse) GetPlayerHead() int32 {
	if m != nil {
		return m.PlayerHead
	}
	return 0
}

func (m *S2CArenaMatchPlayerResponse) GetPlayerGrade() int32 {
	if m != nil {
		return m.PlayerGrade
	}
	return 0
}

func (m *S2CArenaMatchPlayerResponse) GetPlayerScore() int32 {
	if m != nil {
		return m.PlayerScore
	}
	return 0
}

func (m *S2CArenaMatchPlayerResponse) GetPlayerPower() int32 {
	if m != nil {
		return m.PlayerPower
	}
	return 0
}

// 段位奖励
type S2CArenaGradeRewardNotify struct {
	Grade int32 `protobuf:"varint,1,opt,name=Grade" json:"Grade,omitempty"`
}

func (m *S2CArenaGradeRewardNotify) Reset()                    { *m = S2CArenaGradeRewardNotify{} }
func (m *S2CArenaGradeRewardNotify) String() string            { return proto.CompactTextString(m) }
func (*S2CArenaGradeRewardNotify) ProtoMessage()               {}
func (*S2CArenaGradeRewardNotify) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{145} }

func (m *S2CArenaGradeRewardNotify) GetGrade() int32 {
	if m != nil {
		return m.Grade
	}
	return 0
}

// ---------------------------------- 活动副本 --------------------------------
// 活动副本数据
type C2SActiveStageDataRequest struct {
	StageType int32 `protobuf:"varint,1,opt,name=StageType" json:"StageType,omitempty"`
}

func (m *C2SActiveStageDataRequest) Reset()                    { *m = C2SActiveStageDataRequest{} }
func (m *C2SActiveStageDataRequest) String() string            { return proto.CompactTextString(m) }
func (*C2SActiveStageDataRequest) ProtoMessage()               {}
func (*C2SActiveStageDataRequest) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{146} }

func (m *C2SActiveStageDataRequest) GetStageType() int32 {
	if m != nil {
		return m.StageType
	}
	return 0
}

type ActiveStageData struct {
	RemainChallengeNum    int32 `protobuf:"varint,1,opt,name=RemainChallengeNum" json:"RemainChallengeNum,omitempty"`
	RemainBuyChallengeNum int32 `protobuf:"varint,2,opt,name=RemainBuyChallengeNum" json:"RemainBuyChallengeNum,omitempty"`
}

func (m *ActiveStageData) Reset()                    { *m = ActiveStageData{} }
func (m *ActiveStageData) String() string            { return proto.CompactTextString(m) }
func (*ActiveStageData) ProtoMessage()               {}
func (*ActiveStageData) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{147} }

func (m *ActiveStageData) GetRemainChallengeNum() int32 {
	if m != nil {
		return m.RemainChallengeNum
	}
	return 0
}

func (m *ActiveStageData) GetRemainBuyChallengeNum() int32 {
	if m != nil {
		return m.RemainBuyChallengeNum
	}
	return 0
}

type S2CActiveStageDataResponse struct {
	StageData             map[int32]*ActiveStageData `protobuf:"bytes,1,rep,name=StageData" json:"StageData,omitempty" protobuf_key:"varint,1,opt,name=key" protobuf_val:"bytes,2,opt,name=value"`
	RemainSeconds4Refresh int32                      `protobuf:"varint,2,opt,name=RemainSeconds4Refresh" json:"RemainSeconds4Refresh,omitempty"`
	GetPointsDay          int32                      `protobuf:"varint,3,opt,name=GetPointsDay" json:"GetPointsDay,omitempty"`
	MaxChallengeNum       int32                      `protobuf:"varint,4,opt,name=MaxChallengeNum" json:"MaxChallengeNum,omitempty"`
	ChallengeNumPrice     int32                      `protobuf:"varint,5,opt,name=ChallengeNumPrice" json:"ChallengeNumPrice,omitempty"`
}

func (m *S2CActiveStageDataResponse) Reset()                    { *m = S2CActiveStageDataResponse{} }
func (m *S2CActiveStageDataResponse) String() string            { return proto.CompactTextString(m) }
func (*S2CActiveStageDataResponse) ProtoMessage()               {}
func (*S2CActiveStageDataResponse) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{148} }

func (m *S2CActiveStageDataResponse) GetStageData() map[int32]*ActiveStageData {
	if m != nil {
		return m.StageData
	}
	return nil
}

func (m *S2CActiveStageDataResponse) GetRemainSeconds4Refresh() int32 {
	if m != nil {
		return m.RemainSeconds4Refresh
	}
	return 0
}

func (m *S2CActiveStageDataResponse) GetGetPointsDay() int32 {
	if m != nil {
		return m.GetPointsDay
	}
	return 0
}

func (m *S2CActiveStageDataResponse) GetMaxChallengeNum() int32 {
	if m != nil {
		return m.MaxChallengeNum
	}
	return 0
}

func (m *S2CActiveStageDataResponse) GetChallengeNumPrice() int32 {
	if m != nil {
		return m.ChallengeNumPrice
	}
	return 0
}

// 活动副本挑战次数购买
type C2SActiveStageBuyChallengeNumRequest struct {
	StageType int32 `protobuf:"varint,1,opt,name=StageType" json:"StageType,omitempty"`
}

func (m *C2SActiveStageBuyChallengeNumRequest) Reset()         { *m = C2SActiveStageBuyChallengeNumRequest{} }
func (m *C2SActiveStageBuyChallengeNumRequest) String() string { return proto.CompactTextString(m) }
func (*C2SActiveStageBuyChallengeNumRequest) ProtoMessage()    {}
func (*C2SActiveStageBuyChallengeNumRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor0, []int{149}
}

func (m *C2SActiveStageBuyChallengeNumRequest) GetStageType() int32 {
	if m != nil {
		return m.StageType
	}
	return 0
}

type S2CActiveStageBuyChallengeNumResponse struct {
	StageType int32 `protobuf:"varint,1,opt,name=StageType" json:"StageType,omitempty"`
}

func (m *S2CActiveStageBuyChallengeNumResponse) Reset()         { *m = S2CActiveStageBuyChallengeNumResponse{} }
func (m *S2CActiveStageBuyChallengeNumResponse) String() string { return proto.CompactTextString(m) }
func (*S2CActiveStageBuyChallengeNumResponse) ProtoMessage()    {}
func (*S2CActiveStageBuyChallengeNumResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor0, []int{150}
}

func (m *S2CActiveStageBuyChallengeNumResponse) GetStageType() int32 {
	if m != nil {
		return m.StageType
	}
	return 0
}

// 活动副本刷新通知
type S2CActiveStageRefreshNotify struct {
}

func (m *S2CActiveStageRefreshNotify) Reset()                    { *m = S2CActiveStageRefreshNotify{} }
func (m *S2CActiveStageRefreshNotify) String() string            { return proto.CompactTextString(m) }
func (*S2CActiveStageRefreshNotify) ProtoMessage()               {}
func (*S2CActiveStageRefreshNotify) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{151} }

// 获取好友列表的助战角色
type C2SActiveStageAssistRoleListRequest struct {
}

func (m *C2SActiveStageAssistRoleListRequest) Reset()         { *m = C2SActiveStageAssistRoleListRequest{} }
func (m *C2SActiveStageAssistRoleListRequest) String() string { return proto.CompactTextString(m) }
func (*C2SActiveStageAssistRoleListRequest) ProtoMessage()    {}
func (*C2SActiveStageAssistRoleListRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor0, []int{152}
}

type S2CActiveStageAssistRoleListResponse struct {
	Roles map[int32]*Role `protobuf:"bytes,1,rep,name=Roles" json:"Roles,omitempty" protobuf_key:"varint,1,opt,name=key" protobuf_val:"bytes,2,opt,name=value"`
}

func (m *S2CActiveStageAssistRoleListResponse) Reset()         { *m = S2CActiveStageAssistRoleListResponse{} }
func (m *S2CActiveStageAssistRoleListResponse) String() string { return proto.CompactTextString(m) }
func (*S2CActiveStageAssistRoleListResponse) ProtoMessage()    {}
func (*S2CActiveStageAssistRoleListResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor0, []int{153}
}

func (m *S2CActiveStageAssistRoleListResponse) GetRoles() map[int32]*Role {
	if m != nil {
		return m.Roles
	}
	return nil
}

// ----------------------------------- 好友 -----------------------------------
type PlayerInfo struct {
	Id    int32  `protobuf:"varint,1,opt,name=Id" json:"Id,omitempty"`
	Name  string `protobuf:"bytes,2,opt,name=Name" json:"Name,omitempty"`
	Level int32  `protobuf:"varint,3,opt,name=Level" json:"Level,omitempty"`
	Head  int32  `protobuf:"varint,4,opt,name=Head" json:"Head,omitempty"`
}

func (m *PlayerInfo) Reset()                    { *m = PlayerInfo{} }
func (m *PlayerInfo) String() string            { return proto.CompactTextString(m) }
func (*PlayerInfo) ProtoMessage()               {}
func (*PlayerInfo) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{154} }

func (m *PlayerInfo) GetId() int32 {
	if m != nil {
		return m.Id
	}
	return 0
}

func (m *PlayerInfo) GetName() string {
	if m != nil {
		return m.Name
	}
	return ""
}

func (m *PlayerInfo) GetLevel() int32 {
	if m != nil {
		return m.Level
	}
	return 0
}

func (m *PlayerInfo) GetHead() int32 {
	if m != nil {
		return m.Head
	}
	return 0
}

type FriendInfo struct {
	Id                      int32  `protobuf:"varint,1,opt,name=Id" json:"Id,omitempty"`
	Name                    string `protobuf:"bytes,2,opt,name=Name" json:"Name,omitempty"`
	Level                   int32  `protobuf:"varint,3,opt,name=Level" json:"Level,omitempty"`
	Head                    int32  `protobuf:"varint,4,opt,name=Head" json:"Head,omitempty"`
	IsOnline                bool   `protobuf:"varint,5,opt,name=IsOnline" json:"IsOnline,omitempty"`
	OfflineSeconds          int32  `protobuf:"varint,6,opt,name=OfflineSeconds" json:"OfflineSeconds,omitempty"`
	RemainGivePointsSeconds int32  `protobuf:"varint,7,opt,name=RemainGivePointsSeconds" json:"RemainGivePointsSeconds,omitempty"`
	BossId                  int32  `protobuf:"varint,8,opt,name=BossId" json:"BossId,omitempty"`
	BossHpPercent           int32  `protobuf:"varint,9,opt,name=BossHpPercent" json:"BossHpPercent,omitempty"`
	Power                   int32  `protobuf:"varint,10,opt,name=Power" json:"Power,omitempty"`
	GetPoints               int32  `protobuf:"varint,11,opt,name=GetPoints" json:"GetPoints,omitempty"`
}

func (m *FriendInfo) Reset()                    { *m = FriendInfo{} }
func (m *FriendInfo) String() string            { return proto.CompactTextString(m) }
func (*FriendInfo) ProtoMessage()               {}
func (*FriendInfo) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{155} }

func (m *FriendInfo) GetId() int32 {
	if m != nil {
		return m.Id
	}
	return 0
}

func (m *FriendInfo) GetName() string {
	if m != nil {
		return m.Name
	}
	return ""
}

func (m *FriendInfo) GetLevel() int32 {
	if m != nil {
		return m.Level
	}
	return 0
}

func (m *FriendInfo) GetHead() int32 {
	if m != nil {
		return m.Head
	}
	return 0
}

func (m *FriendInfo) GetIsOnline() bool {
	if m != nil {
		return m.IsOnline
	}
	return false
}

func (m *FriendInfo) GetOfflineSeconds() int32 {
	if m != nil {
		return m.OfflineSeconds
	}
	return 0
}

func (m *FriendInfo) GetRemainGivePointsSeconds() int32 {
	if m != nil {
		return m.RemainGivePointsSeconds
	}
	return 0
}

func (m *FriendInfo) GetBossId() int32 {
	if m != nil {
		return m.BossId
	}
	return 0
}

func (m *FriendInfo) GetBossHpPercent() int32 {
	if m != nil {
		return m.BossHpPercent
	}
	return 0
}

func (m *FriendInfo) GetPower() int32 {
	if m != nil {
		return m.Power
	}
	return 0
}

func (m *FriendInfo) GetGetPoints() int32 {
	if m != nil {
		return m.GetPoints
	}
	return 0
}

// 请求推荐好友
type C2SFriendRecommendRequest struct {
}

func (m *C2SFriendRecommendRequest) Reset()                    { *m = C2SFriendRecommendRequest{} }
func (m *C2SFriendRecommendRequest) String() string            { return proto.CompactTextString(m) }
func (*C2SFriendRecommendRequest) ProtoMessage()               {}
func (*C2SFriendRecommendRequest) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{156} }

type S2CFriendRecommendResponse struct {
	Players []*FriendInfo `protobuf:"bytes,1,rep,name=Players" json:"Players,omitempty"`
}

func (m *S2CFriendRecommendResponse) Reset()                    { *m = S2CFriendRecommendResponse{} }
func (m *S2CFriendRecommendResponse) String() string            { return proto.CompactTextString(m) }
func (*S2CFriendRecommendResponse) ProtoMessage()               {}
func (*S2CFriendRecommendResponse) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{157} }

func (m *S2CFriendRecommendResponse) GetPlayers() []*FriendInfo {
	if m != nil {
		return m.Players
	}
	return nil
}

// 请求好友列表
type C2SFriendListRequest struct {
}

func (m *C2SFriendListRequest) Reset()                    { *m = C2SFriendListRequest{} }
func (m *C2SFriendListRequest) String() string            { return proto.CompactTextString(m) }
func (*C2SFriendListRequest) ProtoMessage()               {}
func (*C2SFriendListRequest) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{158} }

type S2CFriendListResponse struct {
	Friends []*FriendInfo `protobuf:"bytes,1,rep,name=Friends" json:"Friends,omitempty"`
}

func (m *S2CFriendListResponse) Reset()                    { *m = S2CFriendListResponse{} }
func (m *S2CFriendListResponse) String() string            { return proto.CompactTextString(m) }
func (*S2CFriendListResponse) ProtoMessage()               {}
func (*S2CFriendListResponse) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{159} }

func (m *S2CFriendListResponse) GetFriends() []*FriendInfo {
	if m != nil {
		return m.Friends
	}
	return nil
}

// 申请好友
type C2SFriendAskRequest struct {
	PlayerIds []int32 `protobuf:"varint,1,rep,packed,name=PlayerIds" json:"PlayerIds,omitempty"`
}

func (m *C2SFriendAskRequest) Reset()                    { *m = C2SFriendAskRequest{} }
func (m *C2SFriendAskRequest) String() string            { return proto.CompactTextString(m) }
func (*C2SFriendAskRequest) ProtoMessage()               {}
func (*C2SFriendAskRequest) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{160} }

func (m *C2SFriendAskRequest) GetPlayerIds() []int32 {
	if m != nil {
		return m.PlayerIds
	}
	return nil
}

type S2CFriendAskResponse struct {
	PlayerIds []int32 `protobuf:"varint,1,rep,packed,name=PlayerIds" json:"PlayerIds,omitempty"`
}

func (m *S2CFriendAskResponse) Reset()                    { *m = S2CFriendAskResponse{} }
func (m *S2CFriendAskResponse) String() string            { return proto.CompactTextString(m) }
func (*S2CFriendAskResponse) ProtoMessage()               {}
func (*S2CFriendAskResponse) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{161} }

func (m *S2CFriendAskResponse) GetPlayerIds() []int32 {
	if m != nil {
		return m.PlayerIds
	}
	return nil
}

// 请求获得申请玩家列表
type C2SFriendAskPlayerListRequest struct {
}

func (m *C2SFriendAskPlayerListRequest) Reset()                    { *m = C2SFriendAskPlayerListRequest{} }
func (m *C2SFriendAskPlayerListRequest) String() string            { return proto.CompactTextString(m) }
func (*C2SFriendAskPlayerListRequest) ProtoMessage()               {}
func (*C2SFriendAskPlayerListRequest) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{162} }

type S2CFriendAskPlayerListResponse struct {
	Players []*PlayerInfo `protobuf:"bytes,1,rep,name=Players" json:"Players,omitempty"`
}

func (m *S2CFriendAskPlayerListResponse) Reset()         { *m = S2CFriendAskPlayerListResponse{} }
func (m *S2CFriendAskPlayerListResponse) String() string { return proto.CompactTextString(m) }
func (*S2CFriendAskPlayerListResponse) ProtoMessage()    {}
func (*S2CFriendAskPlayerListResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor0, []int{163}
}

func (m *S2CFriendAskPlayerListResponse) GetPlayers() []*PlayerInfo {
	if m != nil {
		return m.Players
	}
	return nil
}

// 申请玩家列表增加通知
type S2CFriendAskPlayerListAddNotify struct {
	PlayersAdd []*PlayerInfo `protobuf:"bytes,1,rep,name=PlayersAdd" json:"PlayersAdd,omitempty"`
}

func (m *S2CFriendAskPlayerListAddNotify) Reset()         { *m = S2CFriendAskPlayerListAddNotify{} }
func (m *S2CFriendAskPlayerListAddNotify) String() string { return proto.CompactTextString(m) }
func (*S2CFriendAskPlayerListAddNotify) ProtoMessage()    {}
func (*S2CFriendAskPlayerListAddNotify) Descriptor() ([]byte, []int) {
	return fileDescriptor0, []int{164}
}

func (m *S2CFriendAskPlayerListAddNotify) GetPlayersAdd() []*PlayerInfo {
	if m != nil {
		return m.PlayersAdd
	}
	return nil
}

// 同意添加好友
type C2SFriendAgreeRequest struct {
	PlayerIds []int32 `protobuf:"varint,1,rep,packed,name=PlayerIds" json:"PlayerIds,omitempty"`
}

func (m *C2SFriendAgreeRequest) Reset()                    { *m = C2SFriendAgreeRequest{} }
func (m *C2SFriendAgreeRequest) String() string            { return proto.CompactTextString(m) }
func (*C2SFriendAgreeRequest) ProtoMessage()               {}
func (*C2SFriendAgreeRequest) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{165} }

func (m *C2SFriendAgreeRequest) GetPlayerIds() []int32 {
	if m != nil {
		return m.PlayerIds
	}
	return nil
}

type S2CFriendAgreeResponse struct {
	Friends []*FriendInfo `protobuf:"bytes,1,rep,name=Friends" json:"Friends,omitempty"`
}

func (m *S2CFriendAgreeResponse) Reset()                    { *m = S2CFriendAgreeResponse{} }
func (m *S2CFriendAgreeResponse) String() string            { return proto.CompactTextString(m) }
func (*S2CFriendAgreeResponse) ProtoMessage()               {}
func (*S2CFriendAgreeResponse) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{166} }

func (m *S2CFriendAgreeResponse) GetFriends() []*FriendInfo {
	if m != nil {
		return m.Friends
	}
	return nil
}

// 好友列表增加通知
type S2CFriendListAddNotify struct {
	FriendsAdd []*FriendInfo `protobuf:"bytes,1,rep,name=FriendsAdd" json:"FriendsAdd,omitempty"`
}

func (m *S2CFriendListAddNotify) Reset()                    { *m = S2CFriendListAddNotify{} }
func (m *S2CFriendListAddNotify) String() string            { return proto.CompactTextString(m) }
func (*S2CFriendListAddNotify) ProtoMessage()               {}
func (*S2CFriendListAddNotify) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{167} }

func (m *S2CFriendListAddNotify) GetFriendsAdd() []*FriendInfo {
	if m != nil {
		return m.FriendsAdd
	}
	return nil
}

// 拒绝添加好友
type C2SFriendRefuseRequest struct {
	PlayerIds []int32 `protobuf:"varint,1,rep,packed,name=PlayerIds" json:"PlayerIds,omitempty"`
}

func (m *C2SFriendRefuseRequest) Reset()                    { *m = C2SFriendRefuseRequest{} }
func (m *C2SFriendRefuseRequest) String() string            { return proto.CompactTextString(m) }
func (*C2SFriendRefuseRequest) ProtoMessage()               {}
func (*C2SFriendRefuseRequest) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{168} }

func (m *C2SFriendRefuseRequest) GetPlayerIds() []int32 {
	if m != nil {
		return m.PlayerIds
	}
	return nil
}

type S2CFriendRefuseResponse struct {
	PlayerIds []int32 `protobuf:"varint,1,rep,packed,name=PlayerIds" json:"PlayerIds,omitempty"`
}

func (m *S2CFriendRefuseResponse) Reset()                    { *m = S2CFriendRefuseResponse{} }
func (m *S2CFriendRefuseResponse) String() string            { return proto.CompactTextString(m) }
func (*S2CFriendRefuseResponse) ProtoMessage()               {}
func (*S2CFriendRefuseResponse) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{169} }

func (m *S2CFriendRefuseResponse) GetPlayerIds() []int32 {
	if m != nil {
		return m.PlayerIds
	}
	return nil
}

// 删除好友
type C2SFriendRemoveRequest struct {
	PlayerIds []int32 `protobuf:"varint,1,rep,packed,name=PlayerIds" json:"PlayerIds,omitempty"`
}

func (m *C2SFriendRemoveRequest) Reset()                    { *m = C2SFriendRemoveRequest{} }
func (m *C2SFriendRemoveRequest) String() string            { return proto.CompactTextString(m) }
func (*C2SFriendRemoveRequest) ProtoMessage()               {}
func (*C2SFriendRemoveRequest) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{170} }

func (m *C2SFriendRemoveRequest) GetPlayerIds() []int32 {
	if m != nil {
		return m.PlayerIds
	}
	return nil
}

type S2CFriendRemoveResponse struct {
	PlayerIds []int32 `protobuf:"varint,1,rep,packed,name=PlayerIds" json:"PlayerIds,omitempty"`
}

func (m *S2CFriendRemoveResponse) Reset()                    { *m = S2CFriendRemoveResponse{} }
func (m *S2CFriendRemoveResponse) String() string            { return proto.CompactTextString(m) }
func (*S2CFriendRemoveResponse) ProtoMessage()               {}
func (*S2CFriendRemoveResponse) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{171} }

func (m *S2CFriendRemoveResponse) GetPlayerIds() []int32 {
	if m != nil {
		return m.PlayerIds
	}
	return nil
}

// 赠送友情点
type C2SFriendGivePointsRequest struct {
	FriendIds []int32 `protobuf:"varint,1,rep,packed,name=FriendIds" json:"FriendIds,omitempty"`
}

func (m *C2SFriendGivePointsRequest) Reset()                    { *m = C2SFriendGivePointsRequest{} }
func (m *C2SFriendGivePointsRequest) String() string            { return proto.CompactTextString(m) }
func (*C2SFriendGivePointsRequest) ProtoMessage()               {}
func (*C2SFriendGivePointsRequest) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{172} }

func (m *C2SFriendGivePointsRequest) GetFriendIds() []int32 {
	if m != nil {
		return m.FriendIds
	}
	return nil
}

type S2CFriendGivePointsResponse struct {
	FriendIds    []int32 `protobuf:"varint,1,rep,packed,name=FriendIds" json:"FriendIds,omitempty"`
	IsGivePoints []bool  `protobuf:"varint,2,rep,packed,name=IsGivePoints" json:"IsGivePoints,omitempty"`
}

func (m *S2CFriendGivePointsResponse) Reset()                    { *m = S2CFriendGivePointsResponse{} }
func (m *S2CFriendGivePointsResponse) String() string            { return proto.CompactTextString(m) }
func (*S2CFriendGivePointsResponse) ProtoMessage()               {}
func (*S2CFriendGivePointsResponse) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{173} }

func (m *S2CFriendGivePointsResponse) GetFriendIds() []int32 {
	if m != nil {
		return m.FriendIds
	}
	return nil
}

func (m *S2CFriendGivePointsResponse) GetIsGivePoints() []bool {
	if m != nil {
		return m.IsGivePoints
	}
	return nil
}

// 领取友情点
type C2SFriendGetPointsRequest struct {
	FriendIds []int32 `protobuf:"varint,1,rep,packed,name=FriendIds" json:"FriendIds,omitempty"`
}

func (m *C2SFriendGetPointsRequest) Reset()                    { *m = C2SFriendGetPointsRequest{} }
func (m *C2SFriendGetPointsRequest) String() string            { return proto.CompactTextString(m) }
func (*C2SFriendGetPointsRequest) ProtoMessage()               {}
func (*C2SFriendGetPointsRequest) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{174} }

func (m *C2SFriendGetPointsRequest) GetFriendIds() []int32 {
	if m != nil {
		return m.FriendIds
	}
	return nil
}

type S2CFriendGetPointsResponse struct {
	FriendIds []int32 `protobuf:"varint,1,rep,packed,name=FriendIds" json:"FriendIds,omitempty"`
	GetPoints []int32 `protobuf:"varint,2,rep,packed,name=GetPoints" json:"GetPoints,omitempty"`
}

func (m *S2CFriendGetPointsResponse) Reset()                    { *m = S2CFriendGetPointsResponse{} }
func (m *S2CFriendGetPointsResponse) String() string            { return proto.CompactTextString(m) }
func (*S2CFriendGetPointsResponse) ProtoMessage()               {}
func (*S2CFriendGetPointsResponse) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{175} }

func (m *S2CFriendGetPointsResponse) GetFriendIds() []int32 {
	if m != nil {
		return m.FriendIds
	}
	return nil
}

func (m *S2CFriendGetPointsResponse) GetGetPoints() []int32 {
	if m != nil {
		return m.GetPoints
	}
	return nil
}

// 好友BOSS搜索
type C2SFriendSearchBossRequest struct {
}

func (m *C2SFriendSearchBossRequest) Reset()                    { *m = C2SFriendSearchBossRequest{} }
func (m *C2SFriendSearchBossRequest) String() string            { return proto.CompactTextString(m) }
func (*C2SFriendSearchBossRequest) ProtoMessage()               {}
func (*C2SFriendSearchBossRequest) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{176} }

type S2CFriendSearchBossResponse struct {
	FriendBossTableId int32       `protobuf:"varint,1,opt,name=FriendBossTableId" json:"FriendBossTableId,omitempty"`
	Items             []*ItemInfo `protobuf:"bytes,2,rep,name=Items" json:"Items,omitempty"`
}

func (m *S2CFriendSearchBossResponse) Reset()                    { *m = S2CFriendSearchBossResponse{} }
func (m *S2CFriendSearchBossResponse) String() string            { return proto.CompactTextString(m) }
func (*S2CFriendSearchBossResponse) ProtoMessage()               {}
func (*S2CFriendSearchBossResponse) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{177} }

func (m *S2CFriendSearchBossResponse) GetFriendBossTableId() int32 {
	if m != nil {
		return m.FriendBossTableId
	}
	return 0
}

func (m *S2CFriendSearchBossResponse) GetItems() []*ItemInfo {
	if m != nil {
		return m.Items
	}
	return nil
}

// 获得好友BOSS列表
type C2SFriendsBossListRequest struct {
}

func (m *C2SFriendsBossListRequest) Reset()                    { *m = C2SFriendsBossListRequest{} }
func (m *C2SFriendsBossListRequest) String() string            { return proto.CompactTextString(m) }
func (*C2SFriendsBossListRequest) ProtoMessage()               {}
func (*C2SFriendsBossListRequest) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{178} }

type FriendBossInfo struct {
	FriendId            int32 `protobuf:"varint,1,opt,name=FriendId" json:"FriendId,omitempty"`
	FriendBossTableId   int32 `protobuf:"varint,2,opt,name=FriendBossTableId" json:"FriendBossTableId,omitempty"`
	FriendBossHpPercent int32 `protobuf:"varint,3,opt,name=FriendBossHpPercent" json:"FriendBossHpPercent,omitempty"`
}

func (m *FriendBossInfo) Reset()                    { *m = FriendBossInfo{} }
func (m *FriendBossInfo) String() string            { return proto.CompactTextString(m) }
func (*FriendBossInfo) ProtoMessage()               {}
func (*FriendBossInfo) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{179} }

func (m *FriendBossInfo) GetFriendId() int32 {
	if m != nil {
		return m.FriendId
	}
	return 0
}

func (m *FriendBossInfo) GetFriendBossTableId() int32 {
	if m != nil {
		return m.FriendBossTableId
	}
	return 0
}

func (m *FriendBossInfo) GetFriendBossHpPercent() int32 {
	if m != nil {
		return m.FriendBossHpPercent
	}
	return 0
}

type S2CFriendsBossListResponse struct {
	BossList []*FriendBossInfo `protobuf:"bytes,1,rep,name=BossList" json:"BossList,omitempty"`
}

func (m *S2CFriendsBossListResponse) Reset()                    { *m = S2CFriendsBossListResponse{} }
func (m *S2CFriendsBossListResponse) String() string            { return proto.CompactTextString(m) }
func (*S2CFriendsBossListResponse) ProtoMessage()               {}
func (*S2CFriendsBossListResponse) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{180} }

func (m *S2CFriendsBossListResponse) GetBossList() []*FriendBossInfo {
	if m != nil {
		return m.BossList
	}
	return nil
}

// 获得好友BOSS助战列表
type C2SFriendBossAttackListRequest struct {
	FriendId int32 `protobuf:"varint,1,opt,name=FriendId" json:"FriendId,omitempty"`
}

func (m *C2SFriendBossAttackListRequest) Reset()         { *m = C2SFriendBossAttackListRequest{} }
func (m *C2SFriendBossAttackListRequest) String() string { return proto.CompactTextString(m) }
func (*C2SFriendBossAttackListRequest) ProtoMessage()    {}
func (*C2SFriendBossAttackListRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor0, []int{181}
}

func (m *C2SFriendBossAttackListRequest) GetFriendId() int32 {
	if m != nil {
		return m.FriendId
	}
	return 0
}

type S2CFriendBossAttackListResponse struct {
	AttackList []*PlayerInfo `protobuf:"bytes,1,rep,name=AttackList" json:"AttackList,omitempty"`
}

func (m *S2CFriendBossAttackListResponse) Reset()         { *m = S2CFriendBossAttackListResponse{} }
func (m *S2CFriendBossAttackListResponse) String() string { return proto.CompactTextString(m) }
func (*S2CFriendBossAttackListResponse) ProtoMessage()    {}
func (*S2CFriendBossAttackListResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor0, []int{182}
}

func (m *S2CFriendBossAttackListResponse) GetAttackList() []*PlayerInfo {
	if m != nil {
		return m.AttackList
	}
	return nil
}

// 好友一般数据(体力之类)
type C2SFriendDataRequest struct {
}

func (m *C2SFriendDataRequest) Reset()                    { *m = C2SFriendDataRequest{} }
func (m *C2SFriendDataRequest) String() string            { return proto.CompactTextString(m) }
func (*C2SFriendDataRequest) ProtoMessage()               {}
func (*C2SFriendDataRequest) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{183} }

type S2CFriendDataResponse struct {
	StaminaItemId            int32 `protobuf:"varint,1,opt,name=StaminaItemId" json:"StaminaItemId,omitempty"`
	AddStamina               int32 `protobuf:"varint,2,opt,name=AddStamina" json:"AddStamina,omitempty"`
	RemainSecondsNextStamina int32 `protobuf:"varint,3,opt,name=RemainSecondsNextStamina" json:"RemainSecondsNextStamina,omitempty"`
	StaminaLimit             int32 `protobuf:"varint,4,opt,name=StaminaLimit" json:"StaminaLimit,omitempty"`
	StaminaResumeOneCostTime int32 `protobuf:"varint,5,opt,name=StaminaResumeOneCostTime" json:"StaminaResumeOneCostTime,omitempty"`
	BossId                   int32 `protobuf:"varint,6,opt,name=BossId" json:"BossId,omitempty"`
	BossHpPercent            int32 `protobuf:"varint,7,opt,name=BossHpPercent" json:"BossHpPercent,omitempty"`
	AssistGetPoints          int32 `protobuf:"varint,8,opt,name=AssistGetPoints" json:"AssistGetPoints,omitempty"`
	SearchBossRemainSeconds  int32 `protobuf:"varint,9,opt,name=SearchBossRemainSeconds" json:"SearchBossRemainSeconds,omitempty"`
	AssistRoleId             int32 `protobuf:"varint,10,opt,name=AssistRoleId" json:"AssistRoleId,omitempty"`
}

func (m *S2CFriendDataResponse) Reset()                    { *m = S2CFriendDataResponse{} }
func (m *S2CFriendDataResponse) String() string            { return proto.CompactTextString(m) }
func (*S2CFriendDataResponse) ProtoMessage()               {}
func (*S2CFriendDataResponse) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{184} }

func (m *S2CFriendDataResponse) GetStaminaItemId() int32 {
	if m != nil {
		return m.StaminaItemId
	}
	return 0
}

func (m *S2CFriendDataResponse) GetAddStamina() int32 {
	if m != nil {
		return m.AddStamina
	}
	return 0
}

func (m *S2CFriendDataResponse) GetRemainSecondsNextStamina() int32 {
	if m != nil {
		return m.RemainSecondsNextStamina
	}
	return 0
}

func (m *S2CFriendDataResponse) GetStaminaLimit() int32 {
	if m != nil {
		return m.StaminaLimit
	}
	return 0
}

func (m *S2CFriendDataResponse) GetStaminaResumeOneCostTime() int32 {
	if m != nil {
		return m.StaminaResumeOneCostTime
	}
	return 0
}

func (m *S2CFriendDataResponse) GetBossId() int32 {
	if m != nil {
		return m.BossId
	}
	return 0
}

func (m *S2CFriendDataResponse) GetBossHpPercent() int32 {
	if m != nil {
		return m.BossHpPercent
	}
	return 0
}

func (m *S2CFriendDataResponse) GetAssistGetPoints() int32 {
	if m != nil {
		return m.AssistGetPoints
	}
	return 0
}

func (m *S2CFriendDataResponse) GetSearchBossRemainSeconds() int32 {
	if m != nil {
		return m.SearchBossRemainSeconds
	}
	return 0
}

func (m *S2CFriendDataResponse) GetAssistRoleId() int32 {
	if m != nil {
		return m.AssistRoleId
	}
	return 0
}

// 设置助战角色给好友
type C2SFriendSetAssistRoleRequest struct {
	RoleId int32 `protobuf:"varint,1,opt,name=RoleId" json:"RoleId,omitempty"`
}

func (m *C2SFriendSetAssistRoleRequest) Reset()                    { *m = C2SFriendSetAssistRoleRequest{} }
func (m *C2SFriendSetAssistRoleRequest) String() string            { return proto.CompactTextString(m) }
func (*C2SFriendSetAssistRoleRequest) ProtoMessage()               {}
func (*C2SFriendSetAssistRoleRequest) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{185} }

func (m *C2SFriendSetAssistRoleRequest) GetRoleId() int32 {
	if m != nil {
		return m.RoleId
	}
	return 0
}

type S2CFriendSetAssistRoleResponse struct {
	RoleId int32 `protobuf:"varint,1,opt,name=RoleId" json:"RoleId,omitempty"`
}

func (m *S2CFriendSetAssistRoleResponse) Reset()         { *m = S2CFriendSetAssistRoleResponse{} }
func (m *S2CFriendSetAssistRoleResponse) String() string { return proto.CompactTextString(m) }
func (*S2CFriendSetAssistRoleResponse) ProtoMessage()    {}
func (*S2CFriendSetAssistRoleResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor0, []int{186}
}

func (m *S2CFriendSetAssistRoleResponse) GetRoleId() int32 {
	if m != nil {
		return m.RoleId
	}
	return 0
}

// 一键收发友情点 (返回S2CFriendGivePointsResponse和S2CFriendGetPointsResponse两条消息)
type C2SFriendGiveAndGetPointsRequest struct {
	FriendIds []int32 `protobuf:"varint,1,rep,packed,name=FriendIds" json:"FriendIds,omitempty"`
}

func (m *C2SFriendGiveAndGetPointsRequest) Reset()         { *m = C2SFriendGiveAndGetPointsRequest{} }
func (m *C2SFriendGiveAndGetPointsRequest) String() string { return proto.CompactTextString(m) }
func (*C2SFriendGiveAndGetPointsRequest) ProtoMessage()    {}
func (*C2SFriendGiveAndGetPointsRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor0, []int{187}
}

func (m *C2SFriendGiveAndGetPointsRequest) GetFriendIds() []int32 {
	if m != nil {
		return m.FriendIds
	}
	return nil
}

// 获取助战友情点
type C2SFriendGetAssistPointsRequest struct {
}

func (m *C2SFriendGetAssistPointsRequest) Reset()         { *m = C2SFriendGetAssistPointsRequest{} }
func (m *C2SFriendGetAssistPointsRequest) String() string { return proto.CompactTextString(m) }
func (*C2SFriendGetAssistPointsRequest) ProtoMessage()    {}
func (*C2SFriendGetAssistPointsRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor0, []int{188}
}

type S2CFriendGetAssistPointsResponse struct {
	GetPoints int32 `protobuf:"varint,1,opt,name=GetPoints" json:"GetPoints,omitempty"`
}

func (m *S2CFriendGetAssistPointsResponse) Reset()         { *m = S2CFriendGetAssistPointsResponse{} }
func (m *S2CFriendGetAssistPointsResponse) String() string { return proto.CompactTextString(m) }
func (*S2CFriendGetAssistPointsResponse) ProtoMessage()    {}
func (*S2CFriendGetAssistPointsResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor0, []int{189}
}

func (m *S2CFriendGetAssistPointsResponse) GetGetPoints() int32 {
	if m != nil {
		return m.GetPoints
	}
	return 0
}

// 任务数据
type TaskData struct {
	Id    int32 `protobuf:"varint,1,opt,name=Id" json:"Id,omitempty"`
	Value int32 `protobuf:"varint,2,opt,name=Value" json:"Value,omitempty"`
	State int32 `protobuf:"varint,3,opt,name=State" json:"State,omitempty"`
}

func (m *TaskData) Reset()                    { *m = TaskData{} }
func (m *TaskData) String() string            { return proto.CompactTextString(m) }
func (*TaskData) ProtoMessage()               {}
func (*TaskData) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{190} }

func (m *TaskData) GetId() int32 {
	if m != nil {
		return m.Id
	}
	return 0
}

func (m *TaskData) GetValue() int32 {
	if m != nil {
		return m.Value
	}
	return 0
}

func (m *TaskData) GetState() int32 {
	if m != nil {
		return m.State
	}
	return 0
}

// 客户端向服务器请求日常任务数据
type C2STaskDataRequest struct {
	TaskType int32 `protobuf:"varint,1,opt,name=TaskType" json:"TaskType,omitempty"`
}

func (m *C2STaskDataRequest) Reset()                    { *m = C2STaskDataRequest{} }
func (m *C2STaskDataRequest) String() string            { return proto.CompactTextString(m) }
func (*C2STaskDataRequest) ProtoMessage()               {}
func (*C2STaskDataRequest) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{191} }

func (m *C2STaskDataRequest) GetTaskType() int32 {
	if m != nil {
		return m.TaskType
	}
	return 0
}

// 服务器向客户端发送任务数据
type S2CTaskDataResponse struct {
	TaskType                      int32       `protobuf:"varint,1,opt,name=TaskType" json:"TaskType,omitempty"`
	TaskList                      []*TaskData `protobuf:"bytes,2,rep,name=TaskList" json:"TaskList,omitempty"`
	DailyTaskRefreshRemainSeconds int32       `protobuf:"varint,3,opt,name=DailyTaskRefreshRemainSeconds" json:"DailyTaskRefreshRemainSeconds,omitempty"`
}

func (m *S2CTaskDataResponse) Reset()                    { *m = S2CTaskDataResponse{} }
func (m *S2CTaskDataResponse) String() string            { return proto.CompactTextString(m) }
func (*S2CTaskDataResponse) ProtoMessage()               {}
func (*S2CTaskDataResponse) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{192} }

func (m *S2CTaskDataResponse) GetTaskType() int32 {
	if m != nil {
		return m.TaskType
	}
	return 0
}

func (m *S2CTaskDataResponse) GetTaskList() []*TaskData {
	if m != nil {
		return m.TaskList
	}
	return nil
}

func (m *S2CTaskDataResponse) GetDailyTaskRefreshRemainSeconds() int32 {
	if m != nil {
		return m.DailyTaskRefreshRemainSeconds
	}
	return 0
}

// 服务器向客户端通知任务值变化
type S2CTaskValueNotify struct {
	Data *TaskData `protobuf:"bytes,1,opt,name=Data" json:"Data,omitempty"`
}

func (m *S2CTaskValueNotify) Reset()                    { *m = S2CTaskValueNotify{} }
func (m *S2CTaskValueNotify) String() string            { return proto.CompactTextString(m) }
func (*S2CTaskValueNotify) ProtoMessage()               {}
func (*S2CTaskValueNotify) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{193} }

func (m *S2CTaskValueNotify) GetData() *TaskData {
	if m != nil {
		return m.Data
	}
	return nil
}

// 客户端向服务器请求任务奖励
type C2STaskRewardRequest struct {
	TaskId int32 `protobuf:"varint,1,opt,name=TaskId" json:"TaskId,omitempty"`
}

func (m *C2STaskRewardRequest) Reset()                    { *m = C2STaskRewardRequest{} }
func (m *C2STaskRewardRequest) String() string            { return proto.CompactTextString(m) }
func (*C2STaskRewardRequest) ProtoMessage()               {}
func (*C2STaskRewardRequest) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{194} }

func (m *C2STaskRewardRequest) GetTaskId() int32 {
	if m != nil {
		return m.TaskId
	}
	return 0
}

// 服务器向客户端发送任务结果
type S2CTaskRewardResponse struct {
	TaskId int32 `protobuf:"varint,1,opt,name=TaskId" json:"TaskId,omitempty"`
}

func (m *S2CTaskRewardResponse) Reset()                    { *m = S2CTaskRewardResponse{} }
func (m *S2CTaskRewardResponse) String() string            { return proto.CompactTextString(m) }
func (*S2CTaskRewardResponse) ProtoMessage()               {}
func (*S2CTaskRewardResponse) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{195} }

func (m *S2CTaskRewardResponse) GetTaskId() int32 {
	if m != nil {
		return m.TaskId
	}
	return 0
}

// ------------------------------------ 探索 ----------------------------------
// 探索数据
type ExploreData struct {
	Id              int32   `protobuf:"varint,1,opt,name=Id" json:"Id,omitempty"`
	TaskId          int32   `protobuf:"varint,2,opt,name=TaskId" json:"TaskId,omitempty"`
	RoleCampsCanSel []int32 `protobuf:"varint,3,rep,packed,name=RoleCampsCanSel" json:"RoleCampsCanSel,omitempty"`
	RoleTypesCanSel []int32 `protobuf:"varint,4,rep,packed,name=RoleTypesCanSel" json:"RoleTypesCanSel,omitempty"`
	State           int32   `protobuf:"varint,5,opt,name=State" json:"State,omitempty"`
	RoleId4Title    int32   `protobuf:"varint,6,opt,name=RoleId4Title" json:"RoleId4Title,omitempty"`
	NameId4Title    int32   `protobuf:"varint,7,opt,name=NameId4Title" json:"NameId4Title,omitempty"`
	RoleIds         []int32 `protobuf:"varint,8,rep,packed,name=RoleIds" json:"RoleIds,omitempty"`
	RemainSeconds   int32   `protobuf:"varint,9,opt,name=RemainSeconds" json:"RemainSeconds,omitempty"`
	RandomRewards   []int32 `protobuf:"varint,10,rep,packed,name=RandomRewards" json:"RandomRewards,omitempty"`
	IsLock          bool    `protobuf:"varint,11,opt,name=IsLock" json:"IsLock,omitempty"`
}

func (m *ExploreData) Reset()                    { *m = ExploreData{} }
func (m *ExploreData) String() string            { return proto.CompactTextString(m) }
func (*ExploreData) ProtoMessage()               {}
func (*ExploreData) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{196} }

func (m *ExploreData) GetId() int32 {
	if m != nil {
		return m.Id
	}
	return 0
}

func (m *ExploreData) GetTaskId() int32 {
	if m != nil {
		return m.TaskId
	}
	return 0
}

func (m *ExploreData) GetRoleCampsCanSel() []int32 {
	if m != nil {
		return m.RoleCampsCanSel
	}
	return nil
}

func (m *ExploreData) GetRoleTypesCanSel() []int32 {
	if m != nil {
		return m.RoleTypesCanSel
	}
	return nil
}

func (m *ExploreData) GetState() int32 {
	if m != nil {
		return m.State
	}
	return 0
}

func (m *ExploreData) GetRoleId4Title() int32 {
	if m != nil {
		return m.RoleId4Title
	}
	return 0
}

func (m *ExploreData) GetNameId4Title() int32 {
	if m != nil {
		return m.NameId4Title
	}
	return 0
}

func (m *ExploreData) GetRoleIds() []int32 {
	if m != nil {
		return m.RoleIds
	}
	return nil
}

func (m *ExploreData) GetRemainSeconds() int32 {
	if m != nil {
		return m.RemainSeconds
	}
	return 0
}

func (m *ExploreData) GetRandomRewards() []int32 {
	if m != nil {
		return m.RandomRewards
	}
	return nil
}

func (m *ExploreData) GetIsLock() bool {
	if m != nil {
		return m.IsLock
	}
	return false
}

// 请求探索数据
type C2SExploreDataRequest struct {
}

func (m *C2SExploreDataRequest) Reset()                    { *m = C2SExploreDataRequest{} }
func (m *C2SExploreDataRequest) String() string            { return proto.CompactTextString(m) }
func (*C2SExploreDataRequest) ProtoMessage()               {}
func (*C2SExploreDataRequest) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{197} }

type S2CExploreDataResponse struct {
	Datas                []*ExploreData `protobuf:"bytes,1,rep,name=Datas" json:"Datas,omitempty"`
	StoryDatas           []*ExploreData `protobuf:"bytes,2,rep,name=StoryDatas" json:"StoryDatas,omitempty"`
	RefreshRemainSeconds int32          `protobuf:"varint,3,opt,name=RefreshRemainSeconds" json:"RefreshRemainSeconds,omitempty"`
}

func (m *S2CExploreDataResponse) Reset()                    { *m = S2CExploreDataResponse{} }
func (m *S2CExploreDataResponse) String() string            { return proto.CompactTextString(m) }
func (*S2CExploreDataResponse) ProtoMessage()               {}
func (*S2CExploreDataResponse) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{198} }

func (m *S2CExploreDataResponse) GetDatas() []*ExploreData {
	if m != nil {
		return m.Datas
	}
	return nil
}

func (m *S2CExploreDataResponse) GetStoryDatas() []*ExploreData {
	if m != nil {
		return m.StoryDatas
	}
	return nil
}

func (m *S2CExploreDataResponse) GetRefreshRemainSeconds() int32 {
	if m != nil {
		return m.RefreshRemainSeconds
	}
	return 0
}

// 选择探索角色
type C2SExploreSelRoleRequest struct {
	Id      int32   `protobuf:"varint,1,opt,name=Id" json:"Id,omitempty"`
	IsStory bool    `protobuf:"varint,2,opt,name=IsStory" json:"IsStory,omitempty"`
	RoleIds []int32 `protobuf:"varint,3,rep,packed,name=RoleIds" json:"RoleIds,omitempty"`
}

func (m *C2SExploreSelRoleRequest) Reset()                    { *m = C2SExploreSelRoleRequest{} }
func (m *C2SExploreSelRoleRequest) String() string            { return proto.CompactTextString(m) }
func (*C2SExploreSelRoleRequest) ProtoMessage()               {}
func (*C2SExploreSelRoleRequest) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{199} }

func (m *C2SExploreSelRoleRequest) GetId() int32 {
	if m != nil {
		return m.Id
	}
	return 0
}

func (m *C2SExploreSelRoleRequest) GetIsStory() bool {
	if m != nil {
		return m.IsStory
	}
	return false
}

func (m *C2SExploreSelRoleRequest) GetRoleIds() []int32 {
	if m != nil {
		return m.RoleIds
	}
	return nil
}

type S2CExploreSelRoleResponse struct {
	Id      int32   `protobuf:"varint,1,opt,name=Id" json:"Id,omitempty"`
	IsStory bool    `protobuf:"varint,2,opt,name=IsStory" json:"IsStory,omitempty"`
	RoleIds []int32 `protobuf:"varint,3,rep,packed,name=RoleIds" json:"RoleIds,omitempty"`
}

func (m *S2CExploreSelRoleResponse) Reset()                    { *m = S2CExploreSelRoleResponse{} }
func (m *S2CExploreSelRoleResponse) String() string            { return proto.CompactTextString(m) }
func (*S2CExploreSelRoleResponse) ProtoMessage()               {}
func (*S2CExploreSelRoleResponse) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{200} }

func (m *S2CExploreSelRoleResponse) GetId() int32 {
	if m != nil {
		return m.Id
	}
	return 0
}

func (m *S2CExploreSelRoleResponse) GetIsStory() bool {
	if m != nil {
		return m.IsStory
	}
	return false
}

func (m *S2CExploreSelRoleResponse) GetRoleIds() []int32 {
	if m != nil {
		return m.RoleIds
	}
	return nil
}

// 开始探索
type C2SExploreStartRequest struct {
	Ids     []int32 `protobuf:"varint,1,rep,packed,name=Ids" json:"Ids,omitempty"`
	IsStory bool    `protobuf:"varint,2,opt,name=IsStory" json:"IsStory,omitempty"`
}

func (m *C2SExploreStartRequest) Reset()                    { *m = C2SExploreStartRequest{} }
func (m *C2SExploreStartRequest) String() string            { return proto.CompactTextString(m) }
func (*C2SExploreStartRequest) ProtoMessage()               {}
func (*C2SExploreStartRequest) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{201} }

func (m *C2SExploreStartRequest) GetIds() []int32 {
	if m != nil {
		return m.Ids
	}
	return nil
}

func (m *C2SExploreStartRequest) GetIsStory() bool {
	if m != nil {
		return m.IsStory
	}
	return false
}

type S2CExploreStartResponse struct {
	Ids     []int32 `protobuf:"varint,1,rep,packed,name=Ids" json:"Ids,omitempty"`
	IsStory bool    `protobuf:"varint,2,opt,name=IsStory" json:"IsStory,omitempty"`
	IsLock  bool    `protobuf:"varint,3,opt,name=IsLock" json:"IsLock,omitempty"`
}

func (m *S2CExploreStartResponse) Reset()                    { *m = S2CExploreStartResponse{} }
func (m *S2CExploreStartResponse) String() string            { return proto.CompactTextString(m) }
func (*S2CExploreStartResponse) ProtoMessage()               {}
func (*S2CExploreStartResponse) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{202} }

func (m *S2CExploreStartResponse) GetIds() []int32 {
	if m != nil {
		return m.Ids
	}
	return nil
}

func (m *S2CExploreStartResponse) GetIsStory() bool {
	if m != nil {
		return m.IsStory
	}
	return false
}

func (m *S2CExploreStartResponse) GetIsLock() bool {
	if m != nil {
		return m.IsLock
	}
	return false
}

// 加速
type C2SExploreSpeedupRequest struct {
	Ids     []int32 `protobuf:"varint,1,rep,packed,name=Ids" json:"Ids,omitempty"`
	IsStory bool    `protobuf:"varint,2,opt,name=IsStory" json:"IsStory,omitempty"`
}

func (m *C2SExploreSpeedupRequest) Reset()                    { *m = C2SExploreSpeedupRequest{} }
func (m *C2SExploreSpeedupRequest) String() string            { return proto.CompactTextString(m) }
func (*C2SExploreSpeedupRequest) ProtoMessage()               {}
func (*C2SExploreSpeedupRequest) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{203} }

func (m *C2SExploreSpeedupRequest) GetIds() []int32 {
	if m != nil {
		return m.Ids
	}
	return nil
}

func (m *C2SExploreSpeedupRequest) GetIsStory() bool {
	if m != nil {
		return m.IsStory
	}
	return false
}

type S2CExploreSpeedupResponse struct {
	Ids         []int32 `protobuf:"varint,1,rep,packed,name=Ids" json:"Ids,omitempty"`
	IsStory     bool    `protobuf:"varint,2,opt,name=IsStory" json:"IsStory,omitempty"`
	CostDiamond int32   `protobuf:"varint,3,opt,name=CostDiamond" json:"CostDiamond,omitempty"`
}

func (m *S2CExploreSpeedupResponse) Reset()                    { *m = S2CExploreSpeedupResponse{} }
func (m *S2CExploreSpeedupResponse) String() string            { return proto.CompactTextString(m) }
func (*S2CExploreSpeedupResponse) ProtoMessage()               {}
func (*S2CExploreSpeedupResponse) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{204} }

func (m *S2CExploreSpeedupResponse) GetIds() []int32 {
	if m != nil {
		return m.Ids
	}
	return nil
}

func (m *S2CExploreSpeedupResponse) GetIsStory() bool {
	if m != nil {
		return m.IsStory
	}
	return false
}

func (m *S2CExploreSpeedupResponse) GetCostDiamond() int32 {
	if m != nil {
		return m.CostDiamond
	}
	return 0
}

// 刷新探索任务
type C2SExploreRefreshRequest struct {
}

func (m *C2SExploreRefreshRequest) Reset()                    { *m = C2SExploreRefreshRequest{} }
func (m *C2SExploreRefreshRequest) String() string            { return proto.CompactTextString(m) }
func (*C2SExploreRefreshRequest) ProtoMessage()               {}
func (*C2SExploreRefreshRequest) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{205} }

type S2CExploreRefreshResponse struct {
	Datas []*ExploreData `protobuf:"bytes,1,rep,name=Datas" json:"Datas,omitempty"`
}

func (m *S2CExploreRefreshResponse) Reset()                    { *m = S2CExploreRefreshResponse{} }
func (m *S2CExploreRefreshResponse) String() string            { return proto.CompactTextString(m) }
func (*S2CExploreRefreshResponse) ProtoMessage()               {}
func (*S2CExploreRefreshResponse) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{206} }

func (m *S2CExploreRefreshResponse) GetDatas() []*ExploreData {
	if m != nil {
		return m.Datas
	}
	return nil
}

// 自动刷新通知
type S2CExploreAutoRefreshNotify struct {
}

func (m *S2CExploreAutoRefreshNotify) Reset()                    { *m = S2CExploreAutoRefreshNotify{} }
func (m *S2CExploreAutoRefreshNotify) String() string            { return proto.CompactTextString(m) }
func (*S2CExploreAutoRefreshNotify) ProtoMessage()               {}
func (*S2CExploreAutoRefreshNotify) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{207} }

// 锁定或解锁探索任务
type C2SExploreLockRequest struct {
	Ids    []int32 `protobuf:"varint,1,rep,packed,name=Ids" json:"Ids,omitempty"`
	IsLock bool    `protobuf:"varint,2,opt,name=IsLock" json:"IsLock,omitempty"`
}

func (m *C2SExploreLockRequest) Reset()                    { *m = C2SExploreLockRequest{} }
func (m *C2SExploreLockRequest) String() string            { return proto.CompactTextString(m) }
func (*C2SExploreLockRequest) ProtoMessage()               {}
func (*C2SExploreLockRequest) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{208} }

func (m *C2SExploreLockRequest) GetIds() []int32 {
	if m != nil {
		return m.Ids
	}
	return nil
}

func (m *C2SExploreLockRequest) GetIsLock() bool {
	if m != nil {
		return m.IsLock
	}
	return false
}

type S2CExploreLockResponse struct {
	Ids    []int32 `protobuf:"varint,1,rep,packed,name=Ids" json:"Ids,omitempty"`
	IsLock bool    `protobuf:"varint,2,opt,name=IsLock" json:"IsLock,omitempty"`
}

func (m *S2CExploreLockResponse) Reset()                    { *m = S2CExploreLockResponse{} }
func (m *S2CExploreLockResponse) String() string            { return proto.CompactTextString(m) }
func (*S2CExploreLockResponse) ProtoMessage()               {}
func (*S2CExploreLockResponse) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{209} }

func (m *S2CExploreLockResponse) GetIds() []int32 {
	if m != nil {
		return m.Ids
	}
	return nil
}

func (m *S2CExploreLockResponse) GetIsLock() bool {
	if m != nil {
		return m.IsLock
	}
	return false
}

// 探索奖励
type C2SExploreGetRewardRequest struct {
	Id      int32 `protobuf:"varint,1,opt,name=Id" json:"Id,omitempty"`
	IsStory bool  `protobuf:"varint,2,opt,name=IsStory" json:"IsStory,omitempty"`
}

func (m *C2SExploreGetRewardRequest) Reset()                    { *m = C2SExploreGetRewardRequest{} }
func (m *C2SExploreGetRewardRequest) String() string            { return proto.CompactTextString(m) }
func (*C2SExploreGetRewardRequest) ProtoMessage()               {}
func (*C2SExploreGetRewardRequest) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{210} }

func (m *C2SExploreGetRewardRequest) GetId() int32 {
	if m != nil {
		return m.Id
	}
	return 0
}

func (m *C2SExploreGetRewardRequest) GetIsStory() bool {
	if m != nil {
		return m.IsStory
	}
	return false
}

type S2CExploreGetRewardResponse struct {
	Id             int32       `protobuf:"varint,1,opt,name=Id" json:"Id,omitempty"`
	IsStory        bool        `protobuf:"varint,2,opt,name=IsStory" json:"IsStory,omitempty"`
	RandomItems    []*ItemInfo `protobuf:"bytes,3,rep,name=RandomItems" json:"RandomItems,omitempty"`
	HasRewardStage bool        `protobuf:"varint,4,opt,name=HasRewardStage" json:"HasRewardStage,omitempty"`
}

func (m *S2CExploreGetRewardResponse) Reset()                    { *m = S2CExploreGetRewardResponse{} }
func (m *S2CExploreGetRewardResponse) String() string            { return proto.CompactTextString(m) }
func (*S2CExploreGetRewardResponse) ProtoMessage()               {}
func (*S2CExploreGetRewardResponse) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{211} }

func (m *S2CExploreGetRewardResponse) GetId() int32 {
	if m != nil {
		return m.Id
	}
	return 0
}

func (m *S2CExploreGetRewardResponse) GetIsStory() bool {
	if m != nil {
		return m.IsStory
	}
	return false
}

func (m *S2CExploreGetRewardResponse) GetRandomItems() []*ItemInfo {
	if m != nil {
		return m.RandomItems
	}
	return nil
}

func (m *S2CExploreGetRewardResponse) GetHasRewardStage() bool {
	if m != nil {
		return m.HasRewardStage
	}
	return false
}

// 剧情探索任务通知
type S2CExploreStoryNewNotify struct {
	TaskId int32 `protobuf:"varint,1,opt,name=TaskId" json:"TaskId,omitempty"`
}

func (m *S2CExploreStoryNewNotify) Reset()                    { *m = S2CExploreStoryNewNotify{} }
func (m *S2CExploreStoryNewNotify) String() string            { return proto.CompactTextString(m) }
func (*S2CExploreStoryNewNotify) ProtoMessage()               {}
func (*S2CExploreStoryNewNotify) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{212} }

func (m *S2CExploreStoryNewNotify) GetTaskId() int32 {
	if m != nil {
		return m.TaskId
	}
	return 0
}

// 探索任务被删除
type S2CExploreRemoveNotify struct {
	Id      int32 `protobuf:"varint,1,opt,name=Id" json:"Id,omitempty"`
	IsStory bool  `protobuf:"varint,2,opt,name=IsStory" json:"IsStory,omitempty"`
}

func (m *S2CExploreRemoveNotify) Reset()                    { *m = S2CExploreRemoveNotify{} }
func (m *S2CExploreRemoveNotify) String() string            { return proto.CompactTextString(m) }
func (*S2CExploreRemoveNotify) ProtoMessage()               {}
func (*S2CExploreRemoveNotify) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{213} }

func (m *S2CExploreRemoveNotify) GetId() int32 {
	if m != nil {
		return m.Id
	}
	return 0
}

func (m *S2CExploreRemoveNotify) GetIsStory() bool {
	if m != nil {
		return m.IsStory
	}
	return false
}

// ----------------------------------- 聊天 -----------------------------------
// 发送世界聊天消息
type C2SChatRequest struct {
	Channel int32  `protobuf:"varint,1,opt,name=Channel" json:"Channel,omitempty"`
	Content []byte `protobuf:"bytes,2,opt,name=Content,proto3" json:"Content,omitempty"`
}

func (m *C2SChatRequest) Reset()                    { *m = C2SChatRequest{} }
func (m *C2SChatRequest) String() string            { return proto.CompactTextString(m) }
func (*C2SChatRequest) ProtoMessage()               {}
func (*C2SChatRequest) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{214} }

func (m *C2SChatRequest) GetChannel() int32 {
	if m != nil {
		return m.Channel
	}
	return 0
}

func (m *C2SChatRequest) GetContent() []byte {
	if m != nil {
		return m.Content
	}
	return nil
}

type S2CChatResponse struct {
	Channel int32  `protobuf:"varint,1,opt,name=Channel" json:"Channel,omitempty"`
	Content []byte `protobuf:"bytes,2,opt,name=Content,proto3" json:"Content,omitempty"`
}

func (m *S2CChatResponse) Reset()                    { *m = S2CChatResponse{} }
func (m *S2CChatResponse) String() string            { return proto.CompactTextString(m) }
func (*S2CChatResponse) ProtoMessage()               {}
func (*S2CChatResponse) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{215} }

func (m *S2CChatResponse) GetChannel() int32 {
	if m != nil {
		return m.Channel
	}
	return 0
}

func (m *S2CChatResponse) GetContent() []byte {
	if m != nil {
		return m.Content
	}
	return nil
}

// 拉取聊天消息
type C2SChatMsgPullRequest struct {
	Channel int32 `protobuf:"varint,1,opt,name=Channel" json:"Channel,omitempty"`
}

func (m *C2SChatMsgPullRequest) Reset()                    { *m = C2SChatMsgPullRequest{} }
func (m *C2SChatMsgPullRequest) String() string            { return proto.CompactTextString(m) }
func (*C2SChatMsgPullRequest) ProtoMessage()               {}
func (*C2SChatMsgPullRequest) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{216} }

func (m *C2SChatMsgPullRequest) GetChannel() int32 {
	if m != nil {
		return m.Channel
	}
	return 0
}

type ChatItem struct {
	Content     []byte `protobuf:"bytes,1,opt,name=Content,proto3" json:"Content,omitempty"`
	PlayerId    int32  `protobuf:"varint,2,opt,name=PlayerId" json:"PlayerId,omitempty"`
	PlayerName  string `protobuf:"bytes,3,opt,name=PlayerName" json:"PlayerName,omitempty"`
	PlayerHead  int32  `protobuf:"varint,4,opt,name=PlayerHead" json:"PlayerHead,omitempty"`
	PlayerLevel int32  `protobuf:"varint,5,opt,name=PlayerLevel" json:"PlayerLevel,omitempty"`
	IsFriend    int32  `protobuf:"varint,6,opt,name=IsFriend" json:"IsFriend,omitempty"`
	SendTime    int32  `protobuf:"varint,7,opt,name=SendTime" json:"SendTime,omitempty"`
	ExtraValue  int32  `protobuf:"varint,8,opt,name=ExtraValue" json:"ExtraValue,omitempty"`
}

func (m *ChatItem) Reset()                    { *m = ChatItem{} }
func (m *ChatItem) String() string            { return proto.CompactTextString(m) }
func (*ChatItem) ProtoMessage()               {}
func (*ChatItem) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{217} }

func (m *ChatItem) GetContent() []byte {
	if m != nil {
		return m.Content
	}
	return nil
}

func (m *ChatItem) GetPlayerId() int32 {
	if m != nil {
		return m.PlayerId
	}
	return 0
}

func (m *ChatItem) GetPlayerName() string {
	if m != nil {
		return m.PlayerName
	}
	return ""
}

func (m *ChatItem) GetPlayerHead() int32 {
	if m != nil {
		return m.PlayerHead
	}
	return 0
}

func (m *ChatItem) GetPlayerLevel() int32 {
	if m != nil {
		return m.PlayerLevel
	}
	return 0
}

func (m *ChatItem) GetIsFriend() int32 {
	if m != nil {
		return m.IsFriend
	}
	return 0
}

func (m *ChatItem) GetSendTime() int32 {
	if m != nil {
		return m.SendTime
	}
	return 0
}

func (m *ChatItem) GetExtraValue() int32 {
	if m != nil {
		return m.ExtraValue
	}
	return 0
}

type S2CChatMsgPullResponse struct {
	Channel int32       `protobuf:"varint,1,opt,name=Channel" json:"Channel,omitempty"`
	Items   []*ChatItem `protobuf:"bytes,2,rep,name=Items" json:"Items,omitempty"`
}

func (m *S2CChatMsgPullResponse) Reset()                    { *m = S2CChatMsgPullResponse{} }
func (m *S2CChatMsgPullResponse) String() string            { return proto.CompactTextString(m) }
func (*S2CChatMsgPullResponse) ProtoMessage()               {}
func (*S2CChatMsgPullResponse) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{218} }

func (m *S2CChatMsgPullResponse) GetChannel() int32 {
	if m != nil {
		return m.Channel
	}
	return 0
}

func (m *S2CChatMsgPullResponse) GetItems() []*ChatItem {
	if m != nil {
		return m.Items
	}
	return nil
}

// ----------------------------------- 公会 -----------------------------------
// 公会数据
type C2SGuildDataRequest struct {
}

func (m *C2SGuildDataRequest) Reset()                    { *m = C2SGuildDataRequest{} }
func (m *C2SGuildDataRequest) String() string            { return proto.CompactTextString(m) }
func (*C2SGuildDataRequest) ProtoMessage()               {}
func (*C2SGuildDataRequest) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{219} }

type GuildInfo struct {
	Id                       int32  `protobuf:"varint,1,opt,name=Id" json:"Id,omitempty"`
	Name                     string `protobuf:"bytes,2,opt,name=Name" json:"Name,omitempty"`
	Level                    int32  `protobuf:"varint,3,opt,name=Level" json:"Level,omitempty"`
	Exp                      int32  `protobuf:"varint,4,opt,name=Exp" json:"Exp,omitempty"`
	Logo                     int32  `protobuf:"varint,5,opt,name=Logo" json:"Logo,omitempty"`
	Anouncement              string `protobuf:"bytes,6,opt,name=Anouncement" json:"Anouncement,omitempty"`
	DismissRemainSeconds     int32  `protobuf:"varint,7,opt,name=DismissRemainSeconds" json:"DismissRemainSeconds,omitempty"`
	SignRemainSeconds        int32  `protobuf:"varint,8,opt,name=SignRemainSeconds" json:"SignRemainSeconds,omitempty"`
	AskDonateRemainSeconds   int32  `protobuf:"varint,9,opt,name=AskDonateRemainSeconds" json:"AskDonateRemainSeconds,omitempty"`
	DonateResetRemainSeconds int32  `protobuf:"varint,10,opt,name=DonateResetRemainSeconds" json:"DonateResetRemainSeconds,omitempty"`
	DonateNum                int32  `protobuf:"varint,11,opt,name=DonateNum" json:"DonateNum,omitempty"`
	MaxDonateNum             int32  `protobuf:"varint,12,opt,name=MaxDonateNum" json:"MaxDonateNum,omitempty"`
	President                int32  `protobuf:"varint,13,opt,name=President" json:"President,omitempty"`
	PresidentName            string `protobuf:"bytes,14,opt,name=PresidentName" json:"PresidentName,omitempty"`
	MemberNum                int32  `protobuf:"varint,15,opt,name=MemberNum" json:"MemberNum,omitempty"`
	MemberNumLimit           int32  `protobuf:"varint,16,opt,name=MemberNumLimit" json:"MemberNumLimit,omitempty"`
	Position                 int32  `protobuf:"varint,17,opt,name=Position" json:"Position,omitempty"`
}

func (m *GuildInfo) Reset()                    { *m = GuildInfo{} }
func (m *GuildInfo) String() string            { return proto.CompactTextString(m) }
func (*GuildInfo) ProtoMessage()               {}
func (*GuildInfo) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{220} }

func (m *GuildInfo) GetId() int32 {
	if m != nil {
		return m.Id
	}
	return 0
}

func (m *GuildInfo) GetName() string {
	if m != nil {
		return m.Name
	}
	return ""
}

func (m *GuildInfo) GetLevel() int32 {
	if m != nil {
		return m.Level
	}
	return 0
}

func (m *GuildInfo) GetExp() int32 {
	if m != nil {
		return m.Exp
	}
	return 0
}

func (m *GuildInfo) GetLogo() int32 {
	if m != nil {
		return m.Logo
	}
	return 0
}

func (m *GuildInfo) GetAnouncement() string {
	if m != nil {
		return m.Anouncement
	}
	return ""
}

func (m *GuildInfo) GetDismissRemainSeconds() int32 {
	if m != nil {
		return m.DismissRemainSeconds
	}
	return 0
}

func (m *GuildInfo) GetSignRemainSeconds() int32 {
	if m != nil {
		return m.SignRemainSeconds
	}
	return 0
}

func (m *GuildInfo) GetAskDonateRemainSeconds() int32 {
	if m != nil {
		return m.AskDonateRemainSeconds
	}
	return 0
}

func (m *GuildInfo) GetDonateResetRemainSeconds() int32 {
	if m != nil {
		return m.DonateResetRemainSeconds
	}
	return 0
}

func (m *GuildInfo) GetDonateNum() int32 {
	if m != nil {
		return m.DonateNum
	}
	return 0
}

func (m *GuildInfo) GetMaxDonateNum() int32 {
	if m != nil {
		return m.MaxDonateNum
	}
	return 0
}

func (m *GuildInfo) GetPresident() int32 {
	if m != nil {
		return m.President
	}
	return 0
}

func (m *GuildInfo) GetPresidentName() string {
	if m != nil {
		return m.PresidentName
	}
	return ""
}

func (m *GuildInfo) GetMemberNum() int32 {
	if m != nil {
		return m.MemberNum
	}
	return 0
}

func (m *GuildInfo) GetMemberNumLimit() int32 {
	if m != nil {
		return m.MemberNumLimit
	}
	return 0
}

func (m *GuildInfo) GetPosition() int32 {
	if m != nil {
		return m.Position
	}
	return 0
}

type S2CGuildDataResponse struct {
	Info *GuildInfo `protobuf:"bytes,1,opt,name=Info" json:"Info,omitempty"`
}

func (m *S2CGuildDataResponse) Reset()                    { *m = S2CGuildDataResponse{} }
func (m *S2CGuildDataResponse) String() string            { return proto.CompactTextString(m) }
func (*S2CGuildDataResponse) ProtoMessage()               {}
func (*S2CGuildDataResponse) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{221} }

func (m *S2CGuildDataResponse) GetInfo() *GuildInfo {
	if m != nil {
		return m.Info
	}
	return nil
}

// 搜索公会
type C2SGuildSearchRequest struct {
	Key string `protobuf:"bytes,1,opt,name=Key" json:"Key,omitempty"`
}

func (m *C2SGuildSearchRequest) Reset()                    { *m = C2SGuildSearchRequest{} }
func (m *C2SGuildSearchRequest) String() string            { return proto.CompactTextString(m) }
func (*C2SGuildSearchRequest) ProtoMessage()               {}
func (*C2SGuildSearchRequest) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{222} }

func (m *C2SGuildSearchRequest) GetKey() string {
	if m != nil {
		return m.Key
	}
	return ""
}

type GuildBaseInfo struct {
	Id             int32  `protobuf:"varint,1,opt,name=Id" json:"Id,omitempty"`
	Name           string `protobuf:"bytes,2,opt,name=Name" json:"Name,omitempty"`
	Level          int32  `protobuf:"varint,3,opt,name=Level" json:"Level,omitempty"`
	Logo           int32  `protobuf:"varint,4,opt,name=Logo" json:"Logo,omitempty"`
	MemberNum      int32  `protobuf:"varint,5,opt,name=MemberNum" json:"MemberNum,omitempty"`
	MemberNumLimit int32  `protobuf:"varint,6,opt,name=MemberNumLimit" json:"MemberNumLimit,omitempty"`
}

func (m *GuildBaseInfo) Reset()                    { *m = GuildBaseInfo{} }
func (m *GuildBaseInfo) String() string            { return proto.CompactTextString(m) }
func (*GuildBaseInfo) ProtoMessage()               {}
func (*GuildBaseInfo) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{223} }

func (m *GuildBaseInfo) GetId() int32 {
	if m != nil {
		return m.Id
	}
	return 0
}

func (m *GuildBaseInfo) GetName() string {
	if m != nil {
		return m.Name
	}
	return ""
}

func (m *GuildBaseInfo) GetLevel() int32 {
	if m != nil {
		return m.Level
	}
	return 0
}

func (m *GuildBaseInfo) GetLogo() int32 {
	if m != nil {
		return m.Logo
	}
	return 0
}

func (m *GuildBaseInfo) GetMemberNum() int32 {
	if m != nil {
		return m.MemberNum
	}
	return 0
}

func (m *GuildBaseInfo) GetMemberNumLimit() int32 {
	if m != nil {
		return m.MemberNumLimit
	}
	return 0
}

type S2CGuildSearchResponse struct {
	InfoList []*GuildBaseInfo `protobuf:"bytes,1,rep,name=InfoList" json:"InfoList,omitempty"`
}

func (m *S2CGuildSearchResponse) Reset()                    { *m = S2CGuildSearchResponse{} }
func (m *S2CGuildSearchResponse) String() string            { return proto.CompactTextString(m) }
func (*S2CGuildSearchResponse) ProtoMessage()               {}
func (*S2CGuildSearchResponse) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{224} }

func (m *S2CGuildSearchResponse) GetInfoList() []*GuildBaseInfo {
	if m != nil {
		return m.InfoList
	}
	return nil
}

// 推荐公会
type C2SGuildRecommendRequest struct {
}

func (m *C2SGuildRecommendRequest) Reset()                    { *m = C2SGuildRecommendRequest{} }
func (m *C2SGuildRecommendRequest) String() string            { return proto.CompactTextString(m) }
func (*C2SGuildRecommendRequest) ProtoMessage()               {}
func (*C2SGuildRecommendRequest) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{225} }

type S2CGuildRecommendResponse struct {
	InfoList []*GuildBaseInfo `protobuf:"bytes,1,rep,name=InfoList" json:"InfoList,omitempty"`
}

func (m *S2CGuildRecommendResponse) Reset()                    { *m = S2CGuildRecommendResponse{} }
func (m *S2CGuildRecommendResponse) String() string            { return proto.CompactTextString(m) }
func (*S2CGuildRecommendResponse) ProtoMessage()               {}
func (*S2CGuildRecommendResponse) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{226} }

func (m *S2CGuildRecommendResponse) GetInfoList() []*GuildBaseInfo {
	if m != nil {
		return m.InfoList
	}
	return nil
}

// 创建公会
type C2SGuildCreateRequest struct {
	GuildName   string `protobuf:"bytes,1,opt,name=GuildName" json:"GuildName,omitempty"`
	GuildLogo   int32  `protobuf:"varint,2,opt,name=GuildLogo" json:"GuildLogo,omitempty"`
	Anouncement []byte `protobuf:"bytes,3,opt,name=Anouncement,proto3" json:"Anouncement,omitempty"`
}

func (m *C2SGuildCreateRequest) Reset()                    { *m = C2SGuildCreateRequest{} }
func (m *C2SGuildCreateRequest) String() string            { return proto.CompactTextString(m) }
func (*C2SGuildCreateRequest) ProtoMessage()               {}
func (*C2SGuildCreateRequest) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{227} }

func (m *C2SGuildCreateRequest) GetGuildName() string {
	if m != nil {
		return m.GuildName
	}
	return ""
}

func (m *C2SGuildCreateRequest) GetGuildLogo() int32 {
	if m != nil {
		return m.GuildLogo
	}
	return 0
}

func (m *C2SGuildCreateRequest) GetAnouncement() []byte {
	if m != nil {
		return m.Anouncement
	}
	return nil
}

type S2CGuildCreateResponse struct {
	Info        *GuildInfo `protobuf:"bytes,1,opt,name=Info" json:"Info,omitempty"`
	CostDiamond int32      `protobuf:"varint,2,opt,name=CostDiamond" json:"CostDiamond,omitempty"`
}

func (m *S2CGuildCreateResponse) Reset()                    { *m = S2CGuildCreateResponse{} }
func (m *S2CGuildCreateResponse) String() string            { return proto.CompactTextString(m) }
func (*S2CGuildCreateResponse) ProtoMessage()               {}
func (*S2CGuildCreateResponse) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{228} }

func (m *S2CGuildCreateResponse) GetInfo() *GuildInfo {
	if m != nil {
		return m.Info
	}
	return nil
}

func (m *S2CGuildCreateResponse) GetCostDiamond() int32 {
	if m != nil {
		return m.CostDiamond
	}
	return 0
}

// 解散公会
type C2SGuildDismissRequest struct {
}

func (m *C2SGuildDismissRequest) Reset()                    { *m = C2SGuildDismissRequest{} }
func (m *C2SGuildDismissRequest) String() string            { return proto.CompactTextString(m) }
func (*C2SGuildDismissRequest) ProtoMessage()               {}
func (*C2SGuildDismissRequest) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{229} }

type S2CGuildDismissResponse struct {
	RealDismissRemainSeconds int32 `protobuf:"varint,1,opt,name=RealDismissRemainSeconds" json:"RealDismissRemainSeconds,omitempty"`
}

func (m *S2CGuildDismissResponse) Reset()                    { *m = S2CGuildDismissResponse{} }
func (m *S2CGuildDismissResponse) String() string            { return proto.CompactTextString(m) }
func (*S2CGuildDismissResponse) ProtoMessage()               {}
func (*S2CGuildDismissResponse) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{230} }

func (m *S2CGuildDismissResponse) GetRealDismissRemainSeconds() int32 {
	if m != nil {
		return m.RealDismissRemainSeconds
	}
	return 0
}

// 取消解散公会
type C2SGuildCancelDismissRequest struct {
}

func (m *C2SGuildCancelDismissRequest) Reset()                    { *m = C2SGuildCancelDismissRequest{} }
func (m *C2SGuildCancelDismissRequest) String() string            { return proto.CompactTextString(m) }
func (*C2SGuildCancelDismissRequest) ProtoMessage()               {}
func (*C2SGuildCancelDismissRequest) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{231} }

type S2CGuildCancelDismissResponse struct {
}

func (m *S2CGuildCancelDismissResponse) Reset()                    { *m = S2CGuildCancelDismissResponse{} }
func (m *S2CGuildCancelDismissResponse) String() string            { return proto.CompactTextString(m) }
func (*S2CGuildCancelDismissResponse) ProtoMessage()               {}
func (*S2CGuildCancelDismissResponse) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{232} }

// 公会删除通知
type S2CGuildDeleteNotify struct {
	GuildId int32 `protobuf:"varint,1,opt,name=GuildId" json:"GuildId,omitempty"`
}

func (m *S2CGuildDeleteNotify) Reset()                    { *m = S2CGuildDeleteNotify{} }
func (m *S2CGuildDeleteNotify) String() string            { return proto.CompactTextString(m) }
func (*S2CGuildDeleteNotify) ProtoMessage()               {}
func (*S2CGuildDeleteNotify) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{233} }

func (m *S2CGuildDeleteNotify) GetGuildId() int32 {
	if m != nil {
		return m.GuildId
	}
	return 0
}

// 公会信息修改
type C2SGuildInfoModifyRequest struct {
	NewGuildName string `protobuf:"bytes,1,opt,name=NewGuildName" json:"NewGuildName,omitempty"`
	NewGuildLogo int32  `protobuf:"varint,2,opt,name=NewGuildLogo" json:"NewGuildLogo,omitempty"`
}

func (m *C2SGuildInfoModifyRequest) Reset()                    { *m = C2SGuildInfoModifyRequest{} }
func (m *C2SGuildInfoModifyRequest) String() string            { return proto.CompactTextString(m) }
func (*C2SGuildInfoModifyRequest) ProtoMessage()               {}
func (*C2SGuildInfoModifyRequest) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{234} }

func (m *C2SGuildInfoModifyRequest) GetNewGuildName() string {
	if m != nil {
		return m.NewGuildName
	}
	return ""
}

func (m *C2SGuildInfoModifyRequest) GetNewGuildLogo() int32 {
	if m != nil {
		return m.NewGuildLogo
	}
	return 0
}

type S2CGuildInfoModifyResponse struct {
	NewGuildName string `protobuf:"bytes,1,opt,name=NewGuildName" json:"NewGuildName,omitempty"`
	NewGuildLogo int32  `protobuf:"varint,2,opt,name=NewGuildLogo" json:"NewGuildLogo,omitempty"`
	CostDiamond  int32  `protobuf:"varint,3,opt,name=CostDiamond" json:"CostDiamond,omitempty"`
}

func (m *S2CGuildInfoModifyResponse) Reset()                    { *m = S2CGuildInfoModifyResponse{} }
func (m *S2CGuildInfoModifyResponse) String() string            { return proto.CompactTextString(m) }
func (*S2CGuildInfoModifyResponse) ProtoMessage()               {}
func (*S2CGuildInfoModifyResponse) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{235} }

func (m *S2CGuildInfoModifyResponse) GetNewGuildName() string {
	if m != nil {
		return m.NewGuildName
	}
	return ""
}

func (m *S2CGuildInfoModifyResponse) GetNewGuildLogo() int32 {
	if m != nil {
		return m.NewGuildLogo
	}
	return 0
}

func (m *S2CGuildInfoModifyResponse) GetCostDiamond() int32 {
	if m != nil {
		return m.CostDiamond
	}
	return 0
}

// 公会修改公告
type C2SGuildAnouncementRequest struct {
	Content string `protobuf:"bytes,1,opt,name=Content" json:"Content,omitempty"`
}

func (m *C2SGuildAnouncementRequest) Reset()                    { *m = C2SGuildAnouncementRequest{} }
func (m *C2SGuildAnouncementRequest) String() string            { return proto.CompactTextString(m) }
func (*C2SGuildAnouncementRequest) ProtoMessage()               {}
func (*C2SGuildAnouncementRequest) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{236} }

func (m *C2SGuildAnouncementRequest) GetContent() string {
	if m != nil {
		return m.Content
	}
	return ""
}

type S2CGuildAnouncementResponse struct {
	Content string `protobuf:"bytes,1,opt,name=Content" json:"Content,omitempty"`
}

func (m *S2CGuildAnouncementResponse) Reset()                    { *m = S2CGuildAnouncementResponse{} }
func (m *S2CGuildAnouncementResponse) String() string            { return proto.CompactTextString(m) }
func (*S2CGuildAnouncementResponse) ProtoMessage()               {}
func (*S2CGuildAnouncementResponse) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{237} }

func (m *S2CGuildAnouncementResponse) GetContent() string {
	if m != nil {
		return m.Content
	}
	return ""
}

// 公会成员列表
type C2SGuildMembersRequest struct {
}

func (m *C2SGuildMembersRequest) Reset()                    { *m = C2SGuildMembersRequest{} }
func (m *C2SGuildMembersRequest) String() string            { return proto.CompactTextString(m) }
func (*C2SGuildMembersRequest) ProtoMessage()               {}
func (*C2SGuildMembersRequest) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{238} }

type GuildMember struct {
	Id                    int32  `protobuf:"varint,1,opt,name=Id" json:"Id,omitempty"`
	Name                  string `protobuf:"bytes,2,opt,name=Name" json:"Name,omitempty"`
	Level                 int32  `protobuf:"varint,3,opt,name=Level" json:"Level,omitempty"`
	Head                  int32  `protobuf:"varint,4,opt,name=Head" json:"Head,omitempty"`
	Position              int32  `protobuf:"varint,5,opt,name=Position" json:"Position,omitempty"`
	LastOnlineTime        int32  `protobuf:"varint,6,opt,name=LastOnlineTime" json:"LastOnlineTime,omitempty"`
	NextSignRemainSeconds int32  `protobuf:"varint,7,opt,name=NextSignRemainSeconds" json:"NextSignRemainSeconds,omitempty"`
	JoinTime              int32  `protobuf:"varint,8,opt,name=JoinTime" json:"JoinTime,omitempty"`
}

func (m *GuildMember) Reset()                    { *m = GuildMember{} }
func (m *GuildMember) String() string            { return proto.CompactTextString(m) }
func (*GuildMember) ProtoMessage()               {}
func (*GuildMember) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{239} }

func (m *GuildMember) GetId() int32 {
	if m != nil {
		return m.Id
	}
	return 0
}

func (m *GuildMember) GetName() string {
	if m != nil {
		return m.Name
	}
	return ""
}

func (m *GuildMember) GetLevel() int32 {
	if m != nil {
		return m.Level
	}
	return 0
}

func (m *GuildMember) GetHead() int32 {
	if m != nil {
		return m.Head
	}
	return 0
}

func (m *GuildMember) GetPosition() int32 {
	if m != nil {
		return m.Position
	}
	return 0
}

func (m *GuildMember) GetLastOnlineTime() int32 {
	if m != nil {
		return m.LastOnlineTime
	}
	return 0
}

func (m *GuildMember) GetNextSignRemainSeconds() int32 {
	if m != nil {
		return m.NextSignRemainSeconds
	}
	return 0
}

func (m *GuildMember) GetJoinTime() int32 {
	if m != nil {
		return m.JoinTime
	}
	return 0
}

type S2CGuildMemebersResponse struct {
	Members []*GuildMember `protobuf:"bytes,1,rep,name=Members" json:"Members,omitempty"`
}

func (m *S2CGuildMemebersResponse) Reset()                    { *m = S2CGuildMemebersResponse{} }
func (m *S2CGuildMemebersResponse) String() string            { return proto.CompactTextString(m) }
func (*S2CGuildMemebersResponse) ProtoMessage()               {}
func (*S2CGuildMemebersResponse) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{240} }

func (m *S2CGuildMemebersResponse) GetMembers() []*GuildMember {
	if m != nil {
		return m.Members
	}
	return nil
}

// 公会申请列表
type C2SGuildAskListRequest struct {
}

func (m *C2SGuildAskListRequest) Reset()                    { *m = C2SGuildAskListRequest{} }
func (m *C2SGuildAskListRequest) String() string            { return proto.CompactTextString(m) }
func (*C2SGuildAskListRequest) ProtoMessage()               {}
func (*C2SGuildAskListRequest) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{241} }

type S2CGuildAskListResponse struct {
	AskList []*PlayerInfo `protobuf:"bytes,1,rep,name=AskList" json:"AskList,omitempty"`
}

func (m *S2CGuildAskListResponse) Reset()                    { *m = S2CGuildAskListResponse{} }
func (m *S2CGuildAskListResponse) String() string            { return proto.CompactTextString(m) }
func (*S2CGuildAskListResponse) ProtoMessage()               {}
func (*S2CGuildAskListResponse) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{242} }

func (m *S2CGuildAskListResponse) GetAskList() []*PlayerInfo {
	if m != nil {
		return m.AskList
	}
	return nil
}

// 申请加入公会
type C2SGuildAskJoinRequest struct {
	GuildId int32 `protobuf:"varint,1,opt,name=GuildId" json:"GuildId,omitempty"`
}

func (m *C2SGuildAskJoinRequest) Reset()                    { *m = C2SGuildAskJoinRequest{} }
func (m *C2SGuildAskJoinRequest) String() string            { return proto.CompactTextString(m) }
func (*C2SGuildAskJoinRequest) ProtoMessage()               {}
func (*C2SGuildAskJoinRequest) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{243} }

func (m *C2SGuildAskJoinRequest) GetGuildId() int32 {
	if m != nil {
		return m.GuildId
	}
	return 0
}

type S2CGuildAskJoinResponse struct {
	GuildId int32 `protobuf:"varint,1,opt,name=GuildId" json:"GuildId,omitempty"`
}

func (m *S2CGuildAskJoinResponse) Reset()                    { *m = S2CGuildAskJoinResponse{} }
func (m *S2CGuildAskJoinResponse) String() string            { return proto.CompactTextString(m) }
func (*S2CGuildAskJoinResponse) ProtoMessage()               {}
func (*S2CGuildAskJoinResponse) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{244} }

func (m *S2CGuildAskJoinResponse) GetGuildId() int32 {
	if m != nil {
		return m.GuildId
	}
	return 0
}

// 同意加入公会
type C2SGuildAgreeJoinRequest struct {
	PlayerIds []int32 `protobuf:"varint,1,rep,packed,name=PlayerIds" json:"PlayerIds,omitempty"`
	IsRefuse  bool    `protobuf:"varint,2,opt,name=IsRefuse" json:"IsRefuse,omitempty"`
}

func (m *C2SGuildAgreeJoinRequest) Reset()                    { *m = C2SGuildAgreeJoinRequest{} }
func (m *C2SGuildAgreeJoinRequest) String() string            { return proto.CompactTextString(m) }
func (*C2SGuildAgreeJoinRequest) ProtoMessage()               {}
func (*C2SGuildAgreeJoinRequest) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{245} }

func (m *C2SGuildAgreeJoinRequest) GetPlayerIds() []int32 {
	if m != nil {
		return m.PlayerIds
	}
	return nil
}

func (m *C2SGuildAgreeJoinRequest) GetIsRefuse() bool {
	if m != nil {
		return m.IsRefuse
	}
	return false
}

type S2CGuildAgreeJoinResponse struct {
	Player2Res map[int32]int32 `protobuf:"bytes,1,rep,name=Player2Res" json:"Player2Res,omitempty" protobuf_key:"varint,1,opt,name=key" protobuf_val:"varint,2,opt,name=value"`
	IsRefuse   bool            `protobuf:"varint,2,opt,name=IsRefuse" json:"IsRefuse,omitempty"`
}

func (m *S2CGuildAgreeJoinResponse) Reset()                    { *m = S2CGuildAgreeJoinResponse{} }
func (m *S2CGuildAgreeJoinResponse) String() string            { return proto.CompactTextString(m) }
func (*S2CGuildAgreeJoinResponse) ProtoMessage()               {}
func (*S2CGuildAgreeJoinResponse) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{246} }

func (m *S2CGuildAgreeJoinResponse) GetPlayer2Res() map[int32]int32 {
	if m != nil {
		return m.Player2Res
	}
	return nil
}

func (m *S2CGuildAgreeJoinResponse) GetIsRefuse() bool {
	if m != nil {
		return m.IsRefuse
	}
	return false
}

// 公会同意加入通知
type S2CGuildAgreeJoinNotify struct {
	NewMemberId int32 `protobuf:"varint,1,opt,name=NewMemberId" json:"NewMemberId,omitempty"`
	GuildId     int32 `protobuf:"varint,2,opt,name=GuildId" json:"GuildId,omitempty"`
}

func (m *S2CGuildAgreeJoinNotify) Reset()                    { *m = S2CGuildAgreeJoinNotify{} }
func (m *S2CGuildAgreeJoinNotify) String() string            { return proto.CompactTextString(m) }
func (*S2CGuildAgreeJoinNotify) ProtoMessage()               {}
func (*S2CGuildAgreeJoinNotify) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{247} }

func (m *S2CGuildAgreeJoinNotify) GetNewMemberId() int32 {
	if m != nil {
		return m.NewMemberId
	}
	return 0
}

func (m *S2CGuildAgreeJoinNotify) GetGuildId() int32 {
	if m != nil {
		return m.GuildId
	}
	return 0
}

// 主动退出公会
type C2SGuildQuitRequest struct {
}

func (m *C2SGuildQuitRequest) Reset()                    { *m = C2SGuildQuitRequest{} }
func (m *C2SGuildQuitRequest) String() string            { return proto.CompactTextString(m) }
func (*C2SGuildQuitRequest) ProtoMessage()               {}
func (*C2SGuildQuitRequest) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{248} }

type S2CGuildQuitResponse struct {
	RejoinRemainSeconds int32 `protobuf:"varint,1,opt,name=RejoinRemainSeconds" json:"RejoinRemainSeconds,omitempty"`
}

func (m *S2CGuildQuitResponse) Reset()                    { *m = S2CGuildQuitResponse{} }
func (m *S2CGuildQuitResponse) String() string            { return proto.CompactTextString(m) }
func (*S2CGuildQuitResponse) ProtoMessage()               {}
func (*S2CGuildQuitResponse) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{249} }

func (m *S2CGuildQuitResponse) GetRejoinRemainSeconds() int32 {
	if m != nil {
		return m.RejoinRemainSeconds
	}
	return 0
}

// 公会日志
type C2SGuildLogsRequest struct {
}

func (m *C2SGuildLogsRequest) Reset()                    { *m = C2SGuildLogsRequest{} }
func (m *C2SGuildLogsRequest) String() string            { return proto.CompactTextString(m) }
func (*C2SGuildLogsRequest) ProtoMessage()               {}
func (*C2SGuildLogsRequest) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{250} }

type GuildLog struct {
	Id         int32  `protobuf:"varint,1,opt,name=Id" json:"Id,omitempty"`
	Time       int32  `protobuf:"varint,2,opt,name=Time" json:"Time,omitempty"`
	Type       int32  `protobuf:"varint,3,opt,name=Type" json:"Type,omitempty"`
	PlayerId   int32  `protobuf:"varint,4,opt,name=PlayerId" json:"PlayerId,omitempty"`
	PlayerName string `protobuf:"bytes,5,opt,name=PlayerName" json:"PlayerName,omitempty"`
}

func (m *GuildLog) Reset()                    { *m = GuildLog{} }
func (m *GuildLog) String() string            { return proto.CompactTextString(m) }
func (*GuildLog) ProtoMessage()               {}
func (*GuildLog) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{251} }

func (m *GuildLog) GetId() int32 {
	if m != nil {
		return m.Id
	}
	return 0
}

func (m *GuildLog) GetTime() int32 {
	if m != nil {
		return m.Time
	}
	return 0
}

func (m *GuildLog) GetType() int32 {
	if m != nil {
		return m.Type
	}
	return 0
}

func (m *GuildLog) GetPlayerId() int32 {
	if m != nil {
		return m.PlayerId
	}
	return 0
}

func (m *GuildLog) GetPlayerName() string {
	if m != nil {
		return m.PlayerName
	}
	return ""
}

type S2CGuildLogsResponse struct {
	Logs []*GuildLog `protobuf:"bytes,1,rep,name=Logs" json:"Logs,omitempty"`
}

func (m *S2CGuildLogsResponse) Reset()                    { *m = S2CGuildLogsResponse{} }
func (m *S2CGuildLogsResponse) String() string            { return proto.CompactTextString(m) }
func (*S2CGuildLogsResponse) ProtoMessage()               {}
func (*S2CGuildLogsResponse) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{252} }

func (m *S2CGuildLogsResponse) GetLogs() []*GuildLog {
	if m != nil {
		return m.Logs
	}
	return nil
}

// 公会签到
type C2SGuildSignInRequest struct {
}

func (m *C2SGuildSignInRequest) Reset()                    { *m = C2SGuildSignInRequest{} }
func (m *C2SGuildSignInRequest) String() string            { return proto.CompactTextString(m) }
func (*C2SGuildSignInRequest) ProtoMessage()               {}
func (*C2SGuildSignInRequest) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{253} }

type S2CGuildSignInResponse struct {
	NextSignInRemainSeconds int32   `protobuf:"varint,1,opt,name=NextSignInRemainSeconds" json:"NextSignInRemainSeconds,omitempty"`
	RewardItems             []int32 `protobuf:"varint,2,rep,packed,name=RewardItems" json:"RewardItems,omitempty"`
	GuildLevel              int32   `protobuf:"varint,3,opt,name=GuildLevel" json:"GuildLevel,omitempty"`
	GuildExp                int32   `protobuf:"varint,4,opt,name=GuildExp" json:"GuildExp,omitempty"`
	IsLevelup               bool    `protobuf:"varint,5,opt,name=IsLevelup" json:"IsLevelup,omitempty"`
	MemberNumLimit          int32   `protobuf:"varint,6,opt,name=MemberNumLimit" json:"MemberNumLimit,omitempty"`
}

func (m *S2CGuildSignInResponse) Reset()                    { *m = S2CGuildSignInResponse{} }
func (m *S2CGuildSignInResponse) String() string            { return proto.CompactTextString(m) }
func (*S2CGuildSignInResponse) ProtoMessage()               {}
func (*S2CGuildSignInResponse) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{254} }

func (m *S2CGuildSignInResponse) GetNextSignInRemainSeconds() int32 {
	if m != nil {
		return m.NextSignInRemainSeconds
	}
	return 0
}

func (m *S2CGuildSignInResponse) GetRewardItems() []int32 {
	if m != nil {
		return m.RewardItems
	}
	return nil
}

func (m *S2CGuildSignInResponse) GetGuildLevel() int32 {
	if m != nil {
		return m.GuildLevel
	}
	return 0
}

func (m *S2CGuildSignInResponse) GetGuildExp() int32 {
	if m != nil {
		return m.GuildExp
	}
	return 0
}

func (m *S2CGuildSignInResponse) GetIsLevelup() bool {
	if m != nil {
		return m.IsLevelup
	}
	return false
}

func (m *S2CGuildSignInResponse) GetMemberNumLimit() int32 {
	if m != nil {
		return m.MemberNumLimit
	}
	return 0
}

// 公会任命或罢免官员
type C2SGuildSetOfficerRequest struct {
	PlayerIds []int32 `protobuf:"varint,1,rep,packed,name=PlayerIds" json:"PlayerIds,omitempty"`
	SetType   int32   `protobuf:"varint,2,opt,name=SetType" json:"SetType,omitempty"`
}

func (m *C2SGuildSetOfficerRequest) Reset()                    { *m = C2SGuildSetOfficerRequest{} }
func (m *C2SGuildSetOfficerRequest) String() string            { return proto.CompactTextString(m) }
func (*C2SGuildSetOfficerRequest) ProtoMessage()               {}
func (*C2SGuildSetOfficerRequest) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{255} }

func (m *C2SGuildSetOfficerRequest) GetPlayerIds() []int32 {
	if m != nil {
		return m.PlayerIds
	}
	return nil
}

func (m *C2SGuildSetOfficerRequest) GetSetType() int32 {
	if m != nil {
		return m.SetType
	}
	return 0
}

type S2CGuildSetOfficerResponse struct {
	PlayerIds []int32 `protobuf:"varint,1,rep,packed,name=PlayerIds" json:"PlayerIds,omitempty"`
	SetType   int32   `protobuf:"varint,2,opt,name=SetType" json:"SetType,omitempty"`
	Position  int32   `protobuf:"varint,3,opt,name=Position" json:"Position,omitempty"`
}

func (m *S2CGuildSetOfficerResponse) Reset()                    { *m = S2CGuildSetOfficerResponse{} }
func (m *S2CGuildSetOfficerResponse) String() string            { return proto.CompactTextString(m) }
func (*S2CGuildSetOfficerResponse) ProtoMessage()               {}
func (*S2CGuildSetOfficerResponse) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{256} }

func (m *S2CGuildSetOfficerResponse) GetPlayerIds() []int32 {
	if m != nil {
		return m.PlayerIds
	}
	return nil
}

func (m *S2CGuildSetOfficerResponse) GetSetType() int32 {
	if m != nil {
		return m.SetType
	}
	return 0
}

func (m *S2CGuildSetOfficerResponse) GetPosition() int32 {
	if m != nil {
		return m.Position
	}
	return 0
}

// 公会任命罢免通知
type S2CGuildSetOfficerNotify struct {
	MemberId    int32 `protobuf:"varint,1,opt,name=MemberId" json:"MemberId,omitempty"`
	SetType     int32 `protobuf:"varint,2,opt,name=SetType" json:"SetType,omitempty"`
	NewPosition int32 `protobuf:"varint,3,opt,name=NewPosition" json:"NewPosition,omitempty"`
}

func (m *S2CGuildSetOfficerNotify) Reset()                    { *m = S2CGuildSetOfficerNotify{} }
func (m *S2CGuildSetOfficerNotify) String() string            { return proto.CompactTextString(m) }
func (*S2CGuildSetOfficerNotify) ProtoMessage()               {}
func (*S2CGuildSetOfficerNotify) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{257} }

func (m *S2CGuildSetOfficerNotify) GetMemberId() int32 {
	if m != nil {
		return m.MemberId
	}
	return 0
}

func (m *S2CGuildSetOfficerNotify) GetSetType() int32 {
	if m != nil {
		return m.SetType
	}
	return 0
}

func (m *S2CGuildSetOfficerNotify) GetNewPosition() int32 {
	if m != nil {
		return m.NewPosition
	}
	return 0
}

// 公会驱逐会员
type C2SGuildKickMemberRequest struct {
	PlayerIds []int32 `protobuf:"varint,1,rep,packed,name=PlayerIds" json:"PlayerIds,omitempty"`
}

func (m *C2SGuildKickMemberRequest) Reset()                    { *m = C2SGuildKickMemberRequest{} }
func (m *C2SGuildKickMemberRequest) String() string            { return proto.CompactTextString(m) }
func (*C2SGuildKickMemberRequest) ProtoMessage()               {}
func (*C2SGuildKickMemberRequest) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{258} }

func (m *C2SGuildKickMemberRequest) GetPlayerIds() []int32 {
	if m != nil {
		return m.PlayerIds
	}
	return nil
}

type S2CGuildKickMemberResponse struct {
	PlayerIds []int32 `protobuf:"varint,1,rep,packed,name=PlayerIds" json:"PlayerIds,omitempty"`
}

func (m *S2CGuildKickMemberResponse) Reset()                    { *m = S2CGuildKickMemberResponse{} }
func (m *S2CGuildKickMemberResponse) String() string            { return proto.CompactTextString(m) }
func (*S2CGuildKickMemberResponse) ProtoMessage()               {}
func (*S2CGuildKickMemberResponse) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{259} }

func (m *S2CGuildKickMemberResponse) GetPlayerIds() []int32 {
	if m != nil {
		return m.PlayerIds
	}
	return nil
}

// 公会驱逐会员通知
type S2CGuildKickMemberNotify struct {
	MemberId int32 `protobuf:"varint,1,opt,name=MemberId" json:"MemberId,omitempty"`
}

func (m *S2CGuildKickMemberNotify) Reset()                    { *m = S2CGuildKickMemberNotify{} }
func (m *S2CGuildKickMemberNotify) String() string            { return proto.CompactTextString(m) }
func (*S2CGuildKickMemberNotify) ProtoMessage()               {}
func (*S2CGuildKickMemberNotify) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{260} }

func (m *S2CGuildKickMemberNotify) GetMemberId() int32 {
	if m != nil {
		return m.MemberId
	}
	return 0
}

// 公会转让会长
type C2SGuildChangePresidentRequest struct {
	NewPresidentId int32 `protobuf:"varint,1,opt,name=NewPresidentId" json:"NewPresidentId,omitempty"`
}

func (m *C2SGuildChangePresidentRequest) Reset()         { *m = C2SGuildChangePresidentRequest{} }
func (m *C2SGuildChangePresidentRequest) String() string { return proto.CompactTextString(m) }
func (*C2SGuildChangePresidentRequest) ProtoMessage()    {}
func (*C2SGuildChangePresidentRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor0, []int{261}
}

func (m *C2SGuildChangePresidentRequest) GetNewPresidentId() int32 {
	if m != nil {
		return m.NewPresidentId
	}
	return 0
}

type S2CGuildChangePresidentResponse struct {
	NewPresidentId int32 `protobuf:"varint,1,opt,name=NewPresidentId" json:"NewPresidentId,omitempty"`
}

func (m *S2CGuildChangePresidentResponse) Reset()         { *m = S2CGuildChangePresidentResponse{} }
func (m *S2CGuildChangePresidentResponse) String() string { return proto.CompactTextString(m) }
func (*S2CGuildChangePresidentResponse) ProtoMessage()    {}
func (*S2CGuildChangePresidentResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor0, []int{262}
}

func (m *S2CGuildChangePresidentResponse) GetNewPresidentId() int32 {
	if m != nil {
		return m.NewPresidentId
	}
	return 0
}

// 公会转让会长通知
type S2CGuildChangePresidentNotify struct {
	OldPresidentId int32 `protobuf:"varint,1,opt,name=OldPresidentId" json:"OldPresidentId,omitempty"`
	NewPresidentId int32 `protobuf:"varint,2,opt,name=NewPresidentId" json:"NewPresidentId,omitempty"`
}

func (m *S2CGuildChangePresidentNotify) Reset()                    { *m = S2CGuildChangePresidentNotify{} }
func (m *S2CGuildChangePresidentNotify) String() string            { return proto.CompactTextString(m) }
func (*S2CGuildChangePresidentNotify) ProtoMessage()               {}
func (*S2CGuildChangePresidentNotify) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{263} }

func (m *S2CGuildChangePresidentNotify) GetOldPresidentId() int32 {
	if m != nil {
		return m.OldPresidentId
	}
	return 0
}

func (m *S2CGuildChangePresidentNotify) GetNewPresidentId() int32 {
	if m != nil {
		return m.NewPresidentId
	}
	return 0
}

// 公会招募
type C2SGuildRecruitRequest struct {
	Content []byte `protobuf:"bytes,1,opt,name=Content,proto3" json:"Content,omitempty"`
}

func (m *C2SGuildRecruitRequest) Reset()                    { *m = C2SGuildRecruitRequest{} }
func (m *C2SGuildRecruitRequest) String() string            { return proto.CompactTextString(m) }
func (*C2SGuildRecruitRequest) ProtoMessage()               {}
func (*C2SGuildRecruitRequest) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{264} }

func (m *C2SGuildRecruitRequest) GetContent() []byte {
	if m != nil {
		return m.Content
	}
	return nil
}

type S2CGuildRecruitResponse struct {
	Content []byte `protobuf:"bytes,1,opt,name=Content,proto3" json:"Content,omitempty"`
}

func (m *S2CGuildRecruitResponse) Reset()                    { *m = S2CGuildRecruitResponse{} }
func (m *S2CGuildRecruitResponse) String() string            { return proto.CompactTextString(m) }
func (*S2CGuildRecruitResponse) ProtoMessage()               {}
func (*S2CGuildRecruitResponse) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{265} }

func (m *S2CGuildRecruitResponse) GetContent() []byte {
	if m != nil {
		return m.Content
	}
	return nil
}

// 公会请求捐赠
type C2SGuildAskDonateRequest struct {
	ItemId  int32 `protobuf:"varint,1,opt,name=ItemId" json:"ItemId,omitempty"`
	ItemNum int32 `protobuf:"varint,2,opt,name=ItemNum" json:"ItemNum,omitempty"`
}

func (m *C2SGuildAskDonateRequest) Reset()                    { *m = C2SGuildAskDonateRequest{} }
func (m *C2SGuildAskDonateRequest) String() string            { return proto.CompactTextString(m) }
func (*C2SGuildAskDonateRequest) ProtoMessage()               {}
func (*C2SGuildAskDonateRequest) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{266} }

func (m *C2SGuildAskDonateRequest) GetItemId() int32 {
	if m != nil {
		return m.ItemId
	}
	return 0
}

func (m *C2SGuildAskDonateRequest) GetItemNum() int32 {
	if m != nil {
		return m.ItemNum
	}
	return 0
}

type S2CGuildAskDonateResponse struct {
	ItemId               int32 `protobuf:"varint,1,opt,name=ItemId" json:"ItemId,omitempty"`
	ItemNum              int32 `protobuf:"varint,2,opt,name=ItemNum" json:"ItemNum,omitempty"`
	NextAskRemainSeconds int32 `protobuf:"varint,3,opt,name=NextAskRemainSeconds" json:"NextAskRemainSeconds,omitempty"`
}

func (m *S2CGuildAskDonateResponse) Reset()                    { *m = S2CGuildAskDonateResponse{} }
func (m *S2CGuildAskDonateResponse) String() string            { return proto.CompactTextString(m) }
func (*S2CGuildAskDonateResponse) ProtoMessage()               {}
func (*S2CGuildAskDonateResponse) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{267} }

func (m *S2CGuildAskDonateResponse) GetItemId() int32 {
	if m != nil {
		return m.ItemId
	}
	return 0
}

func (m *S2CGuildAskDonateResponse) GetItemNum() int32 {
	if m != nil {
		return m.ItemNum
	}
	return 0
}

func (m *S2CGuildAskDonateResponse) GetNextAskRemainSeconds() int32 {
	if m != nil {
		return m.NextAskRemainSeconds
	}
	return 0
}

// 公会捐赠
type C2SGuildDonateRequest struct {
	PlayerId int32 `protobuf:"varint,1,opt,name=PlayerId" json:"PlayerId,omitempty"`
	ItemId   int32 `protobuf:"varint,2,opt,name=ItemId" json:"ItemId,omitempty"`
	ItemNum  int32 `protobuf:"varint,3,opt,name=ItemNum" json:"ItemNum,omitempty"`
}

func (m *C2SGuildDonateRequest) Reset()                    { *m = C2SGuildDonateRequest{} }
func (m *C2SGuildDonateRequest) String() string            { return proto.CompactTextString(m) }
func (*C2SGuildDonateRequest) ProtoMessage()               {}
func (*C2SGuildDonateRequest) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{268} }

func (m *C2SGuildDonateRequest) GetPlayerId() int32 {
	if m != nil {
		return m.PlayerId
	}
	return 0
}

func (m *C2SGuildDonateRequest) GetItemId() int32 {
	if m != nil {
		return m.ItemId
	}
	return 0
}

func (m *C2SGuildDonateRequest) GetItemNum() int32 {
	if m != nil {
		return m.ItemNum
	}
	return 0
}

type S2CGuildDonateResponse struct {
	PlayerId  int32 `protobuf:"varint,1,opt,name=PlayerId" json:"PlayerId,omitempty"`
	ItemId    int32 `protobuf:"varint,2,opt,name=ItemId" json:"ItemId,omitempty"`
	ItemNum   int32 `protobuf:"varint,3,opt,name=ItemNum" json:"ItemNum,omitempty"`
	DonateNum int32 `protobuf:"varint,4,opt,name=DonateNum" json:"DonateNum,omitempty"`
}

func (m *S2CGuildDonateResponse) Reset()                    { *m = S2CGuildDonateResponse{} }
func (m *S2CGuildDonateResponse) String() string            { return proto.CompactTextString(m) }
func (*S2CGuildDonateResponse) ProtoMessage()               {}
func (*S2CGuildDonateResponse) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{269} }

func (m *S2CGuildDonateResponse) GetPlayerId() int32 {
	if m != nil {
		return m.PlayerId
	}
	return 0
}

func (m *S2CGuildDonateResponse) GetItemId() int32 {
	if m != nil {
		return m.ItemId
	}
	return 0
}

func (m *S2CGuildDonateResponse) GetItemNum() int32 {
	if m != nil {
		return m.ItemNum
	}
	return 0
}

func (m *S2CGuildDonateResponse) GetDonateNum() int32 {
	if m != nil {
		return m.DonateNum
	}
	return 0
}

// 公会通知请求捐赠成员物品更新
type S2CGuildDonateItemNotify struct {
	DonatePlayerId int32 `protobuf:"varint,1,opt,name=DonatePlayerId" json:"DonatePlayerId,omitempty"`
	DonateNum      int32 `protobuf:"varint,2,opt,name=DonateNum" json:"DonateNum,omitempty"`
	ItemId         int32 `protobuf:"varint,3,opt,name=ItemId" json:"ItemId,omitempty"`
	ItemNum        int32 `protobuf:"varint,4,opt,name=ItemNum" json:"ItemNum,omitempty"`
	DonateOver     bool  `protobuf:"varint,5,opt,name=DonateOver" json:"DonateOver,omitempty"`
}

func (m *S2CGuildDonateItemNotify) Reset()                    { *m = S2CGuildDonateItemNotify{} }
func (m *S2CGuildDonateItemNotify) String() string            { return proto.CompactTextString(m) }
func (*S2CGuildDonateItemNotify) ProtoMessage()               {}
func (*S2CGuildDonateItemNotify) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{270} }

func (m *S2CGuildDonateItemNotify) GetDonatePlayerId() int32 {
	if m != nil {
		return m.DonatePlayerId
	}
	return 0
}

func (m *S2CGuildDonateItemNotify) GetDonateNum() int32 {
	if m != nil {
		return m.DonateNum
	}
	return 0
}

func (m *S2CGuildDonateItemNotify) GetItemId() int32 {
	if m != nil {
		return m.ItemId
	}
	return 0
}

func (m *S2CGuildDonateItemNotify) GetItemNum() int32 {
	if m != nil {
		return m.ItemNum
	}
	return 0
}

func (m *S2CGuildDonateItemNotify) GetDonateOver() bool {
	if m != nil {
		return m.DonateOver
	}
	return false
}

// 公会捐赠列表
type C2SGuildDonateListRequest struct {
}

func (m *C2SGuildDonateListRequest) Reset()                    { *m = C2SGuildDonateListRequest{} }
func (m *C2SGuildDonateListRequest) String() string            { return proto.CompactTextString(m) }
func (*C2SGuildDonateListRequest) ProtoMessage()               {}
func (*C2SGuildDonateListRequest) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{271} }

// 请求捐赠玩家信息
type GuildAskDonateInfo struct {
	PlayerId           int32  `protobuf:"varint,1,opt,name=PlayerId" json:"PlayerId,omitempty"`
	PlayerName         string `protobuf:"bytes,2,opt,name=PlayerName" json:"PlayerName,omitempty"`
	PlayerHead         int32  `protobuf:"varint,3,opt,name=PlayerHead" json:"PlayerHead,omitempty"`
	PlayerLevel        int32  `protobuf:"varint,4,opt,name=PlayerLevel" json:"PlayerLevel,omitempty"`
	ItemId             int32  `protobuf:"varint,5,opt,name=ItemId" json:"ItemId,omitempty"`
	ItemNum            int32  `protobuf:"varint,6,opt,name=ItemNum" json:"ItemNum,omitempty"`
	AskTime            int32  `protobuf:"varint,7,opt,name=AskTime" json:"AskTime,omitempty"`
	RemainExistSeconds int32  `protobuf:"varint,8,opt,name=RemainExistSeconds" json:"RemainExistSeconds,omitempty"`
}

func (m *GuildAskDonateInfo) Reset()                    { *m = GuildAskDonateInfo{} }
func (m *GuildAskDonateInfo) String() string            { return proto.CompactTextString(m) }
func (*GuildAskDonateInfo) ProtoMessage()               {}
func (*GuildAskDonateInfo) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{272} }

func (m *GuildAskDonateInfo) GetPlayerId() int32 {
	if m != nil {
		return m.PlayerId
	}
	return 0
}

func (m *GuildAskDonateInfo) GetPlayerName() string {
	if m != nil {
		return m.PlayerName
	}
	return ""
}

func (m *GuildAskDonateInfo) GetPlayerHead() int32 {
	if m != nil {
		return m.PlayerHead
	}
	return 0
}

func (m *GuildAskDonateInfo) GetPlayerLevel() int32 {
	if m != nil {
		return m.PlayerLevel
	}
	return 0
}

func (m *GuildAskDonateInfo) GetItemId() int32 {
	if m != nil {
		return m.ItemId
	}
	return 0
}

func (m *GuildAskDonateInfo) GetItemNum() int32 {
	if m != nil {
		return m.ItemNum
	}
	return 0
}

func (m *GuildAskDonateInfo) GetAskTime() int32 {
	if m != nil {
		return m.AskTime
	}
	return 0
}

func (m *GuildAskDonateInfo) GetRemainExistSeconds() int32 {
	if m != nil {
		return m.RemainExistSeconds
	}
	return 0
}

type S2CGuildDonateListResponse struct {
	InfoList []*GuildAskDonateInfo `protobuf:"bytes,1,rep,name=InfoList" json:"InfoList,omitempty"`
}

func (m *S2CGuildDonateListResponse) Reset()                    { *m = S2CGuildDonateListResponse{} }
func (m *S2CGuildDonateListResponse) String() string            { return proto.CompactTextString(m) }
func (*S2CGuildDonateListResponse) ProtoMessage()               {}
func (*S2CGuildDonateListResponse) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{273} }

func (m *S2CGuildDonateListResponse) GetInfoList() []*GuildAskDonateInfo {
	if m != nil {
		return m.InfoList
	}
	return nil
}

// 公会副本数据
type C2SGuildStageDataRequest struct {
}

func (m *C2SGuildStageDataRequest) Reset()                    { *m = C2SGuildStageDataRequest{} }
func (m *C2SGuildStageDataRequest) String() string            { return proto.CompactTextString(m) }
func (*C2SGuildStageDataRequest) ProtoMessage()               {}
func (*C2SGuildStageDataRequest) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{274} }

type S2CGuildStageDataResponse struct {
	CurrBossId            int32   `protobuf:"varint,1,opt,name=CurrBossId" json:"CurrBossId,omitempty"`
	HpPercent             int32   `protobuf:"varint,2,opt,name=HpPercent" json:"HpPercent,omitempty"`
	RespawnNum            int32   `protobuf:"varint,3,opt,name=RespawnNum" json:"RespawnNum,omitempty"`
	TotalRespawnNum       int32   `protobuf:"varint,4,opt,name=TotalRespawnNum" json:"TotalRespawnNum,omitempty"`
	RefreshRemainSeconds  int32   `protobuf:"varint,5,opt,name=RefreshRemainSeconds" json:"RefreshRemainSeconds,omitempty"`
	StageState            int32   `protobuf:"varint,6,opt,name=StageState" json:"StageState,omitempty"`
	RespawnNeedCost       []int32 `protobuf:"varint,7,rep,packed,name=RespawnNeedCost" json:"RespawnNeedCost,omitempty"`
	CanResetRemainSeconds int32   `protobuf:"varint,8,opt,name=CanResetRemainSeconds" json:"CanResetRemainSeconds,omitempty"`
}

func (m *S2CGuildStageDataResponse) Reset()                    { *m = S2CGuildStageDataResponse{} }
func (m *S2CGuildStageDataResponse) String() string            { return proto.CompactTextString(m) }
func (*S2CGuildStageDataResponse) ProtoMessage()               {}
func (*S2CGuildStageDataResponse) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{275} }

func (m *S2CGuildStageDataResponse) GetCurrBossId() int32 {
	if m != nil {
		return m.CurrBossId
	}
	return 0
}

func (m *S2CGuildStageDataResponse) GetHpPercent() int32 {
	if m != nil {
		return m.HpPercent
	}
	return 0
}

func (m *S2CGuildStageDataResponse) GetRespawnNum() int32 {
	if m != nil {
		return m.RespawnNum
	}
	return 0
}

func (m *S2CGuildStageDataResponse) GetTotalRespawnNum() int32 {
	if m != nil {
		return m.TotalRespawnNum
	}
	return 0
}

func (m *S2CGuildStageDataResponse) GetRefreshRemainSeconds() int32 {
	if m != nil {
		return m.RefreshRemainSeconds
	}
	return 0
}

func (m *S2CGuildStageDataResponse) GetStageState() int32 {
	if m != nil {
		return m.StageState
	}
	return 0
}

func (m *S2CGuildStageDataResponse) GetRespawnNeedCost() []int32 {
	if m != nil {
		return m.RespawnNeedCost
	}
	return nil
}

func (m *S2CGuildStageDataResponse) GetCanResetRemainSeconds() int32 {
	if m != nil {
		return m.CanResetRemainSeconds
	}
	return 0
}

// 公会副本排行榜
type C2SGuildStageRankListRequest struct {
	BossId int32 `protobuf:"varint,1,opt,name=BossId" json:"BossId,omitempty"`
}

func (m *C2SGuildStageRankListRequest) Reset()                    { *m = C2SGuildStageRankListRequest{} }
func (m *C2SGuildStageRankListRequest) String() string            { return proto.CompactTextString(m) }
func (*C2SGuildStageRankListRequest) ProtoMessage()               {}
func (*C2SGuildStageRankListRequest) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{276} }

func (m *C2SGuildStageRankListRequest) GetBossId() int32 {
	if m != nil {
		return m.BossId
	}
	return 0
}

// 公会副本伤害列表项
type GuildStageDamageItem struct {
	Rank       int32  `protobuf:"varint,1,opt,name=Rank" json:"Rank,omitempty"`
	MemberId   int32  `protobuf:"varint,2,opt,name=MemberId" json:"MemberId,omitempty"`
	MemberName string `protobuf:"bytes,3,opt,name=MemberName" json:"MemberName,omitempty"`
	Level      int32  `protobuf:"varint,4,opt,name=Level" json:"Level,omitempty"`
	Head       int32  `protobuf:"varint,5,opt,name=Head" json:"Head,omitempty"`
	Damage     int32  `protobuf:"varint,6,opt,name=Damage" json:"Damage,omitempty"`
}

func (m *GuildStageDamageItem) Reset()                    { *m = GuildStageDamageItem{} }
func (m *GuildStageDamageItem) String() string            { return proto.CompactTextString(m) }
func (*GuildStageDamageItem) ProtoMessage()               {}
func (*GuildStageDamageItem) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{277} }

func (m *GuildStageDamageItem) GetRank() int32 {
	if m != nil {
		return m.Rank
	}
	return 0
}

func (m *GuildStageDamageItem) GetMemberId() int32 {
	if m != nil {
		return m.MemberId
	}
	return 0
}

func (m *GuildStageDamageItem) GetMemberName() string {
	if m != nil {
		return m.MemberName
	}
	return ""
}

func (m *GuildStageDamageItem) GetLevel() int32 {
	if m != nil {
		return m.Level
	}
	return 0
}

func (m *GuildStageDamageItem) GetHead() int32 {
	if m != nil {
		return m.Head
	}
	return 0
}

func (m *GuildStageDamageItem) GetDamage() int32 {
	if m != nil {
		return m.Damage
	}
	return 0
}

type S2CGuildStageRankListResponse struct {
	BossId  int32                   `protobuf:"varint,1,opt,name=BossId" json:"BossId,omitempty"`
	DmgList []*GuildStageDamageItem `protobuf:"bytes,2,rep,name=DmgList" json:"DmgList,omitempty"`
}

func (m *S2CGuildStageRankListResponse) Reset()                    { *m = S2CGuildStageRankListResponse{} }
func (m *S2CGuildStageRankListResponse) String() string            { return proto.CompactTextString(m) }
func (*S2CGuildStageRankListResponse) ProtoMessage()               {}
func (*S2CGuildStageRankListResponse) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{278} }

func (m *S2CGuildStageRankListResponse) GetBossId() int32 {
	if m != nil {
		return m.BossId
	}
	return 0
}

func (m *S2CGuildStageRankListResponse) GetDmgList() []*GuildStageDamageItem {
	if m != nil {
		return m.DmgList
	}
	return nil
}

// 公会副本玩家复活
type C2SGuildStagePlayerRespawnRequest struct {
}

func (m *C2SGuildStagePlayerRespawnRequest) Reset()         { *m = C2SGuildStagePlayerRespawnRequest{} }
func (m *C2SGuildStagePlayerRespawnRequest) String() string { return proto.CompactTextString(m) }
func (*C2SGuildStagePlayerRespawnRequest) ProtoMessage()    {}
func (*C2SGuildStagePlayerRespawnRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor0, []int{279}
}

type S2CGuildStagePlayerRespawnResponse struct {
	RemainRespawnNum int32 `protobuf:"varint,1,opt,name=RemainRespawnNum" json:"RemainRespawnNum,omitempty"`
	CostDiamond      int32 `protobuf:"varint,2,opt,name=CostDiamond" json:"CostDiamond,omitempty"`
	NextCost         int32 `protobuf:"varint,3,opt,name=NextCost" json:"NextCost,omitempty"`
}

func (m *S2CGuildStagePlayerRespawnResponse) Reset()         { *m = S2CGuildStagePlayerRespawnResponse{} }
func (m *S2CGuildStagePlayerRespawnResponse) String() string { return proto.CompactTextString(m) }
func (*S2CGuildStagePlayerRespawnResponse) ProtoMessage()    {}
func (*S2CGuildStagePlayerRespawnResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor0, []int{280}
}

func (m *S2CGuildStagePlayerRespawnResponse) GetRemainRespawnNum() int32 {
	if m != nil {
		return m.RemainRespawnNum
	}
	return 0
}

func (m *S2CGuildStagePlayerRespawnResponse) GetCostDiamond() int32 {
	if m != nil {
		return m.CostDiamond
	}
	return 0
}

func (m *S2CGuildStagePlayerRespawnResponse) GetNextCost() int32 {
	if m != nil {
		return m.NextCost
	}
	return 0
}

// 公会副本重置
type C2SGuildStageResetRequest struct {
}

func (m *C2SGuildStageResetRequest) Reset()                    { *m = C2SGuildStageResetRequest{} }
func (m *C2SGuildStageResetRequest) String() string            { return proto.CompactTextString(m) }
func (*C2SGuildStageResetRequest) ProtoMessage()               {}
func (*C2SGuildStageResetRequest) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{281} }

type S2CGuildStageResetResponse struct {
	NextResetRemainSeconds int32 `protobuf:"varint,1,opt,name=NextResetRemainSeconds" json:"NextResetRemainSeconds,omitempty"`
}

func (m *S2CGuildStageResetResponse) Reset()                    { *m = S2CGuildStageResetResponse{} }
func (m *S2CGuildStageResetResponse) String() string            { return proto.CompactTextString(m) }
func (*S2CGuildStageResetResponse) ProtoMessage()               {}
func (*S2CGuildStageResetResponse) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{282} }

func (m *S2CGuildStageResetResponse) GetNextResetRemainSeconds() int32 {
	if m != nil {
		return m.NextResetRemainSeconds
	}
	return 0
}

// 公会副本重置通知
type S2CGuildStageResetNotify struct {
	NextResetRemainSeconds int32 `protobuf:"varint,1,opt,name=NextResetRemainSeconds" json:"NextResetRemainSeconds,omitempty"`
}

func (m *S2CGuildStageResetNotify) Reset()                    { *m = S2CGuildStageResetNotify{} }
func (m *S2CGuildStageResetNotify) String() string            { return proto.CompactTextString(m) }
func (*S2CGuildStageResetNotify) ProtoMessage()               {}
func (*S2CGuildStageResetNotify) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{283} }

func (m *S2CGuildStageResetNotify) GetNextResetRemainSeconds() int32 {
	if m != nil {
		return m.NextResetRemainSeconds
	}
	return 0
}

// 公会副本数据自动刷新
type S2CGuildStageAutoRefreshNotify struct {
	NextRefreshRemainSeconds int32 `protobuf:"varint,1,opt,name=NextRefreshRemainSeconds" json:"NextRefreshRemainSeconds,omitempty"`
}

func (m *S2CGuildStageAutoRefreshNotify) Reset()         { *m = S2CGuildStageAutoRefreshNotify{} }
func (m *S2CGuildStageAutoRefreshNotify) String() string { return proto.CompactTextString(m) }
func (*S2CGuildStageAutoRefreshNotify) ProtoMessage()    {}
func (*S2CGuildStageAutoRefreshNotify) Descriptor() ([]byte, []int) {
	return fileDescriptor0, []int{284}
}

func (m *S2CGuildStageAutoRefreshNotify) GetNextRefreshRemainSeconds() int32 {
	if m != nil {
		return m.NextRefreshRemainSeconds
	}
	return 0
}

func init() {
	proto.RegisterType((*S2CStateNotify)(nil), "msg.client_message.S2CStateNotify")
	proto.RegisterType((*C2SHeartbeat)(nil), "msg.client_message.C2SHeartbeat")
	proto.RegisterType((*S2CHeartbeat)(nil), "msg.client_message.S2CHeartbeat")
	proto.RegisterType((*C2SDataSyncRequest)(nil), "msg.client_message.C2SDataSyncRequest")
	proto.RegisterType((*C2S_TEST_COMMAND)(nil), "msg.client_message.C2S_TEST_COMMAND")
	proto.RegisterType((*ItemInfo)(nil), "msg.client_message.ItemInfo")
	proto.RegisterType((*C2SLoginRequest)(nil), "msg.client_message.C2SLoginRequest")
	proto.RegisterType((*ServerInfo)(nil), "msg.client_message.ServerInfo")
	proto.RegisterType((*S2CLoginResponse)(nil), "msg.client_message.S2CLoginResponse")
	proto.RegisterType((*S2COtherPlaceLogin)(nil), "msg.client_message.S2COtherPlaceLogin")
	proto.RegisterType((*C2SSelectServerRequest)(nil), "msg.client_message.C2SSelectServerRequest")
	proto.RegisterType((*S2CSelectServerResponse)(nil), "msg.client_message.S2CSelectServerResponse")
	proto.RegisterType((*C2S_MSG_DATA)(nil), "msg.client_message.C2S_MSG_DATA")
	proto.RegisterType((*S2C_MSG_DATA)(nil), "msg.client_message.S2C_MSG_DATA")
	proto.RegisterType((*C2SEnterGameRequest)(nil), "msg.client_message.C2SEnterGameRequest")
	proto.RegisterType((*S2CEnterGameResponse)(nil), "msg.client_message.S2CEnterGameResponse")
	proto.RegisterType((*S2CEnterGameCompleteNotify)(nil), "msg.client_message.S2CEnterGameCompleteNotify")
	proto.RegisterType((*C2SLeaveGameRequest)(nil), "msg.client_message.C2SLeaveGameRequest")
	proto.RegisterType((*S2CLeaveGameResponse)(nil), "msg.client_message.S2CLeaveGameResponse")
	proto.RegisterType((*S2CPlayerInfoResponse)(nil), "msg.client_message.S2CPlayerInfoResponse")
	proto.RegisterType((*C2SSetTeamRequest)(nil), "msg.client_message.C2SSetTeamRequest")
	proto.RegisterType((*S2CSetTeamResponse)(nil), "msg.client_message.S2CSetTeamResponse")
	proto.RegisterType((*TeamData)(nil), "msg.client_message.TeamData")
	proto.RegisterType((*S2CTeamsResponse)(nil), "msg.client_message.S2CTeamsResponse")
	proto.RegisterType((*BattleMemberItem)(nil), "msg.client_message.BattleMemberItem")
	proto.RegisterType((*BattleFighter)(nil), "msg.client_message.BattleFighter")
	proto.RegisterType((*BattleMemberBuff)(nil), "msg.client_message.BattleMemberBuff")
	proto.RegisterType((*BattleReportItem)(nil), "msg.client_message.BattleReportItem")
	proto.RegisterType((*BattleRoundReports)(nil), "msg.client_message.BattleRoundReports")
	proto.RegisterType((*C2SBattleResultRequest)(nil), "msg.client_message.C2SBattleResultRequest")
	proto.RegisterType((*S2CBattleResultResponse)(nil), "msg.client_message.S2CBattleResultResponse")
	proto.RegisterType((*C2SBattleRecordListRequest)(nil), "msg.client_message.C2SBattleRecordListRequest")
	proto.RegisterType((*BattleRecordData)(nil), "msg.client_message.BattleRecordData")
	proto.RegisterType((*S2CBattleRecordListResponse)(nil), "msg.client_message.S2CBattleRecordListResponse")
	proto.RegisterType((*C2SBattleRecordRequest)(nil), "msg.client_message.C2SBattleRecordRequest")
	proto.RegisterType((*S2CBattleRecordResponse)(nil), "msg.client_message.S2CBattleRecordResponse")
	proto.RegisterType((*C2SBattleRecordDeleteRequest)(nil), "msg.client_message.C2SBattleRecordDeleteRequest")
	proto.RegisterType((*S2CBattleRecordDeleteResponse)(nil), "msg.client_message.S2CBattleRecordDeleteResponse")
	proto.RegisterType((*S2CBattleRandomRewardNotify)(nil), "msg.client_message.S2CBattleRandomRewardNotify")
	proto.RegisterType((*C2SCampaignDataRequest)(nil), "msg.client_message.C2SCampaignDataRequest")
	proto.RegisterType((*S2CCampaignDataResponse)(nil), "msg.client_message.S2CCampaignDataResponse")
	proto.RegisterType((*C2SCampaignHangupIncomeRequest)(nil), "msg.client_message.C2SCampaignHangupIncomeRequest")
	proto.RegisterType((*S2CCampaignHangupIncomeResponse)(nil), "msg.client_message.S2CCampaignHangupIncomeResponse")
	proto.RegisterType((*C2SBattleSetHangupCampaignRequest)(nil), "msg.client_message.C2SBattleSetHangupCampaignRequest")
	proto.RegisterType((*S2CBattleSetHangupCampaignResponse)(nil), "msg.client_message.S2CBattleSetHangupCampaignResponse")
	proto.RegisterType((*C2SItemsSyncRequest)(nil), "msg.client_message.C2SItemsSyncRequest")
	proto.RegisterType((*S2CItemsSync)(nil), "msg.client_message.S2CItemsSync")
	proto.RegisterType((*S2CItemsUpdate)(nil), "msg.client_message.S2CItemsUpdate")
	proto.RegisterType((*C2SItemFusionRequest)(nil), "msg.client_message.C2SItemFusionRequest")
	proto.RegisterType((*S2CItemFusionResponse)(nil), "msg.client_message.S2CItemFusionResponse")
	proto.RegisterType((*C2SItemSellRequest)(nil), "msg.client_message.C2SItemSellRequest")
	proto.RegisterType((*S2CItemSellResponse)(nil), "msg.client_message.S2CItemSellResponse")
	proto.RegisterType((*C2SItemEquipRequest)(nil), "msg.client_message.C2SItemEquipRequest")
	proto.RegisterType((*S2CItemEquipResponse)(nil), "msg.client_message.S2CItemEquipResponse")
	proto.RegisterType((*C2SItemUnequipRequest)(nil), "msg.client_message.C2SItemUnequipRequest")
	proto.RegisterType((*S2CItemUnequipResponse)(nil), "msg.client_message.S2CItemUnequipResponse")
	proto.RegisterType((*C2SItemUpgradeRequest)(nil), "msg.client_message.C2SItemUpgradeRequest")
	proto.RegisterType((*S2CItemUpgradeResponse)(nil), "msg.client_message.S2CItemUpgradeResponse")
	proto.RegisterType((*C2SItemOneKeyUpgradeRequest)(nil), "msg.client_message.C2SItemOneKeyUpgradeRequest")
	proto.RegisterType((*S2CItemOneKeyUpgradeResponse)(nil), "msg.client_message.S2CItemOneKeyUpgradeResponse")
	proto.RegisterType((*C2SRolesRequest)(nil), "msg.client_message.C2SRolesRequest")
	proto.RegisterType((*AttrData)(nil), "msg.client_message.AttrData")
	proto.RegisterType((*Role)(nil), "msg.client_message.Role")
	proto.RegisterType((*S2CRolesResponse)(nil), "msg.client_message.S2CRolesResponse")
	proto.RegisterType((*S2CRolesChangeNotify)(nil), "msg.client_message.S2CRolesChangeNotify")
	proto.RegisterType((*C2SRoleAttrsRequest)(nil), "msg.client_message.C2SRoleAttrsRequest")
	proto.RegisterType((*S2CRoleAttrsResponse)(nil), "msg.client_message.S2CRoleAttrsResponse")
	proto.RegisterType((*C2SRoleLevelUpRequest)(nil), "msg.client_message.C2SRoleLevelUpRequest")
	proto.RegisterType((*S2CRoleLevelUpResponse)(nil), "msg.client_message.S2CRoleLevelUpResponse")
	proto.RegisterType((*C2SRoleRankUpRequest)(nil), "msg.client_message.C2SRoleRankUpRequest")
	proto.RegisterType((*S2CRoleRankUpResponse)(nil), "msg.client_message.S2CRoleRankUpResponse")
	proto.RegisterType((*C2SRoleDecomposeRequest)(nil), "msg.client_message.C2SRoleDecomposeRequest")
	proto.RegisterType((*S2CRoleDecomposeResponse)(nil), "msg.client_message.S2CRoleDecomposeResponse")
	proto.RegisterType((*C2SRoleFusionRequest)(nil), "msg.client_message.C2SRoleFusionRequest")
	proto.RegisterType((*S2CRoleFusionResponse)(nil), "msg.client_message.S2CRoleFusionResponse")
	proto.RegisterType((*C2SRoleLockRequest)(nil), "msg.client_message.C2SRoleLockRequest")
	proto.RegisterType((*S2CRoleLockResponse)(nil), "msg.client_message.S2CRoleLockResponse")
	proto.RegisterType((*C2SRoleHandbookRequest)(nil), "msg.client_message.C2SRoleHandbookRequest")
	proto.RegisterType((*S2CRoleHandbookResponse)(nil), "msg.client_message.S2CRoleHandbookResponse")
	proto.RegisterType((*C2SRoleLeftSlotOpenRequest)(nil), "msg.client_message.C2SRoleLeftSlotOpenRequest")
	proto.RegisterType((*S2CRoleLeftSlotOpenResponse)(nil), "msg.client_message.S2CRoleLeftSlotOpenResponse")
	proto.RegisterType((*C2SRoleOneKeyEquipRequest)(nil), "msg.client_message.C2SRoleOneKeyEquipRequest")
	proto.RegisterType((*S2CRoleOneKeyEquipResponse)(nil), "msg.client_message.S2CRoleOneKeyEquipResponse")
	proto.RegisterType((*C2SRoleOnekeyUnequipRequest)(nil), "msg.client_message.C2SRoleOnekeyUnequipRequest")
	proto.RegisterType((*S2CRoleOneKeyUnequipResponse)(nil), "msg.client_message.S2CRoleOneKeyUnequipResponse")
	proto.RegisterType((*C2SRoleLeftSlotResultSaveRequest)(nil), "msg.client_message.C2SRoleLeftSlotResultSaveRequest")
	proto.RegisterType((*S2CRoleLeftSlotResultSaveResponse)(nil), "msg.client_message.S2CRoleLeftSlotResultSaveResponse")
	proto.RegisterType((*C2SRoleLeftSlotResultCancelRequest)(nil), "msg.client_message.C2SRoleLeftSlotResultCancelRequest")
	proto.RegisterType((*S2CRoleLeftSlotResultCancelResponse)(nil), "msg.client_message.S2CRoleLeftSlotResultCancelResponse")
	proto.RegisterType((*C2SMailSendRequest)(nil), "msg.client_message.C2SMailSendRequest")
	proto.RegisterType((*S2CMailSendResponse)(nil), "msg.client_message.S2CMailSendResponse")
	proto.RegisterType((*C2SMailListRequest)(nil), "msg.client_message.C2SMailListRequest")
	proto.RegisterType((*MailBasicData)(nil), "msg.client_message.MailBasicData")
	proto.RegisterType((*S2CMailListResponse)(nil), "msg.client_message.S2CMailListResponse")
	proto.RegisterType((*C2SMailDetailRequest)(nil), "msg.client_message.C2SMailDetailRequest")
	proto.RegisterType((*MailDetail)(nil), "msg.client_message.MailDetail")
	proto.RegisterType((*S2CMailDetailResponse)(nil), "msg.client_message.S2CMailDetailResponse")
	proto.RegisterType((*C2SMailGetAttachedItemsRequest)(nil), "msg.client_message.C2SMailGetAttachedItemsRequest")
	proto.RegisterType((*S2CMailGetAttachedItemsResponse)(nil), "msg.client_message.S2CMailGetAttachedItemsResponse")
	proto.RegisterType((*C2SMailDeleteRequest)(nil), "msg.client_message.C2SMailDeleteRequest")
	proto.RegisterType((*S2CMailDeleteResponse)(nil), "msg.client_message.S2CMailDeleteResponse")
	proto.RegisterType((*S2CMailsNewNotify)(nil), "msg.client_message.S2CMailsNewNotify")
	proto.RegisterType((*C2STalentUpRequest)(nil), "msg.client_message.C2STalentUpRequest")
	proto.RegisterType((*S2CTalentUpResponse)(nil), "msg.client_message.S2CTalentUpResponse")
	proto.RegisterType((*C2STalentListRequest)(nil), "msg.client_message.C2STalentListRequest")
	proto.RegisterType((*TalentInfo)(nil), "msg.client_message.TalentInfo")
	proto.RegisterType((*S2CTalentListResponse)(nil), "msg.client_message.S2CTalentListResponse")
	proto.RegisterType((*C2STalentResetRequest)(nil), "msg.client_message.C2STalentResetRequest")
	proto.RegisterType((*S2CTalentResetResponse)(nil), "msg.client_message.S2CTalentResetResponse")
	proto.RegisterType((*C2STowerDataRequest)(nil), "msg.client_message.C2STowerDataRequest")
	proto.RegisterType((*S2CTowerDataResponse)(nil), "msg.client_message.S2CTowerDataResponse")
	proto.RegisterType((*C2STowerRecordsInfoRequest)(nil), "msg.client_message.C2STowerRecordsInfoRequest")
	proto.RegisterType((*TowerFightRecord)(nil), "msg.client_message.TowerFightRecord")
	proto.RegisterType((*S2CTowerRecordsInfoResponse)(nil), "msg.client_message.S2CTowerRecordsInfoResponse")
	proto.RegisterType((*C2STowerRecordDataRequest)(nil), "msg.client_message.C2STowerRecordDataRequest")
	proto.RegisterType((*S2CTowerRecordDataResponse)(nil), "msg.client_message.S2CTowerRecordDataResponse")
	proto.RegisterType((*C2STowerRankingListRequest)(nil), "msg.client_message.C2STowerRankingListRequest")
	proto.RegisterType((*TowerRankInfo)(nil), "msg.client_message.TowerRankInfo")
	proto.RegisterType((*S2CTowerRankingListResponse)(nil), "msg.client_message.S2CTowerRankingListResponse")
	proto.RegisterType((*C2SDrawDataRequest)(nil), "msg.client_message.C2SDrawDataRequest")
	proto.RegisterType((*S2CDrawDataResponse)(nil), "msg.client_message.S2CDrawDataResponse")
	proto.RegisterType((*C2SDrawCardRequest)(nil), "msg.client_message.C2SDrawCardRequest")
	proto.RegisterType((*S2CDrawCardResponse)(nil), "msg.client_message.S2CDrawCardResponse")
	proto.RegisterType((*C2STouchGoldRequest)(nil), "msg.client_message.C2STouchGoldRequest")
	proto.RegisterType((*S2CTouchGoldResponse)(nil), "msg.client_message.S2CTouchGoldResponse")
	proto.RegisterType((*C2SGoldHandDataRequest)(nil), "msg.client_message.C2SGoldHandDataRequest")
	proto.RegisterType((*S2CGoldHandDataResponse)(nil), "msg.client_message.S2CGoldHandDataResponse")
	proto.RegisterType((*C2SShopDataRequest)(nil), "msg.client_message.C2SShopDataRequest")
	proto.RegisterType((*ShopItem)(nil), "msg.client_message.ShopItem")
	proto.RegisterType((*S2CShopDataResponse)(nil), "msg.client_message.S2CShopDataResponse")
	proto.RegisterType((*C2SShopBuyItemRequest)(nil), "msg.client_message.C2SShopBuyItemRequest")
	proto.RegisterType((*S2CShopBuyItemResponse)(nil), "msg.client_message.S2CShopBuyItemResponse")
	proto.RegisterType((*C2SShopRefreshRequest)(nil), "msg.client_message.C2SShopRefreshRequest")
	proto.RegisterType((*S2CShopRefreshResponse)(nil), "msg.client_message.S2CShopRefreshResponse")
	proto.RegisterType((*S2CShopAutoRefreshNotify)(nil), "msg.client_message.S2CShopAutoRefreshNotify")
	proto.RegisterType((*RankItemInfo)(nil), "msg.client_message.RankItemInfo")
	proto.RegisterType((*C2SRankListRequest)(nil), "msg.client_message.C2SRankListRequest")
	proto.RegisterType((*S2CRankListResponse)(nil), "msg.client_message.S2CRankListResponse")
	proto.RegisterType((*C2SArenaDataRequest)(nil), "msg.client_message.C2SArenaDataRequest")
	proto.RegisterType((*S2CArenaDataResponse)(nil), "msg.client_message.S2CArenaDataResponse")
	proto.RegisterType((*C2SArenaPlayerDefenseTeamRequest)(nil), "msg.client_message.C2SArenaPlayerDefenseTeamRequest")
	proto.RegisterType((*PlayerTeamRole)(nil), "msg.client_message.PlayerTeamRole")
	proto.RegisterType((*S2CArenaPlayerDefenseTeamResponse)(nil), "msg.client_message.S2CArenaPlayerDefenseTeamResponse")
	proto.RegisterType((*C2SArenaMatchPlayerRequest)(nil), "msg.client_message.C2SArenaMatchPlayerRequest")
	proto.RegisterType((*S2CArenaMatchPlayerResponse)(nil), "msg.client_message.S2CArenaMatchPlayerResponse")
	proto.RegisterType((*S2CArenaGradeRewardNotify)(nil), "msg.client_message.S2CArenaGradeRewardNotify")
	proto.RegisterType((*C2SActiveStageDataRequest)(nil), "msg.client_message.C2SActiveStageDataRequest")
	proto.RegisterType((*ActiveStageData)(nil), "msg.client_message.ActiveStageData")
	proto.RegisterType((*S2CActiveStageDataResponse)(nil), "msg.client_message.S2CActiveStageDataResponse")
	proto.RegisterType((*C2SActiveStageBuyChallengeNumRequest)(nil), "msg.client_message.C2SActiveStageBuyChallengeNumRequest")
	proto.RegisterType((*S2CActiveStageBuyChallengeNumResponse)(nil), "msg.client_message.S2CActiveStageBuyChallengeNumResponse")
	proto.RegisterType((*S2CActiveStageRefreshNotify)(nil), "msg.client_message.S2CActiveStageRefreshNotify")
	proto.RegisterType((*C2SActiveStageAssistRoleListRequest)(nil), "msg.client_message.C2SActiveStageAssistRoleListRequest")
	proto.RegisterType((*S2CActiveStageAssistRoleListResponse)(nil), "msg.client_message.S2CActiveStageAssistRoleListResponse")
	proto.RegisterType((*PlayerInfo)(nil), "msg.client_message.PlayerInfo")
	proto.RegisterType((*FriendInfo)(nil), "msg.client_message.FriendInfo")
	proto.RegisterType((*C2SFriendRecommendRequest)(nil), "msg.client_message.C2SFriendRecommendRequest")
	proto.RegisterType((*S2CFriendRecommendResponse)(nil), "msg.client_message.S2CFriendRecommendResponse")
	proto.RegisterType((*C2SFriendListRequest)(nil), "msg.client_message.C2SFriendListRequest")
	proto.RegisterType((*S2CFriendListResponse)(nil), "msg.client_message.S2CFriendListResponse")
	proto.RegisterType((*C2SFriendAskRequest)(nil), "msg.client_message.C2SFriendAskRequest")
	proto.RegisterType((*S2CFriendAskResponse)(nil), "msg.client_message.S2CFriendAskResponse")
	proto.RegisterType((*C2SFriendAskPlayerListRequest)(nil), "msg.client_message.C2SFriendAskPlayerListRequest")
	proto.RegisterType((*S2CFriendAskPlayerListResponse)(nil), "msg.client_message.S2CFriendAskPlayerListResponse")
	proto.RegisterType((*S2CFriendAskPlayerListAddNotify)(nil), "msg.client_message.S2CFriendAskPlayerListAddNotify")
	proto.RegisterType((*C2SFriendAgreeRequest)(nil), "msg.client_message.C2SFriendAgreeRequest")
	proto.RegisterType((*S2CFriendAgreeResponse)(nil), "msg.client_message.S2CFriendAgreeResponse")
	proto.RegisterType((*S2CFriendListAddNotify)(nil), "msg.client_message.S2CFriendListAddNotify")
	proto.RegisterType((*C2SFriendRefuseRequest)(nil), "msg.client_message.C2SFriendRefuseRequest")
	proto.RegisterType((*S2CFriendRefuseResponse)(nil), "msg.client_message.S2CFriendRefuseResponse")
	proto.RegisterType((*C2SFriendRemoveRequest)(nil), "msg.client_message.C2SFriendRemoveRequest")
	proto.RegisterType((*S2CFriendRemoveResponse)(nil), "msg.client_message.S2CFriendRemoveResponse")
	proto.RegisterType((*C2SFriendGivePointsRequest)(nil), "msg.client_message.C2SFriendGivePointsRequest")
	proto.RegisterType((*S2CFriendGivePointsResponse)(nil), "msg.client_message.S2CFriendGivePointsResponse")
	proto.RegisterType((*C2SFriendGetPointsRequest)(nil), "msg.client_message.C2SFriendGetPointsRequest")
	proto.RegisterType((*S2CFriendGetPointsResponse)(nil), "msg.client_message.S2CFriendGetPointsResponse")
	proto.RegisterType((*C2SFriendSearchBossRequest)(nil), "msg.client_message.C2SFriendSearchBossRequest")
	proto.RegisterType((*S2CFriendSearchBossResponse)(nil), "msg.client_message.S2CFriendSearchBossResponse")
	proto.RegisterType((*C2SFriendsBossListRequest)(nil), "msg.client_message.C2SFriendsBossListRequest")
	proto.RegisterType((*FriendBossInfo)(nil), "msg.client_message.FriendBossInfo")
	proto.RegisterType((*S2CFriendsBossListResponse)(nil), "msg.client_message.S2CFriendsBossListResponse")
	proto.RegisterType((*C2SFriendBossAttackListRequest)(nil), "msg.client_message.C2SFriendBossAttackListRequest")
	proto.RegisterType((*S2CFriendBossAttackListResponse)(nil), "msg.client_message.S2CFriendBossAttackListResponse")
	proto.RegisterType((*C2SFriendDataRequest)(nil), "msg.client_message.C2SFriendDataRequest")
	proto.RegisterType((*S2CFriendDataResponse)(nil), "msg.client_message.S2CFriendDataResponse")
	proto.RegisterType((*C2SFriendSetAssistRoleRequest)(nil), "msg.client_message.C2SFriendSetAssistRoleRequest")
	proto.RegisterType((*S2CFriendSetAssistRoleResponse)(nil), "msg.client_message.S2CFriendSetAssistRoleResponse")
	proto.RegisterType((*C2SFriendGiveAndGetPointsRequest)(nil), "msg.client_message.C2SFriendGiveAndGetPointsRequest")
	proto.RegisterType((*C2SFriendGetAssistPointsRequest)(nil), "msg.client_message.C2SFriendGetAssistPointsRequest")
	proto.RegisterType((*S2CFriendGetAssistPointsResponse)(nil), "msg.client_message.S2CFriendGetAssistPointsResponse")
	proto.RegisterType((*TaskData)(nil), "msg.client_message.TaskData")
	proto.RegisterType((*C2STaskDataRequest)(nil), "msg.client_message.C2STaskDataRequest")
	proto.RegisterType((*S2CTaskDataResponse)(nil), "msg.client_message.S2CTaskDataResponse")
	proto.RegisterType((*S2CTaskValueNotify)(nil), "msg.client_message.S2CTaskValueNotify")
	proto.RegisterType((*C2STaskRewardRequest)(nil), "msg.client_message.C2STaskRewardRequest")
	proto.RegisterType((*S2CTaskRewardResponse)(nil), "msg.client_message.S2CTaskRewardResponse")
	proto.RegisterType((*ExploreData)(nil), "msg.client_message.ExploreData")
	proto.RegisterType((*C2SExploreDataRequest)(nil), "msg.client_message.C2SExploreDataRequest")
	proto.RegisterType((*S2CExploreDataResponse)(nil), "msg.client_message.S2CExploreDataResponse")
	proto.RegisterType((*C2SExploreSelRoleRequest)(nil), "msg.client_message.C2SExploreSelRoleRequest")
	proto.RegisterType((*S2CExploreSelRoleResponse)(nil), "msg.client_message.S2CExploreSelRoleResponse")
	proto.RegisterType((*C2SExploreStartRequest)(nil), "msg.client_message.C2SExploreStartRequest")
	proto.RegisterType((*S2CExploreStartResponse)(nil), "msg.client_message.S2CExploreStartResponse")
	proto.RegisterType((*C2SExploreSpeedupRequest)(nil), "msg.client_message.C2SExploreSpeedupRequest")
	proto.RegisterType((*S2CExploreSpeedupResponse)(nil), "msg.client_message.S2CExploreSpeedupResponse")
	proto.RegisterType((*C2SExploreRefreshRequest)(nil), "msg.client_message.C2SExploreRefreshRequest")
	proto.RegisterType((*S2CExploreRefreshResponse)(nil), "msg.client_message.S2CExploreRefreshResponse")
	proto.RegisterType((*S2CExploreAutoRefreshNotify)(nil), "msg.client_message.S2CExploreAutoRefreshNotify")
	proto.RegisterType((*C2SExploreLockRequest)(nil), "msg.client_message.C2SExploreLockRequest")
	proto.RegisterType((*S2CExploreLockResponse)(nil), "msg.client_message.S2CExploreLockResponse")
	proto.RegisterType((*C2SExploreGetRewardRequest)(nil), "msg.client_message.C2SExploreGetRewardRequest")
	proto.RegisterType((*S2CExploreGetRewardResponse)(nil), "msg.client_message.S2CExploreGetRewardResponse")
	proto.RegisterType((*S2CExploreStoryNewNotify)(nil), "msg.client_message.S2CExploreStoryNewNotify")
	proto.RegisterType((*S2CExploreRemoveNotify)(nil), "msg.client_message.S2CExploreRemoveNotify")
	proto.RegisterType((*C2SChatRequest)(nil), "msg.client_message.C2SChatRequest")
	proto.RegisterType((*S2CChatResponse)(nil), "msg.client_message.S2CChatResponse")
	proto.RegisterType((*C2SChatMsgPullRequest)(nil), "msg.client_message.C2SChatMsgPullRequest")
	proto.RegisterType((*ChatItem)(nil), "msg.client_message.ChatItem")
	proto.RegisterType((*S2CChatMsgPullResponse)(nil), "msg.client_message.S2CChatMsgPullResponse")
	proto.RegisterType((*C2SGuildDataRequest)(nil), "msg.client_message.C2SGuildDataRequest")
	proto.RegisterType((*GuildInfo)(nil), "msg.client_message.GuildInfo")
	proto.RegisterType((*S2CGuildDataResponse)(nil), "msg.client_message.S2CGuildDataResponse")
	proto.RegisterType((*C2SGuildSearchRequest)(nil), "msg.client_message.C2SGuildSearchRequest")
	proto.RegisterType((*GuildBaseInfo)(nil), "msg.client_message.GuildBaseInfo")
	proto.RegisterType((*S2CGuildSearchResponse)(nil), "msg.client_message.S2CGuildSearchResponse")
	proto.RegisterType((*C2SGuildRecommendRequest)(nil), "msg.client_message.C2SGuildRecommendRequest")
	proto.RegisterType((*S2CGuildRecommendResponse)(nil), "msg.client_message.S2CGuildRecommendResponse")
	proto.RegisterType((*C2SGuildCreateRequest)(nil), "msg.client_message.C2SGuildCreateRequest")
	proto.RegisterType((*S2CGuildCreateResponse)(nil), "msg.client_message.S2CGuildCreateResponse")
	proto.RegisterType((*C2SGuildDismissRequest)(nil), "msg.client_message.C2SGuildDismissRequest")
	proto.RegisterType((*S2CGuildDismissResponse)(nil), "msg.client_message.S2CGuildDismissResponse")
	proto.RegisterType((*C2SGuildCancelDismissRequest)(nil), "msg.client_message.C2SGuildCancelDismissRequest")
	proto.RegisterType((*S2CGuildCancelDismissResponse)(nil), "msg.client_message.S2CGuildCancelDismissResponse")
	proto.RegisterType((*S2CGuildDeleteNotify)(nil), "msg.client_message.S2CGuildDeleteNotify")
	proto.RegisterType((*C2SGuildInfoModifyRequest)(nil), "msg.client_message.C2SGuildInfoModifyRequest")
	proto.RegisterType((*S2CGuildInfoModifyResponse)(nil), "msg.client_message.S2CGuildInfoModifyResponse")
	proto.RegisterType((*C2SGuildAnouncementRequest)(nil), "msg.client_message.C2SGuildAnouncementRequest")
	proto.RegisterType((*S2CGuildAnouncementResponse)(nil), "msg.client_message.S2CGuildAnouncementResponse")
	proto.RegisterType((*C2SGuildMembersRequest)(nil), "msg.client_message.C2SGuildMembersRequest")
	proto.RegisterType((*GuildMember)(nil), "msg.client_message.GuildMember")
	proto.RegisterType((*S2CGuildMemebersResponse)(nil), "msg.client_message.S2CGuildMemebersResponse")
	proto.RegisterType((*C2SGuildAskListRequest)(nil), "msg.client_message.C2SGuildAskListRequest")
	proto.RegisterType((*S2CGuildAskListResponse)(nil), "msg.client_message.S2CGuildAskListResponse")
	proto.RegisterType((*C2SGuildAskJoinRequest)(nil), "msg.client_message.C2SGuildAskJoinRequest")
	proto.RegisterType((*S2CGuildAskJoinResponse)(nil), "msg.client_message.S2CGuildAskJoinResponse")
	proto.RegisterType((*C2SGuildAgreeJoinRequest)(nil), "msg.client_message.C2SGuildAgreeJoinRequest")
	proto.RegisterType((*S2CGuildAgreeJoinResponse)(nil), "msg.client_message.S2CGuildAgreeJoinResponse")
	proto.RegisterType((*S2CGuildAgreeJoinNotify)(nil), "msg.client_message.S2CGuildAgreeJoinNotify")
	proto.RegisterType((*C2SGuildQuitRequest)(nil), "msg.client_message.C2SGuildQuitRequest")
	proto.RegisterType((*S2CGuildQuitResponse)(nil), "msg.client_message.S2CGuildQuitResponse")
	proto.RegisterType((*C2SGuildLogsRequest)(nil), "msg.client_message.C2SGuildLogsRequest")
	proto.RegisterType((*GuildLog)(nil), "msg.client_message.GuildLog")
	proto.RegisterType((*S2CGuildLogsResponse)(nil), "msg.client_message.S2CGuildLogsResponse")
	proto.RegisterType((*C2SGuildSignInRequest)(nil), "msg.client_message.C2SGuildSignInRequest")
	proto.RegisterType((*S2CGuildSignInResponse)(nil), "msg.client_message.S2CGuildSignInResponse")
	proto.RegisterType((*C2SGuildSetOfficerRequest)(nil), "msg.client_message.C2SGuildSetOfficerRequest")
	proto.RegisterType((*S2CGuildSetOfficerResponse)(nil), "msg.client_message.S2CGuildSetOfficerResponse")
	proto.RegisterType((*S2CGuildSetOfficerNotify)(nil), "msg.client_message.S2CGuildSetOfficerNotify")
	proto.RegisterType((*C2SGuildKickMemberRequest)(nil), "msg.client_message.C2SGuildKickMemberRequest")
	proto.RegisterType((*S2CGuildKickMemberResponse)(nil), "msg.client_message.S2CGuildKickMemberResponse")
	proto.RegisterType((*S2CGuildKickMemberNotify)(nil), "msg.client_message.S2CGuildKickMemberNotify")
	proto.RegisterType((*C2SGuildChangePresidentRequest)(nil), "msg.client_message.C2SGuildChangePresidentRequest")
	proto.RegisterType((*S2CGuildChangePresidentResponse)(nil), "msg.client_message.S2CGuildChangePresidentResponse")
	proto.RegisterType((*S2CGuildChangePresidentNotify)(nil), "msg.client_message.S2CGuildChangePresidentNotify")
	proto.RegisterType((*C2SGuildRecruitRequest)(nil), "msg.client_message.C2SGuildRecruitRequest")
	proto.RegisterType((*S2CGuildRecruitResponse)(nil), "msg.client_message.S2CGuildRecruitResponse")
	proto.RegisterType((*C2SGuildAskDonateRequest)(nil), "msg.client_message.C2SGuildAskDonateRequest")
	proto.RegisterType((*S2CGuildAskDonateResponse)(nil), "msg.client_message.S2CGuildAskDonateResponse")
	proto.RegisterType((*C2SGuildDonateRequest)(nil), "msg.client_message.C2SGuildDonateRequest")
	proto.RegisterType((*S2CGuildDonateResponse)(nil), "msg.client_message.S2CGuildDonateResponse")
	proto.RegisterType((*S2CGuildDonateItemNotify)(nil), "msg.client_message.S2CGuildDonateItemNotify")
	proto.RegisterType((*C2SGuildDonateListRequest)(nil), "msg.client_message.C2SGuildDonateListRequest")
	proto.RegisterType((*GuildAskDonateInfo)(nil), "msg.client_message.GuildAskDonateInfo")
	proto.RegisterType((*S2CGuildDonateListResponse)(nil), "msg.client_message.S2CGuildDonateListResponse")
	proto.RegisterType((*C2SGuildStageDataRequest)(nil), "msg.client_message.C2SGuildStageDataRequest")
	proto.RegisterType((*S2CGuildStageDataResponse)(nil), "msg.client_message.S2CGuildStageDataResponse")
	proto.RegisterType((*C2SGuildStageRankListRequest)(nil), "msg.client_message.C2SGuildStageRankListRequest")
	proto.RegisterType((*GuildStageDamageItem)(nil), "msg.client_message.GuildStageDamageItem")
	proto.RegisterType((*S2CGuildStageRankListResponse)(nil), "msg.client_message.S2CGuildStageRankListResponse")
	proto.RegisterType((*C2SGuildStagePlayerRespawnRequest)(nil), "msg.client_message.C2SGuildStagePlayerRespawnRequest")
	proto.RegisterType((*S2CGuildStagePlayerRespawnResponse)(nil), "msg.client_message.S2CGuildStagePlayerRespawnResponse")
	proto.RegisterType((*C2SGuildStageResetRequest)(nil), "msg.client_message.C2SGuildStageResetRequest")
	proto.RegisterType((*S2CGuildStageResetResponse)(nil), "msg.client_message.S2CGuildStageResetResponse")
	proto.RegisterType((*S2CGuildStageResetNotify)(nil), "msg.client_message.S2CGuildStageResetNotify")
	proto.RegisterType((*S2CGuildStageAutoRefreshNotify)(nil), "msg.client_message.S2CGuildStageAutoRefreshNotify")
	proto.RegisterEnum("msg.client_message.E_ERR", E_ERR_name, E_ERR_value)
	proto.RegisterEnum("msg.client_message.MODULE", MODULE_name, MODULE_value)
}

func init() { proto.RegisterFile("client_message.proto", fileDescriptor0) }

var fileDescriptor0 = []byte{
	// 10011 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x09, 0x6e, 0x88, 0x02, 0xff, 0xcc, 0x7d, 0x6b, 0x98, 0x1c, 0xc7,
	0x71, 0x58, 0x76, 0xef, 0x81, 0xbb, 0x06, 0x01, 0x0c, 0x87, 0x20, 0x78, 0x3a, 0x82, 0x20, 0x39,
	0xa4, 0x68, 0x88, 0xa6, 0x8f, 0xe4, 0xf1, 0x05, 0xf1, 0x25, 0xce, 0xed, 0xce, 0xdd, 0xad, 0xb0,
	0x2f, 0xce, 0xcc, 0x01, 0x84, 0x22, 0x65, 0x33, 0xdc, 0x1d, 0x1c, 0xd6, 0xb7, 0x8f, 0xd3, 0xce,
	0x1c, 0x80, 0x4b, 0xf4, 0x25, 0x16, 0xe5, 0x58, 0xfe, 0xf8, 0x29, 0xb4, 0xc2, 0xc4, 0xb1, 0xc3,
	0xf8, 0x15, 0x38, 0xb2, 0x45, 0xfa, 0x21, 0x53, 0xa6, 0x1f, 0x89, 0x69, 0xc9, 0xdf, 0x17, 0xe4,
	0x25, 0x23, 0x89, 0x93, 0x50, 0x71, 0xf2, 0xe9, 0x4f, 0x62, 0x7f, 0x4a, 0xe2, 0x30, 0xd6, 0x23,
	0xb2, 0x65, 0x45, 0x94, 0xa8, 0x7c, 0x5d, 0xdd, 0x3d, 0x5d, 0x3d, 0xdb, 0xb3, 0xbb, 0x07, 0xf0,
	0x47, 0xee, 0xd7, 0x76, 0x75, 0x55, 0x75, 0x75, 0x75, 0x75, 0x55, 0xf5, 0x6b, 0x8e, 0x1c, 0x6e,
	0x76, 0xda, 0x61, 0x2f, 0x6e, 0x74, 0xc3, 0x28, 0x0a, 0x36, 0xc3, 0xa5, 0xed, 0x41, 0x3f, 0xee,
	0x9b, 0x66, 0x37, 0xda, 0x5c, 0x52, 0x6b, 0xac, 0x32, 0x39, 0xe8, 0x2d, 0x17, 0xbc, 0x38, 0x88,
	0xc3, 0x6a, 0x3f, 0x6e, 0x9f, 0xdd, 0x35, 0x8f, 0x90, 0x59, 0x28, 0x46, 0x0b, 0xb9, 0xdb, 0xa6,
	0x8e, 0xcf, 0xb8, 0xbc, 0x64, 0x5a, 0xe4, 0xba, 0x42, 0xd0, 0x6b, 0x86, 0x1d, 0x5e, 0x9b, 0x87,
	0x5a, 0x05, 0x66, 0x1d, 0x24, 0xd7, 0x15, 0x96, 0xbd, 0xf5, 0x30, 0x18, 0xc4, 0xcf, 0x86, 0x41,
	0x6c, 0x1d, 0x27, 0xd7, 0x79, 0xcb, 0x85, 0xa4, 0x6c, 0x2e, 0x90, 0x7d, 0xde, 0x6e, 0xe4, 0xb7,
	0xbb, 0xe1, 0x42, 0xee, 0xb6, 0xdc, 0xf1, 0x19, 0x57, 0x14, 0xad, 0x1f, 0xcd, 0x11, 0xb3, 0xb0,
	0xec, 0x15, 0x83, 0x38, 0xf0, 0x76, 0x7b, 0x4d, 0x37, 0xfc, 0xf0, 0x4e, 0x18, 0xc5, 0xa6, 0x49,
	0xa6, 0x57, 0x82, 0x88, 0x61, 0xcf, 0xb9, 0xf0, 0xdb, 0x3c, 0x4c, 0x66, 0x4a, 0x71, 0xd8, 0xa5,
	0x12, 0x50, 0x20, 0x2b, 0x50, 0xa8, 0xdb, 0xef, 0x84, 0xd1, 0xc2, 0x14, 0x83, 0x42, 0x81, 0x42,
	0xfd, 0x30, 0xe8, 0x46, 0x0b, 0xd3, 0x0c, 0x0a, 0x05, 0xf3, 0x28, 0x99, 0x2f, 0x04, 0xdd, 0xed,
	0xa0, 0xbd, 0xd9, 0x8b, 0x16, 0x66, 0xa0, 0x46, 0x02, 0xac, 0x13, 0xc4, 0x28, 0x2c, 0x7b, 0x0d,
	0xdf, 0xf1, 0xfc, 0x46, 0xa1, 0x56, 0xa9, 0xd8, 0xd5, 0xa2, 0x69, 0x90, 0xa9, 0x66, 0xb7, 0x05,
	0x62, 0xcc, 0xbb, 0xf4, 0x27, 0x95, 0x2c, 0x18, 0x6c, 0x32, 0x35, 0xcc, 0xbb, 0xf0, 0xdb, 0x5a,
	0x21, 0x73, 0x54, 0x98, 0x52, 0xef, 0x6c, 0x9f, 0xb6, 0x41, 0x7f, 0x17, 0xce, 0x6e, 0x96, 0x5a,
	0xbc, 0xb3, 0x12, 0x40, 0x15, 0x41, 0x0b, 0xd5, 0x9d, 0x2e, 0xf4, 0x62, 0xc6, 0x15, 0x45, 0xeb,
	0x0c, 0x39, 0x54, 0x58, 0xf6, 0xca, 0xfd, 0xcd, 0x76, 0x4f, 0x28, 0xc1, 0x20, 0x53, 0x76, 0xb3,
	0x29, 0x1a, 0xb7, 0x9b, 0x4d, 0x73, 0x91, 0xcc, 0xd5, 0x83, 0x28, 0xba, 0xd0, 0x1f, 0xb4, 0x80,
	0x7e, 0xde, 0x4d, 0xca, 0x94, 0x75, 0xe1, 0x5c, 0xd0, 0xeb, 0x85, 0x1d, 0x50, 0xc5, 0xbc, 0x2b,
	0x8a, 0xd6, 0x53, 0x84, 0x78, 0xe1, 0xe0, 0x7c, 0x38, 0x00, 0x01, 0x0f, 0x92, 0x7c, 0x22, 0x59,
	0xbe, 0x04, 0x1d, 0xaa, 0x06, 0xdd, 0x90, 0xf3, 0x83, 0xdf, 0x80, 0x53, 0xe7, 0x6c, 0xf2, 0xa5,
	0xba, 0x15, 0x13, 0xc3, 0x5b, 0x2e, 0x70, 0xe1, 0xa2, 0xed, 0x7e, 0x2f, 0x0a, 0x35, 0xd2, 0x51,
	0xa5, 0xf7, 0xb7, 0xc2, 0x1e, 0x67, 0xc5, 0x0a, 0xe6, 0x09, 0xb2, 0x8f, 0xb5, 0x4e, 0x87, 0x68,
	0xea, 0xf8, 0xfe, 0xe5, 0x63, 0x4b, 0xc3, 0xf6, 0xb8, 0x24, 0x05, 0x74, 0x05, 0xba, 0x75, 0x98,
	0x98, 0xde, 0x72, 0xa1, 0x16, 0x9f, 0x0b, 0x07, 0xf5, 0x4e, 0xd0, 0x0c, 0xa1, 0x7d, 0xeb, 0x83,
	0xe4, 0x48, 0x61, 0xd9, 0xf3, 0xc2, 0x4e, 0xd8, 0x8c, 0x19, 0x66, 0xb6, 0xbe, 0xf4, 0x12, 0x2d,
	0x92, 0x39, 0xde, 0x5c, 0x0b, 0xfa, 0x38, 0xe3, 0x26, 0x65, 0xeb, 0x69, 0x72, 0x13, 0x9d, 0x17,
	0x0a, 0xf7, 0x3d, 0x76, 0x38, 0xad, 0xbc, 0x1e, 0x4c, 0x8e, 0x46, 0xc5, 0x5b, 0x6b, 0x14, 0x6d,
	0xdf, 0x86, 0x41, 0xec, 0x04, 0xbb, 0xd0, 0x3c, 0x1b, 0x86, 0xa4, 0x9c, 0xc1, 0x71, 0x81, 0xec,
	0xab, 0x44, 0x9b, 0x85, 0x7e, 0x2b, 0xe4, 0xf2, 0x8a, 0x22, 0x1d, 0x3c, 0x3a, 0x75, 0xc0, 0xcc,
	0xaf, 0x73, 0xe1, 0xb7, 0xf5, 0x11, 0x98, 0x7c, 0xb2, 0xbd, 0xa3, 0x64, 0xde, 0x19, 0x0c, 0xfa,
	0x03, 0xa0, 0xe7, 0x16, 0x99, 0x00, 0xa8, 0x34, 0x50, 0xa8, 0x44, 0x9b, 0xc2, 0xa4, 0x44, 0x39,
	0xe1, 0x3e, 0x25, 0xb9, 0x9b, 0xc7, 0x08, 0x29, 0xec, 0x0c, 0x68, 0x35, 0x35, 0xe2, 0x69, 0x60,
	0x87, 0x20, 0xd6, 0x13, 0xe4, 0x86, 0xc2, 0xb2, 0xe7, 0xf4, 0xe2, 0x70, 0xb0, 0x16, 0x74, 0xc3,
	0x3d, 0x8e, 0x8d, 0x55, 0x24, 0x87, 0xbd, 0xe5, 0x02, 0x22, 0xcf, 0x54, 0x3e, 0x56, 0x63, 0x5e,
	0x55, 0xa3, 0x75, 0x94, 0x2c, 0x62, 0x2e, 0x85, 0x7e, 0x77, 0xbb, 0x13, 0x0a, 0x4f, 0x67, 0xdd,
	0x08, 0x22, 0x96, 0xc3, 0xe0, 0x7c, 0x88, 0x44, 0xb4, 0x8e, 0x40, 0xd3, 0x08, 0xcc, 0x9a, 0xb6,
	0xbe, 0x9c, 0x23, 0x37, 0x7a, 0xcb, 0x05, 0xce, 0x9c, 0x5a, 0xa8, 0x10, 0xea, 0x30, 0x99, 0x29,
	0x87, 0xe7, 0xc3, 0x0e, 0xd7, 0x2a, 0x2b, 0x50, 0x51, 0x9d, 0x8b, 0xdb, 0x5c, 0x26, 0xfa, 0x93,
	0xea, 0x71, 0xad, 0xdf, 0x11, 0xc6, 0x06, 0xbf, 0xe9, 0x98, 0x16, 0xdb, 0x41, 0xb7, 0xdf, 0x6b,
	0x71, 0x25, 0x8a, 0x22, 0xc5, 0x2e, 0x35, 0xfb, 0x3d, 0x70, 0x50, 0xf3, 0x2e, 0xfc, 0xa6, 0x9d,
	0x3d, 0xd5, 0xde, 0x66, 0x8d, 0xcd, 0xb2, 0xce, 0x8a, 0x72, 0x32, 0x81, 0xf7, 0xa1, 0x09, 0x8c,
	0x1c, 0xee, 0x9c, 0xe2, 0x70, 0x69, 0xcd, 0xda, 0x4e, 0xbb, 0xd3, 0x2a, 0xb5, 0x16, 0xe6, 0x59,
	0x0d, 0x2f, 0x5a, 0x4f, 0x93, 0xeb, 0x61, 0x62, 0xc5, 0xd4, 0x59, 0x8a, 0x71, 0x5b, 0x24, 0x73,
	0xb4, 0xe8, 0xef, 0x6e, 0x0b, 0xdb, 0x49, 0xca, 0xe6, 0x6d, 0x64, 0x3f, 0xfd, 0x5d, 0x09, 0xbb,
	0xcf, 0xd2, 0xd9, 0xcd, 0x02, 0x03, 0x06, 0x59, 0x2e, 0xcc, 0xe0, 0x84, 0x25, 0x57, 0xdb, 0xb5,
	0xf1, 0x5c, 0x67, 0xd4, 0x60, 0x8c, 0xd7, 0xc6, 0x69, 0x15, 0xbc, 0x1a, 0x84, 0x86, 0x44, 0xb6,
	0x65, 0x11, 0x38, 0x72, 0xe0, 0xab, 0x8e, 0xea, 0x7c, 0x95, 0x68, 0x9e, 0x87, 0x15, 0xeb, 0x0b,
	0x39, 0x62, 0xac, 0x04, 0x71, 0xdc, 0x09, 0x19, 0x67, 0xea, 0xd2, 0x87, 0xdc, 0xac, 0x41, 0xa6,
	0xea, 0xfd, 0x48, 0x58, 0x45, 0xbd, 0x1f, 0x51, 0x8c, 0xf5, 0x3a, 0xb7, 0x89, 0xfc, 0x7a, 0x9d,
	0x5a, 0x53, 0x25, 0xb8, 0xb8, 0x5e, 0xe7, 0xf6, 0xc0, 0x0a, 0x34, 0x2c, 0x3b, 0xbd, 0x70, 0xb0,
	0xb9, 0x0b, 0xf6, 0x30, 0xe3, 0xf2, 0x12, 0x1d, 0x47, 0x3f, 0x78, 0xb6, 0x13, 0x96, 0x5a, 0xdc,
	0x20, 0x44, 0x91, 0xda, 0x83, 0x1b, 0xf4, 0xb6, 0xc0, 0x1e, 0x66, 0x5c, 0xf8, 0x2d, 0x2d, 0x75,
	0x0e, 0x5b, 0xaa, 0x49, 0xa6, 0xbd, 0x76, 0x2b, 0xe4, 0x86, 0x00, 0xbf, 0xad, 0x1f, 0xcf, 0x93,
	0x03, 0xac, 0x33, 0xab, 0xed, 0xcd, 0x73, 0x71, 0x38, 0x10, 0x92, 0xe7, 0xd2, 0x92, 0xe7, 0x87,
	0x25, 0x9f, 0x4a, 0x49, 0x5e, 0x0c, 0xba, 0xc1, 0x66, 0xc8, 0x3b, 0xc4, 0x4b, 0x99, 0x3d, 0x12,
	0xd2, 0xcc, 0x4a, 0x69, 0xa8, 0xb7, 0x29, 0x45, 0x85, 0x41, 0x3b, 0x6e, 0x37, 0x83, 0x0e, 0xf4,
	0x68, 0xce, 0x45, 0x10, 0x88, 0xa7, 0xd1, 0x4a, 0xa7, 0xdf, 0xdc, 0x82, 0x9e, 0xcd, 0xb9, 0xa2,
	0x48, 0x4d, 0xa3, 0x14, 0xd9, 0xcf, 0x46, 0xfd, 0xc1, 0xb3, 0xd0, 0xbf, 0x39, 0x37, 0x29, 0xd3,
	0x3a, 0xbb, 0x17, 0xb7, 0xc1, 0x6c, 0x08, 0x33, 0x1b, 0x51, 0x86, 0x34, 0xe8, 0x5c, 0x3b, 0xec,
	0xb4, 0x16, 0xf6, 0x33, 0xe9, 0x58, 0xc9, 0xaa, 0xab, 0x63, 0xbc, 0xb2, 0x73, 0xf6, 0x6c, 0x22,
	0x71, 0x0e, 0x49, 0x3c, 0x3c, 0xce, 0x47, 0xc8, 0x2c, 0xc5, 0x4e, 0x82, 0x0d, 0x2f, 0x59, 0x9f,
	0x9b, 0x12, 0x2c, 0xdd, 0x70, 0xbb, 0x3f, 0x88, 0xc1, 0x6c, 0x74, 0x2c, 0xe9, 0x64, 0xde, 0x6a,
	0x77, 0x3a, 0x89, 0xa3, 0x13, 0x45, 0xf3, 0x21, 0x32, 0xbd, 0x11, 0x85, 0x03, 0x60, 0xbc, 0x7f,
	0xf9, 0x76, 0x9d, 0xb1, 0x2a, 0x63, 0xe9, 0x02, 0xba, 0xf9, 0x04, 0x99, 0x5b, 0x09, 0xd7, 0xdb,
	0x31, 0x9d, 0x17, 0xd3, 0x60, 0xe7, 0x13, 0x90, 0x26, 0x24, 0x66, 0x91, 0x10, 0x6f, 0xa7, 0xdb,
	0xed, 0xf7, 0xaa, 0xdb, 0x4d, 0x9a, 0x47, 0x51, 0x06, 0x77, 0x66, 0x33, 0x90, 0x93, 0xc2, 0x45,
	0x74, 0xe6, 0x53, 0x64, 0xce, 0x6e, 0xb5, 0xa8, 0x2e, 0xa2, 0x85, 0xd9, 0xc9, 0x78, 0x50, 0x64,
	0x37, 0xa1, 0x32, 0x57, 0xc9, 0x7e, 0x37, 0xec, 0xf6, 0xcf, 0x87, 0x8c, 0xc9, 0xbe, 0x3d, 0x30,
	0xc1, 0x84, 0xcc, 0x54, 0x98, 0x64, 0xdc, 0x8a, 0x92, 0x32, 0xad, 0x5b, 0x0f, 0xa2, 0x42, 0xbf,
	0xfb, 0x6c, 0x5f, 0x98, 0x91, 0x28, 0x5b, 0x6f, 0x4e, 0x13, 0x93, 0x0f, 0x60, 0x7f, 0xa7, 0xd7,
	0x62, 0xa3, 0x08, 0xec, 0xa0, 0x4c, 0xe3, 0x23, 0x77, 0x4a, 0xa2, 0x6c, 0x3e, 0x49, 0xf6, 0x71,
	0x34, 0x70, 0x48, 0x23, 0xc5, 0x95, 0x56, 0xe1, 0x0a, 0xa2, 0x74, 0x97, 0xa7, 0xae, 0xb6, 0xcb,
	0x27, 0xc9, 0x21, 0x9a, 0x1d, 0x6e, 0x86, 0x2d, 0x3e, 0xbc, 0x7b, 0x30, 0x84, 0x34, 0xa5, 0x19,
	0x92, 0x43, 0x95, 0x5d, 0xee, 0x54, 0x93, 0x99, 0x4d, 0x99, 0x3d, 0x36, 0xa2, 0x73, 0x48, 0x63,
	0x4b, 0x29, 0x6a, 0xa7, 0x17, 0x0f, 0x76, 0xdd, 0x34, 0x4f, 0xf3, 0xc3, 0xe4, 0x06, 0x3f, 0x18,
	0x6c, 0x86, 0xb1, 0xda, 0x14, 0xb3, 0x9d, 0xf7, 0x4d, 0xd8, 0x94, 0x86, 0x03, 0x6b, 0x4e, 0xc7,
	0x7b, 0x71, 0x85, 0x1c, 0xd6, 0xc9, 0x46, 0x27, 0xf9, 0x56, 0xb8, 0x2b, 0x5c, 0xe2, 0x56, 0xb8,
	0x4b, 0x5d, 0xe0, 0xf9, 0xa0, 0xb3, 0x13, 0xf2, 0x19, 0xca, 0x0a, 0x8f, 0xe6, 0x4f, 0xe4, 0x16,
	0x57, 0xc9, 0x42, 0x56, 0xa3, 0x7b, 0xe1, 0x63, 0x5d, 0xc9, 0x43, 0xe2, 0x2b, 0x6c, 0x23, 0xda,
	0xe9, 0xc4, 0x22, 0x48, 0xdf, 0x49, 0x0e, 0xd8, 0x71, 0x1c, 0x34, 0xb7, 0x44, 0xb0, 0x63, 0x2b,
	0x38, 0x15, 0x48, 0xb1, 0x60, 0xc8, 0x52, 0x59, 0x93, 0x0a, 0x84, 0xfc, 0x8e, 0x2f, 0x89, 0x12,
	0x8f, 0x85, 0x20, 0xb4, 0x9e, 0x89, 0x00, 0xde, 0x93, 0xe7, 0x7f, 0x12, 0x42, 0xc3, 0x2e, 0x2b,
	0xd5, 0x83, 0x41, 0xd0, 0xe5, 0x2e, 0x1e, 0x83, 0xcc, 0xbb, 0xc8, 0x41, 0x3b, 0x8a, 0xda, 0x51,
	0xbc, 0x3a, 0x68, 0x87, 0xbd, 0x56, 0x12, 0xc0, 0x52, 0x50, 0xba, 0xf0, 0x64, 0x10, 0xba, 0xa4,
	0x2b, 0xb5, 0x78, 0x3c, 0x53, 0x60, 0x34, 0xb7, 0x65, 0x65, 0xea, 0x73, 0x59, 0x6c, 0x93, 0x00,
	0x48, 0xf4, 0x2f, 0x84, 0xe1, 0x36, 0x9d, 0x89, 0xf3, 0x3c, 0xd1, 0xe7, 0x65, 0xeb, 0xf3, 0x04,
	0x32, 0x7d, 0x55, 0x9d, 0x32, 0xaf, 0x2b, 0x45, 0xa7, 0xdb, 0x3d, 0xbe, 0xfc, 0x64, 0x05, 0xf3,
	0x71, 0x32, 0x5b, 0xd9, 0xa5, 0x11, 0x7f, 0xfc, 0xd4, 0x45, 0x2e, 0x8f, 0xd3, 0x50, 0xa7, 0xc9,
	0xcc, 0x00, 0x38, 0x4c, 0xed, 0xc5, 0x69, 0x4a, 0x3a, 0x73, 0x9d, 0x5c, 0x07, 0x59, 0xad, 0x70,
	0x22, 0xd3, 0x7b, 0x70, 0x22, 0x0a, 0xa5, 0xf9, 0x24, 0x99, 0x85, 0x89, 0x21, 0x1c, 0xf8, 0x5d,
	0x93, 0x4d, 0x20, 0x97, 0x53, 0x99, 0x3f, 0x28, 0x27, 0x3d, 0x8b, 0xeb, 0xc2, 0x8b, 0x3f, 0xa5,
	0x5d, 0xde, 0xe9, 0x35, 0xbd, 0x94, 0x62, 0x91, 0x9a, 0xf9, 0x1c, 0x6a, 0x9e, 0x57, 0x67, 0xbe,
	0x68, 0x8f, 0x39, 0xfc, 0xe2, 0x5e, 0xda, 0xd3, 0xb0, 0xd1, 0x4c, 0x7f, 0xd1, 0x6e, 0x8b, 0x1c,
	0x10, 0xa2, 0x14, 0x76, 0x06, 0x21, 0xb5, 0x30, 0xda, 0xe2, 0x93, 0x57, 0xd3, 0x43, 0x60, 0xc0,
	0xda, 0x52, 0x99, 0x9a, 0xdb, 0xe4, 0x7a, 0xdc, 0x38, 0x6b, 0x69, 0x1e, 0x5a, 0x5a, 0xb9, 0xda,
	0xbe, 0xa1, 0xd6, 0x86, 0x99, 0xd3, 0x39, 0xba, 0x1e, 0x44, 0xd5, 0xf0, 0x62, 0x7c, 0x3a, 0x38,
	0xcf, 0x52, 0xa0, 0x39, 0x17, 0x83, 0xe8, 0x1c, 0xa5, 0xbf, 0x91, 0x27, 0x60, 0xd9, 0x50, 0x0a,
	0x9a, 0xf2, 0x06, 0xd7, 0x8d, 0xf3, 0x06, 0x07, 0x26, 0xf1, 0x06, 0x07, 0x27, 0xf2, 0x06, 0x87,
	0xc6, 0x79, 0x03, 0x63, 0x94, 0x37, 0xb8, 0x5e, 0xf5, 0x06, 0xb4, 0x1f, 0xce, 0xc5, 0x78, 0x10,
	0x9c, 0x02, 0xdf, 0x6b, 0xb2, 0x7e, 0x48, 0x08, 0x0e, 0x04, 0xd8, 0x6c, 0xae, 0x25, 0x10, 0x5c,
	0x35, 0x9f, 0xa7, 0x88, 0x39, 0x6c, 0x54, 0x7b, 0xe2, 0x50, 0x24, 0x47, 0xf4, 0xc6, 0xb2, 0xa7,
	0x80, 0x74, 0x94, 0x2c, 0xa2, 0x78, 0xd4, 0xec, 0x0f, 0x5a, 0x65, 0x3a, 0x14, 0x7c, 0x35, 0xfd,
	0x53, 0x28, 0xbb, 0xa5, 0x75, 0x62, 0xbd, 0xc6, 0x4a, 0x72, 0xeb, 0x43, 0x94, 0xe9, 0x10, 0xb0,
	0x78, 0x85, 0x62, 0x13, 0x82, 0x80, 0x01, 0xf0, 0x12, 0x2c, 0x77, 0xd9, 0x06, 0x8b, 0x02, 0xa3,
	0x3c, 0x8a, 0xe1, 0xd9, 0xb0, 0x17, 0x01, 0x0f, 0x1e, 0x9c, 0x24, 0x84, 0xf2, 0x10, 0x25, 0xe0,
	0xc1, 0x96, 0xd8, 0x0a, 0x8c, 0xf2, 0x60, 0x32, 0xc1, 0xea, 0x99, 0x85, 0x26, 0x04, 0x91, 0xc1,
	0x61, 0x1f, 0x0e, 0x0e, 0x8b, 0x90, 0xcd, 0x7a, 0xcd, 0xfe, 0x40, 0xac, 0xb8, 0x93, 0xb2, 0x0c,
	0xcf, 0xe1, 0x80, 0x2d, 0xc2, 0x58, 0x2c, 0x52, 0x81, 0x14, 0x4b, 0xc8, 0xc1, 0xb0, 0xd8, 0xca,
	0x44, 0x05, 0x62, 0x2d, 0xac, 0x87, 0x81, 0x98, 0x96, 0x0a, 0x0c, 0xf7, 0x12, 0x70, 0xd8, 0xb4,
	0x54, 0x60, 0xd6, 0x87, 0xc8, 0xcd, 0xc8, 0x8f, 0xc8, 0xc1, 0xe3, 0x11, 0x10, 0xf2, 0x54, 0x0a,
	0x15, 0x0b, 0xe1, 0x91, 0x21, 0x46, 0x8c, 0xaf, 0x2b, 0x88, 0xac, 0xe3, 0x4a, 0xae, 0x42, 0x61,
	0x22, 0x57, 0x49, 0xad, 0x8b, 0xad, 0xaf, 0xe7, 0x94, 0x38, 0xcc, 0x50, 0xb9, 0x14, 0xe9, 0x35,
	0xf4, 0xff, 0x77, 0x26, 0x02, 0xbb, 0x63, 0xb3, 0xb0, 0x3b, 0x86, 0x20, 0x29, 0x13, 0xda, 0x97,
	0x36, 0x21, 0xeb, 0x51, 0x72, 0x34, 0xa5, 0x9d, 0x62, 0xd8, 0x09, 0xe3, 0x10, 0x6d, 0xba, 0x64,
	0x4d, 0x13, 0xeb, 0x31, 0x72, 0x4b, 0x4a, 0x5d, 0x82, 0x56, 0xee, 0xae, 0x64, 0x12, 0xf7, 0xf1,
	0xa8, 0x07, 0xbd, 0x56, 0xbf, 0xeb, 0x86, 0x17, 0x82, 0x41, 0x8b, 0x1f, 0x01, 0x2c, 0x8b, 0x1d,
	0xf6, 0x11, 0x9b, 0x1f, 0x62, 0xa3, 0x5b, 0xec, 0xbf, 0x1f, 0x25, 0xf3, 0xab, 0xc1, 0x56, 0x28,
	0x76, 0xe6, 0x69, 0xde, 0x29, 0x01, 0xd6, 0x02, 0xd8, 0x81, 0x08, 0x18, 0x60, 0x23, 0xdc, 0x3f,
	0xfc, 0x31, 0x1b, 0x77, 0xb5, 0x8a, 0x77, 0xe1, 0x1e, 0x72, 0x7d, 0x3d, 0x88, 0xa2, 0xb0, 0x25,
	0x23, 0x8d, 0xc8, 0x69, 0x87, 0x2b, 0xcc, 0xbb, 0x89, 0xb1, 0xd1, 0xa3, 0x6b, 0x7e, 0x14, 0xad,
	0x98, 0x6d, 0x0c, 0xc1, 0x29, 0xee, 0x7a, 0xd0, 0xdb, 0xdc, 0xd9, 0x1e, 0xca, 0x71, 0x87, 0xe0,
	0xe6, 0x0a, 0x39, 0xe0, 0xc5, 0x41, 0xdc, 0x6e, 0x96, 0x7a, 0xcd, 0x7e, 0x37, 0x14, 0xc9, 0xd6,
	0x68, 0xad, 0xa8, 0x24, 0xd6, 0x53, 0xe4, 0x18, 0xea, 0x3f, 0x6b, 0x82, 0xd5, 0x89, 0xb1, 0x3e,
	0x46, 0x08, 0x03, 0xa0, 0x4d, 0x2c, 0x04, 0xb1, 0x76, 0xc9, 0xad, 0x48, 0x4d, 0x2a, 0x07, 0xae,
	0xae, 0x31, 0x2c, 0xcc, 0x87, 0xe9, 0x64, 0xa6, 0xc3, 0x2c, 0x16, 0x9d, 0xa3, 0xbb, 0x20, 0x90,
	0xad, 0x02, 0xb9, 0x3d, 0x31, 0x53, 0x2f, 0x8c, 0x55, 0x05, 0x21, 0xf9, 0x91, 0x2e, 0x73, 0xe9,
	0xf5, 0x82, 0x55, 0x24, 0x56, 0x62, 0x72, 0x1a, 0x26, 0xb2, 0x0b, 0x23, 0xb9, 0xb0, 0x2d, 0x5b,
	0xb0, 0x29, 0x74, 0x4c, 0x64, 0xad, 0xc0, 0x56, 0x77, 0x02, 0xbe, 0x1a, 0x03, 0xb6, 0xde, 0x0f,
	0x27, 0x61, 0xf0, 0x7b, 0x63, 0xbb, 0x15, 0xc4, 0xa1, 0x79, 0x82, 0x1d, 0xe7, 0x44, 0x76, 0xab,
	0x35, 0x11, 0xa3, 0x04, 0xdb, 0xaa, 0x92, 0xc3, 0x5c, 0xcc, 0xd5, 0x9d, 0xa8, 0xdd, 0x4f, 0x94,
	0xb4, 0x40, 0xf6, 0xd5, 0xdb, 0x61, 0x33, 0x4c, 0xfa, 0x26, 0x8a, 0x30, 0x7d, 0x00, 0x55, 0x1e,
	0x09, 0x49, 0x80, 0x75, 0x12, 0x76, 0x9e, 0x31, 0x3f, 0xb9, 0x4d, 0xb9, 0xe7, 0x8e, 0xae, 0xc2,
	0x49, 0x1b, 0xfd, 0xed, 0x85, 0x9d, 0x8e, 0x10, 0xed, 0x08, 0x99, 0x05, 0x44, 0x21, 0x19, 0x2f,
	0x8d, 0x38, 0xa9, 0x5a, 0x23, 0x37, 0x70, 0xa1, 0x18, 0x1f, 0x2e, 0xd2, 0xde, 0x19, 0x39, 0xc9,
	0xa0, 0x3a, 0x1f, 0xde, 0x69, 0x6f, 0x23, 0x89, 0x78, 0x8e, 0xc7, 0x19, 0xf1, 0xec, 0x4e, 0x36,
	0x90, 0xc7, 0x0d, 0x58, 0x2d, 0xd8, 0xb7, 0x47, 0x6c, 0xa4, 0x40, 0x5a, 0x3e, 0x47, 0xc9, 0x3c,
	0x20, 0x7a, 0x9d, 0x7e, 0x2c, 0x54, 0x9e, 0x00, 0x50, 0x2b, 0x53, 0x4a, 0x2b, 0x15, 0x72, 0x23,
	0x17, 0x76, 0xa3, 0x17, 0x4e, 0x22, 0xee, 0xc8, 0x66, 0xac, 0x2a, 0x39, 0xc2, 0x85, 0x4e, 0xd8,
	0x5d, 0x8b, 0xd8, 0xd6, 0xc7, 0x72, 0x52, 0xbe, 0xed, 0xcd, 0x41, 0xd0, 0x0a, 0xaf, 0x52, 0x9d,
	0x34, 0x65, 0xe7, 0x1c, 0xc0, 0x9d, 0x30, 0x2d, 0x60, 0x10, 0x1e, 0xd1, 0x69, 0x75, 0x44, 0xff,
	0x59, 0x4e, 0x76, 0x4b, 0x48, 0x31, 0xa6, 0x5b, 0x3e, 0x99, 0xab, 0x86, 0x17, 0x64, 0xf8, 0xd8,
	0xbf, 0x7c, 0x22, 0x63, 0xd1, 0xa3, 0xe1, 0xba, 0x24, 0x48, 0xd9, 0x52, 0x27, 0xe1, 0xb4, 0xf8,
	0x18, 0x39, 0xa0, 0x54, 0xed, 0x29, 0xb1, 0x7d, 0x84, 0xdc, 0xcc, 0x55, 0x59, 0xeb, 0x85, 0x27,
	0xc3, 0xdd, 0x94, 0x42, 0x79, 0xf7, 0x65, 0x4c, 0x12, 0x45, 0xeb, 0xdb, 0x79, 0x72, 0x94, 0x0b,
	0x9a, 0xa2, 0xe4, 0x4a, 0xc8, 0x24, 0x35, 0x3f, 0x44, 0xe6, 0x0b, 0xfd, 0x28, 0xc6, 0x7a, 0x78,
	0xdf, 0x08, 0x3d, 0x68, 0xd9, 0x2f, 0x25, 0x1c, 0x98, 0x3a, 0x24, 0x47, 0xb3, 0x49, 0xf6, 0xb3,
	0xd5, 0x22, 0x6b, 0x80, 0x6d, 0x3f, 0xd8, 0x7b, 0x6e, 0x00, 0xf1, 0x60, 0x4d, 0x60, 0xae, 0x8b,
	0x8f, 0x93, 0x83, 0xaa, 0x04, 0x7b, 0x5a, 0x94, 0x3c, 0x49, 0x8c, 0x34, 0xfb, 0x3d, 0x8d, 0xda,
	0xf5, 0x70, 0x80, 0x0e, 0xc7, 0xff, 0x22, 0x3c, 0x9c, 0x20, 0x73, 0x76, 0x1c, 0x0f, 0x20, 0x27,
	0x3b, 0x42, 0x66, 0xe9, 0x6f, 0x69, 0x7f, 0xac, 0x44, 0x19, 0x9e, 0xc2, 0x0c, 0xa1, 0x60, 0x3d,
	0x9f, 0x23, 0xd3, 0x94, 0xd5, 0x50, 0x0a, 0x8a, 0x8e, 0x5d, 0xf2, 0xfa, 0x63, 0x97, 0x29, 0xdd,
	0xb1, 0xcb, 0x34, 0x3e, 0x76, 0xa1, 0x33, 0x2f, 0x2a, 0xf7, 0x9b, 0x5b, 0xfc, 0x0e, 0x02, 0x2f,
	0xc1, 0xc1, 0x08, 0x9d, 0xd0, 0x6c, 0x27, 0x65, 0xc6, 0xe5, 0x25, 0x6b, 0x05, 0xce, 0xa9, 0x78,
	0xcf, 0xb8, 0x25, 0x2d, 0x89, 0x6b, 0x0f, 0x2c, 0x00, 0x2c, 0xe8, 0x86, 0x92, 0x22, 0xf0, 0x0b,
	0x11, 0xd6, 0x8b, 0x39, 0xf0, 0x92, 0x50, 0x60, 0xfb, 0xb7, 0x3c, 0xe7, 0xbb, 0x87, 0x4c, 0xdb,
	0xad, 0xd6, 0x78, 0x3e, 0x80, 0x45, 0xbb, 0xcf, 0xb6, 0x91, 0x45, 0xae, 0x27, 0x8a, 0xe6, 0x32,
	0xd9, 0xc7, 0xc2, 0xa7, 0xb0, 0xae, 0x6c, 0x56, 0x02, 0xd1, 0xfa, 0x01, 0x08, 0x00, 0x14, 0x46,
	0x07, 0x23, 0x1a, 0xe3, 0xb1, 0xac, 0x0f, 0x24, 0x5d, 0xe0, 0xe8, 0x63, 0x5c, 0xcb, 0x61, 0x32,
	0x03, 0x88, 0x5c, 0x54, 0x56, 0xa0, 0xd0, 0x7a, 0xff, 0x02, 0x3f, 0x34, 0x99, 0x71, 0x59, 0xc1,
	0x72, 0xc0, 0x7d, 0x52, 0x42, 0x18, 0xa3, 0x8d, 0xb1, 0xee, 0xfd, 0x30, 0x99, 0xd9, 0xd8, 0x96,
	0x41, 0x8d, 0x15, 0xac, 0x0f, 0x82, 0xff, 0x53, 0xd8, 0x8c, 0x17, 0x72, 0x98, 0x8f, 0x34, 0x9c,
	0x29, 0x64, 0x38, 0xd6, 0x12, 0xa4, 0x17, 0xa0, 0xc3, 0xa0, 0xb7, 0x35, 0x56, 0x46, 0xab, 0x00,
	0xe9, 0x03, 0xc6, 0x1f, 0x23, 0x8c, 0xb0, 0xe1, 0xbc, 0xb4, 0x61, 0xeb, 0x01, 0x72, 0x13, 0x6f,
	0xb4, 0x18, 0x36, 0xfb, 0xdd, 0xed, 0x7e, 0x84, 0x3d, 0x21, 0x23, 0x4c, 0xdc, 0x19, 0x2f, 0x5a,
	0x3d, 0xb2, 0xc0, 0x5b, 0x46, 0x44, 0xd2, 0x09, 0xea, 0xa9, 0x68, 0xe2, 0xb5, 0x16, 0x2a, 0x3e,
	0x70, 0x4c, 0xe2, 0x25, 0xb0, 0xad, 0xcf, 0xe5, 0x12, 0xd5, 0xa8, 0x99, 0xd7, 0x22, 0x99, 0x63,
	0x00, 0xb9, 0x1a, 0x12, 0x65, 0x9a, 0x74, 0x56, 0x82, 0x76, 0xaf, 0x10, 0xc0, 0x5a, 0x89, 0x2f,
	0x27, 0x25, 0x04, 0x6e, 0x3e, 0xf5, 0xa3, 0xf8, 0x7e, 0x56, 0x64, 0x76, 0x3d, 0xe3, 0x2a, 0x30,
	0x81, 0xb3, 0x2c, 0x70, 0xa6, 0x25, 0xce, 0x72, 0x0a, 0xe7, 0x01, 0x81, 0x33, 0x23, 0x71, 0x04,
	0xcc, 0xfa, 0x78, 0x2e, 0x19, 0xab, 0x54, 0xaa, 0x77, 0x94, 0xcc, 0x57, 0xc3, 0x0b, 0x5c, 0x48,
	0x7e, 0x7d, 0x23, 0x01, 0xa0, 0x91, 0xcc, 0x2b, 0x23, 0x89, 0x55, 0x39, 0xb5, 0x27, 0x55, 0x16,
	0x21, 0x4d, 0x04, 0x13, 0xee, 0x37, 0xb7, 0x26, 0xc9, 0x22, 0x98, 0x2f, 0xcb, 0x63, 0x5f, 0x46,
	0x73, 0x3b, 0x31, 0x11, 0x80, 0xcb, 0x18, 0xc3, 0xcb, 0x62, 0xc3, 0xd6, 0x8f, 0x14, 0x69, 0x3d,
	0xe8, 0xb5, 0x9e, 0xed, 0xf7, 0x85, 0x40, 0xd6, 0xbd, 0xb0, 0x7c, 0x54, 0x6b, 0xe4, 0xf6, 0xbd,
	0xf4, 0x8d, 0x33, 0xc2, 0x03, 0x3e, 0x08, 0xdb, 0x55, 0x6c, 0x6a, 0x9e, 0x8d, 0x69, 0xd2, 0x54,
	0xdb, 0x0e, 0x7b, 0xe3, 0xa6, 0xd0, 0x43, 0xb0, 0x62, 0x1e, 0xa6, 0x1a, 0xdd, 0x1f, 0xeb, 0x24,
	0x79, 0x17, 0x6f, 0x8c, 0x05, 0xd2, 0x49, 0x13, 0x5c, 0xee, 0xff, 0xf3, 0x8a, 0xff, 0x2f, 0xc3,
	0x6d, 0x96, 0x21, 0x66, 0xe3, 0x55, 0xaa, 0xe5, 0xf6, 0x10, 0x64, 0x37, 0x9c, 0xdb, 0x56, 0xb8,
	0x3b, 0x59, 0x3a, 0x6b, 0x55, 0x21, 0xb5, 0x91, 0x42, 0x4c, 0x9a, 0xb6, 0x66, 0x89, 0xf1, 0x28,
	0xb9, 0x2d, 0x35, 0x1c, 0x2c, 0xfa, 0x7b, 0xc1, 0xf9, 0x71, 0xa9, 0xab, 0xf5, 0x18, 0xb9, 0x3d,
	0x35, 0x28, 0x98, 0x76, 0xcc, 0xd0, 0x3c, 0x4e, 0x2c, 0x6d, 0xc3, 0xec, 0x42, 0xe3, 0xb8, 0xa6,
	0x9f, 0x20, 0x77, 0x68, 0x9b, 0x16, 0xd4, 0x63, 0x1a, 0x7f, 0x83, 0x5d, 0x77, 0xac, 0x04, 0xed,
	0x8e, 0x17, 0xf6, 0x5a, 0x68, 0x11, 0xed, 0x86, 0xcd, 0xb0, 0x7d, 0x1e, 0x5d, 0x0a, 0x43, 0x10,
	0xea, 0xc5, 0x28, 0x09, 0x24, 0xe4, 0xfc, 0xae, 0x93, 0x28, 0x53, 0xff, 0x00, 0xbf, 0xdb, 0x71,
	0x47, 0xec, 0x78, 0x49, 0x00, 0xcd, 0xe6, 0x69, 0xa1, 0xd0, 0xef, 0xc5, 0x61, 0x2f, 0x86, 0x3c,
	0x64, 0xde, 0xc5, 0x20, 0x73, 0x85, 0xef, 0x4e, 0x9e, 0x0b, 0x5b, 0xcc, 0x5d, 0xcc, 0x4c, 0xb2,
	0xcd, 0xa1, 0x90, 0xd0, 0x40, 0xee, 0x2d, 0x17, 0x64, 0xaf, 0xa4, 0x16, 0x28, 0x4c, 0x6a, 0x81,
	0x95, 0xac, 0xc3, 0x89, 0x12, 0xf0, 0x8e, 0xf1, 0x47, 0xf3, 0xe4, 0x00, 0x85, 0xad, 0x04, 0x51,
	0xbb, 0x09, 0x39, 0x9b, 0xe6, 0xaa, 0x22, 0x52, 0x01, 0xfc, 0x86, 0x6b, 0x64, 0xa8, 0xeb, 0xac,
	0x40, 0x15, 0x4a, 0x25, 0xe1, 0x7b, 0x78, 0xac, 0xd7, 0x08, 0xc2, 0xae, 0x00, 0xd2, 0x52, 0xa9,
	0xc5, 0x8f, 0x28, 0x93, 0xb2, 0xa8, 0x43, 0xdb, 0xbf, 0x49, 0x99, 0xf9, 0x29, 0x37, 0x0c, 0x5a,
	0x7c, 0xf7, 0x97, 0x97, 0xcc, 0x3b, 0xc9, 0x81, 0x52, 0xb4, 0x16, 0xc6, 0x42, 0x2d, 0xfc, 0x1e,
	0x81, 0x0a, 0xe4, 0xe7, 0x2e, 0x09, 0xce, 0x7c, 0x72, 0xee, 0x22, 0x40, 0x56, 0x35, 0x51, 0xa4,
	0xb2, 0x1d, 0xfb, 0x08, 0x99, 0xa1, 0x30, 0x91, 0xa5, 0x69, 0x0f, 0xe9, 0x15, 0xd5, 0xb9, 0x0c,
	0xdf, 0x3a, 0x0e, 0x61, 0x91, 0xfe, 0x2e, 0x86, 0x71, 0xd0, 0xee, 0xa0, 0xeb, 0x78, 0x32, 0xfe,
	0xd2, 0x9f, 0xd6, 0x5f, 0x83, 0x60, 0xc8, 0xd1, 0x74, 0x69, 0xaf, 0x30, 0xa1, 0x3c, 0xbf, 0x5c,
	0x9a, 0x65, 0x3e, 0x53, 0x7b, 0x37, 0x9f, 0x0a, 0xc4, 0x3e, 0x2c, 0x25, 0xef, 0xf7, 0x83, 0x6a,
	0xbf, 0x8f, 0x65, 0xf5, 0x9b, 0x93, 0xf1, 0x4e, 0x3f, 0x0a, 0x9b, 0x6e, 0xf4, 0x37, 0x52, 0x3e,
	0xb4, 0x84, 0x12, 0x17, 0x66, 0x8a, 0x49, 0x0a, 0xc2, 0x8b, 0xd6, 0x9b, 0x39, 0xd8, 0x6f, 0xd3,
	0x13, 0xcb, 0x04, 0x46, 0x4f, 0x6d, 0x76, 0xd2, 0xca, 0x60, 0x59, 0xcc, 0x6a, 0xc6, 0x42, 0x6b,
	0x54, 0x2b, 0x4b, 0x0a, 0x94, 0x1f, 0x1c, 0x2a, 0xb0, 0xc5, 0xa7, 0x88, 0x39, 0x8c, 0xb4, 0xa7,
	0x35, 0xd3, 0x7d, 0xc8, 0x3c, 0xf0, 0x06, 0x74, 0xb6, 0x7e, 0xee, 0x47, 0x43, 0xa5, 0x6c, 0x3b,
	0x67, 0x93, 0x94, 0xc9, 0xf5, 0x9c, 0x24, 0xaa, 0x86, 0x17, 0xf8, 0xb2, 0xe3, 0xaa, 0x2d, 0xfa,
	0x3e, 0xf0, 0x1d, 0x7e, 0xd0, 0x09, 0x7b, 0xb1, 0xcc, 0x80, 0x17, 0xc9, 0x1c, 0x03, 0xc9, 0x34,
	0x4f, 0x94, 0xf9, 0x7e, 0x95, 0xa4, 0x40, 0xb7, 0x10, 0x33, 0x48, 0x64, 0xfa, 0x9d, 0xc7, 0xe9,
	0xf7, 0x11, 0xd0, 0x16, 0x43, 0xc2, 0x8e, 0x6b, 0x99, 0x10, 0x4e, 0xa9, 0xbb, 0x5f, 0xad, 0xe7,
	0xf5, 0x34, 0xe8, 0x11, 0xf3, 0xe2, 0x62, 0x9d, 0xa0, 0x0b, 0x4c, 0x0a, 0x1d, 0x69, 0xf4, 0xb2,
	0x3d, 0x57, 0xa0, 0x5b, 0xef, 0x81, 0x25, 0x0c, 0x2b, 0xb9, 0x61, 0x14, 0xc6, 0x68, 0xb2, 0xfb,
	0xc1, 0xa6, 0xb0, 0x08, 0x3f, 0xd8, 0xb4, 0x7a, 0xb0, 0x4c, 0x51, 0x50, 0xe5, 0x3d, 0x5b, 0x15,
	0x97, 0x3a, 0x2d, 0x9a, 0xa9, 0x8a, 0xcb, 0xaa, 0xac, 0x17, 0x18, 0x44, 0x31, 0xdc, 0x30, 0xde,
	0x19, 0xf4, 0xa4, 0x03, 0x98, 0x71, 0x31, 0x88, 0x6f, 0xdf, 0xfa, 0x74, 0xa5, 0x85, 0xcf, 0x00,
	0x3e, 0x02, 0x0b, 0x3a, 0x04, 0xe6, 0x42, 0xd0, 0x26, 0x77, 0x06, 0x03, 0xa8, 0x48, 0x74, 0x89,
	0x41, 0x34, 0xe8, 0xc1, 0xcf, 0x93, 0xe1, 0xae, 0xb8, 0x6b, 0x27, 0x01, 0xd4, 0x1b, 0xbb, 0x61,
	0x37, 0x68, 0xf7, 0xbc, 0xb0, 0xd9, 0xef, 0xb5, 0x22, 0xbe, 0x8a, 0x52, 0x81, 0xd6, 0xc3, 0x90,
	0x10, 0x02, 0x15, 0x3f, 0xb6, 0x62, 0x97, 0x7b, 0x93, 0x29, 0xa0, 0xb6, 0x2f, 0x8a, 0xd6, 0x4b,
	0x39, 0x62, 0xc0, 0x6f, 0xb8, 0x38, 0xc3, 0x48, 0x69, 0x8e, 0x2f, 0x61, 0x09, 0x8d, 0x02, 0x7b,
	0xa7, 0x8e, 0xaf, 0x0a, 0x83, 0x30, 0x88, 0x43, 0x08, 0x4f, 0xe2, 0xfa, 0x75, 0x02, 0xe1, 0xe7,
	0x7a, 0xc3, 0x9d, 0xda, 0xd3, 0xb9, 0x5e, 0xba, 0x77, 0xf2, 0x5c, 0xef, 0x7d, 0x90, 0xd7, 0x22,
	0xf6, 0x68, 0x38, 0x27, 0xd1, 0x81, 0xf5, 0x38, 0xe4, 0xb2, 0x43, 0x0c, 0xe4, 0x31, 0x00, 0x3a,
	0x58, 0xcb, 0xa5, 0x0f, 0xd6, 0xf8, 0x91, 0x33, 0xa3, 0x0e, 0x7a, 0x5b, 0xed, 0xde, 0x26, 0x9e,
	0x87, 0x1f, 0xcf, 0x91, 0x03, 0x49, 0x1d, 0xcc, 0xc5, 0x51, 0x57, 0xed, 0x8f, 0x11, 0xc2, 0x7e,
	0xa3, 0xd7, 0x0f, 0x08, 0x82, 0x0d, 0x60, 0x4a, 0x31, 0x00, 0x6a, 0x9e, 0x0c, 0x0f, 0xef, 0xed,
	0x60, 0x90, 0x75, 0x0a, 0x8d, 0x02, 0x96, 0x53, 0x86, 0x73, 0x0a, 0x1e, 0xe9, 0xfc, 0x94, 0x8e,
	0xb8, 0x0c, 0x9f, 0x27, 0x4e, 0xc5, 0x41, 0x70, 0x01, 0x4f, 0xa3, 0xff, 0x92, 0x03, 0x0f, 0x27,
	0xc1, 0xbc, 0x99, 0x8b, 0xe4, 0xc6, 0xd5, 0x41, 0x18, 0x52, 0xb8, 0x3a, 0x1d, 0x72, 0x23, 0x2f,
	0x97, 0xa4, 0xf9, 0x2c, 0x69, 0x99, 0xb0, 0x88, 0xa4, 0x6f, 0x60, 0x71, 0x9d, 0x2c, 0x66, 0x13,
	0xed, 0x31, 0x42, 0x89, 0x1e, 0xd3, 0x05, 0x2f, 0x72, 0xf7, 0x14, 0x84, 0xef, 0x7d, 0x8b, 0xb2,
	0x15, 0x25, 0xca, 0x60, 0x14, 0xd2, 0xdd, 0x67, 0x91, 0x80, 0x03, 0xeb, 0x77, 0x42, 0xb9, 0xb1,
	0xc7, 0x1c, 0x98, 0x04, 0xb1, 0x7b, 0xc8, 0xa2, 0x4b, 0xfc, 0xa9, 0x11, 0x82, 0x58, 0xef, 0xe1,
	0x0e, 0x6e, 0xa7, 0x79, 0x6e, 0xad, 0xdf, 0x69, 0xa1, 0x67, 0x4c, 0xa8, 0x41, 0xf8, 0x6d, 0x5d,
	0xca, 0x71, 0xaf, 0x97, 0xe0, 0x72, 0x09, 0x35, 0xc8, 0x70, 0x5b, 0x3f, 0x8c, 0xe1, 0xf1, 0x00,
	0xdf, 0x6e, 0xe4, 0xc5, 0xb4, 0x5b, 0x9e, 0x1a, 0x76, 0xcb, 0x8f, 0x92, 0x85, 0x6a, 0x78, 0x31,
	0x76, 0xc3, 0xb3, 0x83, 0x30, 0x3a, 0xa7, 0x5a, 0x00, 0xb3, 0xd9, 0xcc, 0x7a, 0xbe, 0xee, 0xa6,
	0x0d, 0xd1, 0xd5, 0x35, 0x36, 0xb6, 0xff, 0xc6, 0xce, 0x6d, 0xd5, 0xaa, 0xe4, 0x54, 0xea, 0x30,
	0x63, 0xc3, 0x79, 0x4a, 0x7b, 0xa3, 0xad, 0x69, 0xeb, 0xcc, 0x0d, 0x32, 0x47, 0x57, 0x52, 0xd5,
	0x9d, 0x24, 0x5b, 0x7a, 0x6f, 0x86, 0x5d, 0xea, 0x9a, 0x5c, 0x12, 0xb4, 0xfc, 0x00, 0x40, 0x14,
	0x17, 0x1f, 0x23, 0x07, 0x94, 0xaa, 0x3d, 0x19, 0xdd, 0x3d, 0x60, 0x74, 0xde, 0xb9, 0xfe, 0x36,
	0x76, 0x6f, 0x70, 0x33, 0xbc, 0xbf, 0x2d, 0x57, 0x33, 0xac, 0x64, 0x7d, 0x22, 0x47, 0xe6, 0xe0,
	0xa7, 0xee, 0xda, 0x7f, 0xd6, 0x29, 0xcb, 0x53, 0x6c, 0x4f, 0xc8, 0x0d, 0xa3, 0xfe, 0xce, 0xa0,
	0x19, 0xf2, 0x1b, 0xdc, 0xa3, 0xb3, 0x66, 0x85, 0x82, 0x5d, 0x2b, 0xdf, 0x95, 0x87, 0x30, 0xbc,
	0x64, 0xfd, 0x09, 0xf3, 0x06, 0x52, 0x7a, 0xb9, 0x18, 0xd3, 0x89, 0x2f, 0x8f, 0x12, 0x47, 0xec,
	0xb8, 0x89, 0xee, 0x89, 0x43, 0xff, 0x15, 0x72, 0x94, 0x9a, 0x0e, 0x35, 0x7f, 0xad, 0x79, 0x31,
	0x6b, 0x1c, 0x89, 0x23, 0x78, 0xd8, 0x3b, 0x71, 0x7f, 0x84, 0x89, 0x8e, 0xc4, 0xb1, 0x1a, 0x90,
	0xf2, 0x50, 0xe9, 0x56, 0x76, 0x76, 0x41, 0xc0, 0xd1, 0x63, 0x95, 0x39, 0x1c, 0x52, 0x99, 0x53,
	0x8a, 0x32, 0x3f, 0x02, 0x89, 0x92, 0xd2, 0xc0, 0x18, 0x75, 0x32, 0x03, 0xc8, 0x63, 0x03, 0xd0,
	0x71, 0xa6, 0xc1, 0x92, 0xf5, 0x45, 0x19, 0x44, 0x05, 0x66, 0xdd, 0x9b, 0x74, 0x2f, 0xe9, 0xfd,
	0x68, 0x53, 0x3c, 0x95, 0x88, 0x9b, 0x10, 0x8c, 0x11, 0x17, 0x16, 0xae, 0x68, 0x8c, 0xf8, 0xfe,
	0x9b, 0x0a, 0xb4, 0x96, 0x61, 0x3b, 0x97, 0x92, 0xa0, 0xa1, 0x40, 0xef, 0x46, 0x75, 0xb2, 0xbc,
	0x9d, 0x27, 0xd7, 0x41, 0xfc, 0x12, 0x2f, 0x23, 0xc5, 0xe6, 0x72, 0x0e, 0x1d, 0x90, 0x8c, 0x78,
	0xc4, 0x95, 0x0a, 0xd0, 0x53, 0x43, 0x01, 0x7a, 0x6c, 0x18, 0x96, 0x1c, 0xe0, 0x1a, 0x14, 0x5b,
	0xe7, 0x23, 0x88, 0x79, 0x37, 0x31, 0x58, 0xc9, 0x1e, 0x84, 0xbd, 0x80, 0x5d, 0xde, 0x62, 0x2b,
	0xfe, 0x21, 0x78, 0x0a, 0x77, 0x6d, 0x10, 0xb4, 0xc4, 0xcd, 0x9e, 0x21, 0xb8, 0x94, 0x8c, 0x1d,
	0x34, 0xcc, 0x61, 0xc9, 0x00, 0x64, 0x3e, 0x4c, 0x8e, 0xf0, 0x62, 0xea, 0x3a, 0x0b, 0xbf, 0x1b,
	0x96, 0x51, 0x2b, 0xa5, 0x80, 0x3d, 0x4d, 0xc6, 0x9e, 0x60, 0x29, 0x24, 0xdc, 0xaa, 0xb3, 0x8d,
	0xdc, 0xa0, 0xb7, 0x85, 0x92, 0x24, 0xb0, 0x3b, 0x0e, 0x42, 0xd1, 0x46, 0x81, 0xd1, 0x21, 0x85,
	0xcb, 0x99, 0xc9, 0x9e, 0x1d, 0x2b, 0x59, 0x1f, 0xcb, 0xb3, 0x5d, 0xdd, 0x84, 0x25, 0x37, 0xae,
	0x49, 0x78, 0x3e, 0x49, 0xe6, 0x85, 0x35, 0x08, 0x57, 0x73, 0x9b, 0xf6, 0x84, 0x08, 0x99, 0x8c,
	0x2b, 0x49, 0xcc, 0x25, 0x62, 0x7a, 0x61, 0xe7, 0xec, 0x7a, 0x3b, 0x8a, 0xfb, 0x83, 0x5d, 0xbf,
	0xbf, 0x8d, 0x0e, 0xdb, 0x34, 0x35, 0x6c, 0x17, 0xa7, 0x73, 0x16, 0xb0, 0xa6, 0xc5, 0x2e, 0x0e,
	0x2b, 0xd3, 0xd5, 0x03, 0xfd, 0xcd, 0xce, 0xfd, 0x98, 0x59, 0x48, 0x00, 0xdb, 0x3b, 0xe2, 0x85,
	0x65, 0x71, 0x01, 0x50, 0x42, 0xf8, 0x62, 0x06, 0x86, 0x1b, 0x07, 0xc6, 0x4f, 0xe6, 0x21, 0xae,
	0x23, 0xb8, 0xdc, 0x8e, 0x66, 0xa6, 0xc5, 0x5f, 0x09, 0x32, 0x7b, 0x3a, 0x4c, 0x66, 0x98, 0x11,
	0xf1, 0xe8, 0xc3, 0x2c, 0x47, 0x77, 0x88, 0x08, 0x89, 0xe8, 0x36, 0xea, 0x88, 0x28, 0x52, 0x6b,
	0x28, 0x06, 0xbb, 0xaa, 0xdb, 0x64, 0xdd, 0x19, 0x82, 0x9b, 0xf7, 0x91, 0x1b, 0xbc, 0x30, 0x88,
	0xfa, 0x3d, 0x15, 0x9d, 0x75, 0x4f, 0x57, 0x65, 0x3e, 0x45, 0x6e, 0xf6, 0xdb, 0xcd, 0xad, 0x30,
	0x8e, 0xb4, 0xfe, 0x99, 0x19, 0xff, 0x28, 0x14, 0xeb, 0x49, 0xd8, 0xe3, 0x05, 0x8d, 0x30, 0xeb,
	0xe4, 0xb7, 0xe8, 0x52, 0x0f, 0x0c, 0xb3, 0x52, 0x74, 0xeb, 0x2c, 0x39, 0xc8, 0x7e, 0x03, 0x41,
	0xbf, 0x13, 0xe2, 0xe3, 0xd7, 0x9c, 0x7a, 0xfc, 0x3a, 0xfc, 0xee, 0x4a, 0x7b, 0x86, 0x96, 0x68,
	0x78, 0x1a, 0x1d, 0x71, 0x7d, 0x2f, 0x0f, 0x1b, 0xca, 0x59, 0x82, 0xca, 0x0c, 0x32, 0x73, 0x31,
	0x91, 0xf2, 0x45, 0xf9, 0x71, 0xbe, 0x68, 0x6a, 0xc8, 0x17, 0x9d, 0x23, 0xfb, 0x51, 0xa3, 0xfc,
	0xae, 0x59, 0xd6, 0xc6, 0xd1, 0x68, 0x49, 0x97, 0x10, 0x8c, 0x1f, 0xd3, 0x23, 0x88, 0x3c, 0x00,
	0x9d, 0x41, 0x07, 0xa0, 0xf8, 0x5d, 0xe8, 0xac, 0xf2, 0x2e, 0x74, 0xf1, 0x59, 0x62, 0xa4, 0x19,
	0x6a, 0xb2, 0xa9, 0x13, 0x38, 0x9b, 0xda, 0xbf, 0x6c, 0xe9, 0x24, 0x57, 0x07, 0x73, 0xf8, 0x2e,
	0x31, 0x74, 0xab, 0x12, 0xc4, 0xcd, 0x73, 0xdc, 0x99, 0xc9, 0x9d, 0xe1, 0x9b, 0x45, 0xaf, 0x95,
	0xea, 0x09, 0x46, 0x66, 0xdc, 0x32, 0x2f, 0x35, 0x72, 0x53, 0xe3, 0x46, 0x6e, 0x7a, 0x68, 0xe4,
	0x12, 0x0e, 0x6c, 0x3e, 0xcf, 0x60, 0x0e, 0xa9, 0x78, 0x80, 0x43, 0x0c, 0x06, 0xa5, 0x23, 0xc6,
	0xbe, 0xa1, 0x88, 0x61, 0xdd, 0x4f, 0xde, 0x25, 0x54, 0xb0, 0xc6, 0xee, 0x64, 0xa0, 0x8b, 0x9b,
	0x89, 0x33, 0xc9, 0x21, 0x67, 0x62, 0xbd, 0x17, 0x16, 0xeb, 0x76, 0x33, 0x6e, 0x9f, 0x0f, 0xbd,
	0x38, 0xd8, 0x0c, 0x71, 0x36, 0x4b, 0x7d, 0x20, 0x85, 0x21, 0x87, 0x2d, 0x01, 0xd6, 0x05, 0x72,
	0x28, 0x45, 0x47, 0x1d, 0x30, 0x9b, 0xdd, 0x85, 0x73, 0x41, 0xa7, 0x13, 0xf6, 0x36, 0x43, 0xf9,
	0xc0, 0x4d, 0x53, 0x63, 0x3e, 0x48, 0x6e, 0x4c, 0x92, 0x19, 0x85, 0x84, 0x4d, 0x0e, 0x7d, 0xa5,
	0xf5, 0xc2, 0x14, 0x6c, 0x10, 0x0c, 0x09, 0xcd, 0x47, 0xfa, 0x2f, 0x73, 0xa9, 0xf9, 0xfe, 0x00,
	0x9d, 0x23, 0x4f, 0x64, 0xcd, 0x11, 0x3d, 0x8b, 0xa5, 0x04, 0xc2, 0x2f, 0xc9, 0xc8, 0x1e, 0x26,
	0x12, 0x73, 0xff, 0xf5, 0x20, 0xce, 0x89, 0x12, 0x89, 0x53, 0x95, 0x34, 0xf8, 0xad, 0x85, 0x71,
	0xbd, 0xdf, 0xee, 0xc5, 0x51, 0x31, 0xd8, 0xe5, 0x16, 0xa4, 0xc0, 0xcc, 0xe3, 0xe4, 0x50, 0x25,
	0xb8, 0xa8, 0x68, 0x81, 0xd9, 0x51, 0x1a, 0x6c, 0xde, 0x43, 0xae, 0xc7, 0xe5, 0xfa, 0xa0, 0xdd,
	0x14, 0x26, 0x35, 0x5c, 0xb1, 0x18, 0x90, 0x83, 0x6a, 0x77, 0x34, 0x13, 0xf3, 0xbd, 0xea, 0xc4,
	0xbc, 0x43, 0xa7, 0xae, 0xb4, 0xae, 0xd0, 0xcc, 0x2c, 0x92, 0x3b, 0x55, 0x23, 0x4a, 0x8d, 0xd8,
	0x64, 0xf6, 0xe4, 0x90, 0x77, 0xab, 0x43, 0x32, 0xc4, 0x45, 0x9e, 0x76, 0x8f, 0x60, 0x73, 0x0b,
	0xf3, 0x03, 0x92, 0x8d, 0x92, 0x8a, 0x5a, 0xef, 0x26, 0x77, 0xa8, 0xb2, 0xca, 0xd7, 0x21, 0x78,
	0x9f, 0xe8, 0x8b, 0x39, 0x72, 0xa7, 0xca, 0x26, 0x8d, 0xc7, 0x85, 0x39, 0xa3, 0x5e, 0xb2, 0x29,
	0x8c, 0xb7, 0x34, 0x3d, 0x23, 0xb8, 0xf6, 0xc2, 0x97, 0xa8, 0x8c, 0xe3, 0xa2, 0x4b, 0x88, 0x04,
	0x6a, 0x46, 0x6d, 0x49, 0x1d, 0xb5, 0x11, 0xf7, 0x7b, 0xe4, 0x50, 0x7d, 0x40, 0x38, 0xaa, 0x89,
	0xbf, 0xf3, 0x91, 0x19, 0x22, 0x91, 0xab, 0x83, 0xdf, 0xd6, 0x17, 0xf2, 0x84, 0xf0, 0xb7, 0x38,
	0xef, 0x38, 0x73, 0xf6, 0x00, 0xb7, 0xd6, 0xeb, 0xb4, 0x7b, 0x21, 0xbf, 0x12, 0x95, 0x94, 0xcd,
	0xbb, 0xc8, 0xc1, 0xda, 0xd9, 0xb3, 0xf4, 0xa7, 0x9a, 0xb2, 0xa4, 0xa0, 0xe6, 0x09, 0x72, 0x13,
	0x9b, 0x9f, 0x6b, 0xed, 0xf3, 0x21, 0x9b, 0x79, 0x6a, 0xa6, 0x92, 0x55, 0x0d, 0x2b, 0xb4, 0x7e,
	0x14, 0x95, 0x5a, 0x3c, 0x51, 0xe7, 0x25, 0xba, 0x34, 0xa2, 0xbf, 0xd6, 0xb7, 0xeb, 0xe1, 0xa0,
	0x19, 0xf6, 0x62, 0xf1, 0x6c, 0x43, 0x01, 0xca, 0x68, 0x4a, 0x70, 0x34, 0x3d, 0x4a, 0xe6, 0x13,
	0x07, 0xc0, 0xdf, 0x68, 0x48, 0x80, 0x75, 0x33, 0x38, 0x66, 0xa6, 0x4e, 0x37, 0x6c, 0xf6, 0xbb,
	0x5d, 0x79, 0x16, 0x6c, 0x9d, 0x02, 0x07, 0x38, 0x54, 0x29, 0x8f, 0x07, 0xd8, 0x18, 0x8f, 0x3c,
	0x1e, 0x90, 0x23, 0xe5, 0x0a, 0x74, 0x7e, 0x7a, 0xc1, 0x6a, 0xf0, 0x6c, 0x60, 0x27, 0x11, 0x18,
	0x2e, 0x9b, 0x62, 0xd0, 0x89, 0x9b, 0xe2, 0xe8, 0xd6, 0x03, 0x90, 0x21, 0xb3, 0x92, 0x1d, 0x6d,
	0x21, 0x17, 0x21, 0xc2, 0xb2, 0x38, 0x24, 0x92, 0x00, 0xeb, 0x41, 0x48, 0x9f, 0x11, 0x91, 0xf4,
	0x08, 0x23, 0xa8, 0x6e, 0x25, 0xb7, 0xe0, 0xa6, 0x78, 0xdc, 0x46, 0xdd, 0xfb, 0x00, 0x39, 0x86,
	0xd9, 0x62, 0x84, 0x3d, 0xa9, 0x14, 0x7d, 0xfe, 0x23, 0x51, 0x69, 0x00, 0x67, 0x85, 0x1a, 0xde,
	0x76, 0x4b, 0x44, 0xe6, 0x27, 0xc5, 0x9c, 0x44, 0xb7, 0xc9, 0xc7, 0xf1, 0x47, 0x14, 0xd6, 0x43,
	0xb0, 0x05, 0xc0, 0x9b, 0xd8, 0x84, 0x25, 0xf9, 0x24, 0xca, 0x74, 0x61, 0x23, 0x40, 0x21, 0xbb,
	0xe6, 0x51, 0x7d, 0x06, 0xf1, 0x1c, 0xea, 0x24, 0x47, 0x1a, 0xd3, 0x49, 0xc4, 0x16, 0x51, 0x58,
	0x0f, 0xc3, 0x6e, 0xa3, 0x30, 0xf9, 0xb3, 0x3b, 0xd1, 0x84, 0xbd, 0x7c, 0x04, 0xb6, 0x22, 0x55,
	0xba, 0x89, 0xac, 0x46, 0x6d, 0xb0, 0xdb, 0x3f, 0x7f, 0x55, 0x0d, 0x32, 0xba, 0x89, 0x1a, 0x7c,
	0x14, 0xf2, 0x5b, 0x46, 0x28, 0x3d, 0x10, 0x6a, 0x54, 0xbc, 0x73, 0x4c, 0x68, 0x13, 0x80, 0xd5,
	0x80, 0xa0, 0x37, 0x4c, 0x2b, 0x1b, 0xce, 0x26, 0xa6, 0xd9, 0x49, 0x29, 0x92, 0x54, 0xb0, 0xf2,
	0x9e, 0x73, 0x15, 0x18, 0xcf, 0x13, 0x79, 0x03, 0xc2, 0x49, 0x4d, 0x26, 0xdb, 0x33, 0xc8, 0x59,
	0x21, 0xd2, 0x89, 0x44, 0x53, 0x7c, 0x24, 0x7f, 0x39, 0x24, 0x7d, 0xe4, 0x51, 0xa4, 0x31, 0x2f,
	0x0c, 0x06, 0xcd, 0x73, 0xd4, 0xef, 0x8a, 0x59, 0xfd, 0x37, 0x91, 0x4e, 0x70, 0xad, 0x7c, 0x40,
	0xc4, 0xea, 0x28, 0x54, 0x5d, 0x30, 0x0e, 0x57, 0x4c, 0xb4, 0x03, 0x9a, 0x7e, 0x4c, 0x81, 0x5d,
	0x78, 0x44, 0x99, 0x61, 0x9f, 0xf3, 0x89, 0x1c, 0x39, 0x28, 0x9b, 0x11, 0x27, 0x51, 0xc9, 0x03,
	0x57, 0x71, 0x0f, 0x51, 0x3c, 0x6d, 0xd5, 0x4a, 0x9b, 0xcf, 0x92, 0xf6, 0x3e, 0x72, 0x83, 0x04,
	0xca, 0xe0, 0xc4, 0x82, 0xac, 0xae, 0xca, 0xfa, 0x20, 0x1a, 0x24, 0x24, 0x6b, 0x72, 0x24, 0x38,
	0x27, 0x60, 0x7c, 0xea, 0x5a, 0xd9, 0x53, 0x57, 0xf4, 0xc7, 0x4d, 0x68, 0xac, 0xc7, 0xe1, 0xb6,
	0x85, 0xac, 0x66, 0xc7, 0x95, 0x78, 0xcb, 0x69, 0x44, 0xdf, 0x15, 0x17, 0x9a, 0xa6, 0x4e, 0x04,
	0x24, 0x12, 0x3a, 0xa9, 0x0b, 0x95, 0x14, 0x4a, 0xe0, 0xc3, 0x1b, 0x36, 0x9f, 0x9f, 0x42, 0x91,
	0x4f, 0x59, 0x65, 0xdc, 0x09, 0x2f, 0xbf, 0xba, 0xed, 0x5e, 0xa0, 0xbc, 0x68, 0x51, 0x81, 0x70,
	0x9c, 0xdb, 0x6a, 0x71, 0x58, 0x72, 0x9c, 0x9b, 0x40, 0xcc, 0x47, 0xc9, 0x82, 0xb2, 0x62, 0xa8,
	0x86, 0x17, 0x63, 0x81, 0xcd, 0x46, 0x2b, 0xb3, 0x9e, 0x4e, 0x5b, 0xfe, 0xb3, 0xdc, 0xee, 0xb6,
	0x63, 0xb1, 0x3b, 0x8c, 0x61, 0x94, 0x3f, 0x2f, 0xbb, 0x61, 0xb4, 0xd3, 0x0d, 0x6b, 0xbd, 0xb0,
	0xd0, 0x8f, 0x62, 0x38, 0x18, 0x66, 0x2b, 0x86, 0xcc, 0x7a, 0x94, 0xf3, 0xcc, 0x8e, 0xce, 0x79,
	0xf6, 0xe9, 0x72, 0x9e, 0xe3, 0xe4, 0x10, 0x4b, 0x74, 0xe5, 0xfc, 0x65, 0xa9, 0x53, 0x1a, 0x4c,
	0xb3, 0x32, 0x3c, 0x3d, 0xf1, 0xfe, 0x11, 0xcb, 0xa6, 0xb2, 0xaa, 0x87, 0xde, 0x7b, 0x93, 0xe1,
	0xf7, 0xde, 0xd6, 0x23, 0x28, 0xf8, 0x7b, 0x61, 0x2c, 0xeb, 0xc6, 0xdd, 0xe2, 0x3b, 0x81, 0x92,
	0x82, 0x14, 0xe1, 0x98, 0x0b, 0x7c, 0x4f, 0xc1, 0x96, 0x96, 0x74, 0xc6, 0xf6, 0x9e, 0x5d, 0xe6,
	0xed, 0xe4, 0x56, 0xec, 0x6d, 0xc5, 0xfb, 0x74, 0xc4, 0x80, 0x36, 0x82, 0xbd, 0xaa, 0x8a, 0x22,
	0x7d, 0xab, 0xd4, 0x7e, 0x2e, 0x9d, 0x61, 0xae, 0x92, 0x39, 0x3f, 0x88, 0xb6, 0xb4, 0xb7, 0xe8,
	0xb4, 0x2f, 0x1e, 0x60, 0x97, 0x32, 0x0e, 0x62, 0xf1, 0xe0, 0x87, 0x15, 0x92, 0xdb, 0x36, 0x8c,
	0x95, 0x72, 0xdb, 0x26, 0xda, 0x52, 0x3e, 0xbb, 0xc5, 0xcb, 0xd6, 0xab, 0x39, 0x7e, 0xdd, 0x46,
	0x90, 0xe0, 0xeb, 0x36, 0x7a, 0x1a, 0xf3, 0x04, 0xab, 0x83, 0xf9, 0x3d, 0xc2, 0x07, 0x27, 0x3c,
	0x13, 0x6c, 0xb3, 0x48, 0x6e, 0x29, 0x06, 0xed, 0xce, 0x2e, 0x05, 0x8c, 0x38, 0x89, 0x1a, 0x8d,
	0x64, 0xad, 0xc2, 0x67, 0xca, 0x68, 0x35, 0xe8, 0x82, 0x67, 0x35, 0xf7, 0xf1, 0xaf, 0xdf, 0xe5,
	0xb2, 0x8f, 0xe6, 0x12, 0x89, 0xd8, 0x97, 0xf7, 0x96, 0xf8, 0x05, 0x21, 0xda, 0xcc, 0x05, 0x74,
	0x5c, 0x7d, 0x84, 0xcc, 0x52, 0xa0, 0x34, 0x26, 0x56, 0xb2, 0xee, 0xe5, 0x97, 0x80, 0x24, 0xbe,
	0xb4, 0x3e, 0x2d, 0xc1, 0x97, 0xf3, 0x64, 0xbf, 0x73, 0x71, 0xbb, 0xd3, 0x1f, 0x84, 0xda, 0xa1,
	0x95, 0x74, 0x79, 0x4c, 0x47, 0x27, 0x2c, 0xb5, 0xdf, 0x42, 0xd0, 0xdd, 0x8e, 0x0a, 0x41, 0xcf,
	0x83, 0x45, 0x19, 0xb5, 0xcb, 0x34, 0x58, 0x60, 0xd2, 0x61, 0x11, 0x98, 0xd3, 0x12, 0x13, 0x81,
	0xa5, 0xc1, 0xcc, 0x20, 0x83, 0x81, 0xa3, 0x00, 0x98, 0x29, 0x0f, 0xb2, 0x5b, 0x99, 0xb3, 0xfc,
	0x28, 0x00, 0xc1, 0x28, 0x0e, 0x5d, 0x20, 0x26, 0x38, 0xfc, 0xc3, 0x2e, 0x18, 0x86, 0x1f, 0x09,
	0xcc, 0xa9, 0x8f, 0x04, 0x86, 0x2e, 0xf7, 0xcc, 0x6b, 0x2e, 0xf7, 0x00, 0x16, 0x7a, 0xe0, 0x1c,
	0x2d, 0x10, 0xf6, 0x49, 0x1c, 0x05, 0x88, 0xae, 0x9d, 0xef, 0x57, 0xae, 0x9d, 0xdf, 0x04, 0x59,
	0x37, 0xd2, 0xb4, 0x98, 0x99, 0x97, 0xd9, 0x03, 0x37, 0xa5, 0x86, 0x8f, 0xd9, 0x43, 0x64, 0x86,
	0x96, 0x45, 0x5a, 0x7d, 0xab, 0xce, 0x5e, 0x30, 0x1d, 0xc3, 0x36, 0xdf, 0x47, 0x88, 0x17, 0xf7,
	0x07, 0xbb, 0x8c, 0x36, 0x3f, 0x19, 0x2d, 0x22, 0x61, 0x87, 0xee, 0x99, 0x96, 0xaf, 0xad, 0xb3,
	0xfe, 0x0a, 0x59, 0x90, 0xfd, 0xf3, 0xc2, 0x0e, 0xf6, 0x99, 0x9a, 0xab, 0x9f, 0xa5, 0x08, 0xda,
	0xe3, 0x67, 0x83, 0xa2, 0x88, 0xc7, 0x68, 0x4a, 0x7d, 0xfe, 0xd1, 0x80, 0xcd, 0xca, 0x34, 0xff,
	0x8c, 0x57, 0xfd, 0x57, 0xd3, 0x40, 0x11, 0x12, 0x78, 0xd1, 0x40, 0x1c, 0x0c, 0xe2, 0xcc, 0x9b,
	0xad, 0xd9, 0xfc, 0xad, 0x0f, 0x41, 0x3a, 0xaf, 0x72, 0x91, 0xf7, 0xe0, 0x26, 0x65, 0x83, 0xac,
	0x68, 0x4a, 0xb1, 0xa2, 0x55, 0x45, 0xcb, 0xdb, 0x61, 0xd8, 0xda, 0xd9, 0xbe, 0x1a, 0x31, 0xdb,
	0x8a, 0x36, 0x05, 0x9f, 0xab, 0x10, 0x74, 0xec, 0x9d, 0x11, 0x6b, 0x11, 0x8b, 0xac, 0x1e, 0x3a,
	0x5b, 0x2e, 0x16, 0x23, 0x7d, 0xbe, 0x7c, 0x75, 0xd6, 0xcf, 0x37, 0xf4, 0x78, 0xc5, 0xd0, 0xd9,
	0xb2, 0x65, 0xe3, 0x79, 0x88, 0x9f, 0xa3, 0x0c, 0xf7, 0x3a, 0xeb, 0x05, 0xc9, 0x0a, 0x9e, 0xb0,
	0xca, 0x5b, 0x94, 0xc9, 0x79, 0xac, 0xc2, 0x5a, 0x84, 0xf3, 0x58, 0x0b, 0x63, 0xd5, 0xbb, 0x4f,
	0x6c, 0xcf, 0xd6, 0x67, 0x72, 0xb8, 0xbb, 0x88, 0xd1, 0x9e, 0x67, 0xc6, 0x93, 0x64, 0x3f, 0xf3,
	0x64, 0x93, 0xdf, 0xb9, 0xc6, 0x04, 0xe6, 0x5d, 0xe4, 0xe0, 0x7a, 0x10, 0xb1, 0xe6, 0x61, 0xe3,
	0x92, 0x7f, 0x28, 0x39, 0x05, 0xe5, 0x07, 0xff, 0xc9, 0x0c, 0xe9, 0x0f, 0x76, 0xe5, 0x15, 0xde,
	0xac, 0x20, 0xa5, 0x68, 0x9c, 0xad, 0x92, 0x39, 0xc5, 0xe4, 0x9a, 0x2a, 0x92, 0x83, 0x85, 0x65,
	0xaf, 0x70, 0x2e, 0x88, 0xd1, 0x7d, 0x4c, 0xf1, 0x79, 0x63, 0x7e, 0xf2, 0xc7, 0x8b, 0xe9, 0xbb,
	0xe9, 0xd7, 0x25, 0x77, 0xd3, 0x2d, 0x87, 0x1c, 0xf2, 0x96, 0x0b, 0x8c, 0x8b, 0xbc, 0xa6, 0xbc,
	0x67, 0x36, 0xf7, 0x83, 0x15, 0x52, 0x36, 0x95, 0x68, 0xb3, 0xbe, 0x23, 0xdf, 0xce, 0x67, 0x32,
	0xb3, 0xbe, 0x9d, 0x23, 0x73, 0x94, 0x00, 0xee, 0x04, 0x21, 0xce, 0x39, 0x85, 0xf3, 0x35, 0x5d,
	0x7f, 0x98, 0xf8, 0x58, 0x8a, 0x6d, 0xc2, 0xce, 0x0c, 0x1f, 0x6c, 0xc1, 0xb6, 0x2b, 0xcb, 0x32,
	0xc5, 0x43, 0x07, 0x51, 0x56, 0x1e, 0x41, 0xec, 0x4b, 0x3d, 0x82, 0x50, 0x3f, 0x96, 0x34, 0x97,
	0xfe, 0x58, 0x92, 0x75, 0x16, 0x0c, 0x40, 0xd1, 0xd7, 0x58, 0xed, 0x4f, 0xb2, 0x06, 0x17, 0x0a,
	0x15, 0x6b, 0x70, 0x76, 0x10, 0x0f, 0xc7, 0x94, 0x38, 0x46, 0xff, 0xfe, 0x34, 0x99, 0x67, 0x67,
	0x97, 0xd7, 0xb6, 0x53, 0xcd, 0xbf, 0xe3, 0x3b, 0xad, 0x7c, 0xc7, 0xb7, 0xdc, 0xdf, 0xec, 0x73,
	0x5d, 0xc2, 0x6f, 0xaa, 0x66, 0xbb, 0xd7, 0xdf, 0xe9, 0x35, 0xc3, 0x2e, 0x1d, 0xe0, 0x59, 0xf6,
	0xc0, 0x06, 0x81, 0x68, 0x80, 0x2e, 0xb6, 0xa3, 0x6e, 0x3b, 0xbd, 0x00, 0x62, 0x6a, 0xd5, 0xd6,
	0x99, 0xf7, 0x90, 0xeb, 0x3d, 0xf8, 0x3e, 0x06, 0x26, 0x60, 0x9a, 0x1e, 0xae, 0x30, 0x1f, 0x26,
	0x47, 0xec, 0x68, 0xab, 0xd8, 0xef, 0x05, 0x71, 0xa8, 0xcb, 0x8d, 0x32, 0x6a, 0xe9, 0x0a, 0x52,
	0x80, 0xe1, 0x0e, 0x38, 0xa6, 0x64, 0xeb, 0xad, 0xcc, 0x7a, 0xba, 0xfe, 0x60, 0x75, 0xd5, 0x9d,
	0xae, 0xd8, 0xe1, 0x4e, 0x00, 0x34, 0xc5, 0xab, 0x04, 0x17, 0x25, 0x02, 0xff, 0x04, 0x11, 0x86,
	0xc1, 0x8e, 0xd9, 0x20, 0x8c, 0xda, 0x2d, 0xaa, 0x37, 0xf6, 0x65, 0x30, 0x09, 0xa0, 0x09, 0x5c,
	0x52, 0x80, 0x01, 0x3b, 0x08, 0x9a, 0x55, 0x81, 0xf0, 0xf8, 0x09, 0xbe, 0x61, 0x45, 0x1b, 0x61,
	0x9f, 0x04, 0x93, 0x00, 0xea, 0xe5, 0x92, 0x02, 0x5b, 0x47, 0xb3, 0x8f, 0x82, 0xa5, 0xa0, 0x30,
	0x0d, 0xfb, 0x51, 0x3b, 0x6e, 0xf7, 0x7b, 0xe2, 0xcb, 0x60, 0xa2, 0x6c, 0x95, 0x60, 0x5b, 0x1a,
	0x19, 0x19, 0x37, 0xe5, 0xfb, 0xc9, 0x34, 0xb5, 0x2f, 0xbe, 0x3a, 0xb8, 0x45, 0x67, 0xaf, 0x89,
	0x11, 0xba, 0x80, 0xca, 0x2f, 0xe8, 0x03, 0x94, 0xad, 0x7a, 0x51, 0x34, 0x3b, 0xc9, 0x8f, 0x7f,
	0xe6, 0x5d, 0xfa, 0xd3, 0xfa, 0xf9, 0x1c, 0x39, 0x00, 0x88, 0x2b, 0x41, 0x14, 0x5e, 0xfb, 0x89,
	0x0b, 0x58, 0xed, 0x34, 0xb2, 0x5a, 0x45, 0x6f, 0x33, 0xe3, 0xf5, 0x36, 0xab, 0xd3, 0x9b, 0x75,
	0x1a, 0x26, 0xba, 0xd2, 0x21, 0xae, 0x9d, 0x27, 0xc8, 0x1c, 0x95, 0x1a, 0xed, 0xd8, 0xdc, 0x9e,
	0xa9, 0x21, 0xd1, 0x45, 0x37, 0x21, 0xe1, 0x69, 0x08, 0xd4, 0x0e, 0x9d, 0x8f, 0x7c, 0x00, 0xd2,
	0x90, 0x74, 0xdd, 0x3b, 0xd3, 0xee, 0x8e, 0x1c, 0x21, 0x76, 0xa7, 0x1e, 0x2d, 0xe9, 0x01, 0x0a,
	0x2a, 0x67, 0xe3, 0x24, 0x01, 0x49, 0x2d, 0xa8, 0x99, 0xbf, 0x46, 0x48, 0x00, 0x69, 0x0f, 0xc1,
	0x3e, 0xa6, 0x8e, 0x41, 0x56, 0x57, 0xea, 0x51, 0x34, 0x7b, 0xd5, 0x56, 0x36, 0xfe, 0xbd, 0x86,
	0xb8, 0xdc, 0x0b, 0x26, 0x2d, 0x9c, 0x0f, 0xd3, 0xed, 0x06, 0xbb, 0xdb, 0xab, 0xd4, 0x70, 0x49,
	0x60, 0x37, 0x2b, 0xe8, 0x68, 0x3d, 0x59, 0x4e, 0xec, 0x66, 0xe9, 0xeb, 0xad, 0x63, 0xf0, 0xbd,
	0x2b, 0xd6, 0x3f, 0x78, 0x27, 0x99, 0x6a, 0xf6, 0x56, 0xf8, 0xa6, 0x95, 0xae, 0x9e, 0x7f, 0x82,
	0xfd, 0x3e, 0x34, 0x09, 0x43, 0xf9, 0x25, 0x77, 0x7c, 0x69, 0x25, 0xa7, 0x7e, 0xcc, 0xbc, 0x09,
	0xfb, 0xb3, 0x89, 0x6e, 0x2a, 0xfd, 0x56, 0xfb, 0xec, 0x2e, 0xba, 0x03, 0x57, 0x0d, 0x2f, 0xa4,
	0x07, 0x54, 0x81, 0x61, 0x1c, 0x34, 0xac, 0x0a, 0xcc, 0xfa, 0x91, 0x1c, 0xec, 0xac, 0x0e, 0xb5,
	0x22, 0xaf, 0xc5, 0xbd, 0x13, 0xcd, 0x4c, 0x90, 0xb6, 0xb3, 0xa7, 0x2c, 0x40, 0x81, 0xec, 0x0a,
	0xa7, 0x29, 0x28, 0xff, 0x90, 0x8f, 0xf7, 0xac, 0x47, 0x20, 0x1f, 0x1d, 0xa6, 0x43, 0xe1, 0x5a,
	0x4f, 0x88, 0x4c, 0x88, 0x7f, 0x5e, 0x56, 0x8c, 0xe5, 0xd7, 0x73, 0x64, 0x3f, 0x82, 0xbf, 0xf3,
	0x27, 0xc5, 0x89, 0xa7, 0x9e, 0x51, 0x3d, 0x35, 0xf5, 0x5a, 0xe5, 0x20, 0x8a, 0xd9, 0xb9, 0x31,
	0x7a, 0xbd, 0x99, 0x82, 0x9a, 0x0f, 0x92, 0x1b, 0x61, 0xab, 0x75, 0x28, 0xbe, 0xb2, 0x80, 0xac,
	0xaf, 0xa4, 0x2d, 0xbf, 0xbf, 0xdf, 0xee, 0xa1, 0x4f, 0xea, 0x27, 0x65, 0x6b, 0x03, 0xb2, 0x64,
	0xd1, 0xeb, 0x90, 0xa9, 0x83, 0xeb, 0xf0, 0xbd, 0x64, 0x1f, 0xfe, 0x2a, 0x6f, 0xc6, 0xd2, 0x08,
	0x69, 0xcc, 0x15, 0xf8, 0x58, 0xc9, 0x76, 0x84, 0x77, 0xd4, 0x2d, 0x4f, 0xce, 0xd3, 0xa4, 0x46,
	0x9e, 0xef, 0x71, 0xd0, 0xa4, 0xa7, 0x99, 0x1c, 0xdd, 0x5a, 0x56, 0x9a, 0xa3, 0x9d, 0x43, 0x06,
	0x94, 0x31, 0xcd, 0x1e, 0x50, 0x04, 0x61, 0x34, 0xd2, 0x78, 0x32, 0x88, 0x7c, 0xe9, 0xdd, 0xe1,
	0x6c, 0x12, 0x37, 0x35, 0xf2, 0x18, 0x8d, 0x65, 0xac, 0xec, 0xa4, 0x8f, 0xaf, 0x18, 0x92, 0xb2,
	0xf5, 0xc5, 0x9c, 0x0c, 0x0c, 0x88, 0x2d, 0x97, 0xe6, 0x43, 0x22, 0x5b, 0x5e, 0x76, 0x93, 0xfb,
	0x1c, 0x59, 0x37, 0x87, 0xf4, 0x2c, 0x96, 0x24, 0x3d, 0xbb, 0xc9, 0x81, 0x18, 0x8e, 0x12, 0x6c,
	0xf1, 0x09, 0x72, 0x28, 0x45, 0xba, 0xa7, 0xc7, 0x08, 0xc8, 0x27, 0x27, 0x32, 0x71, 0xf7, 0x77,
	0x1b, 0xd9, 0x5f, 0x0d, 0x2f, 0xf0, 0x4f, 0x05, 0x27, 0xef, 0xe4, 0x10, 0x08, 0x0f, 0x42, 0x5e,
	0x1d, 0x04, 0x94, 0x3c, 0x3f, 0xbd, 0xd3, 0x4e, 0x2c, 0x6b, 0x5d, 0x7a, 0x5a, 0x06, 0xe6, 0xfa,
	0xbb, 0x8f, 0xdc, 0xe0, 0x86, 0x3f, 0x08, 0xea, 0x18, 0xf6, 0xfc, 0xba, 0x2a, 0xdc, 0x40, 0xb9,
	0xbf, 0x99, 0xf8, 0x87, 0xbf, 0x41, 0xe6, 0x04, 0x4c, 0xfb, 0xbe, 0xbb, 0xdd, 0x95, 0xef, 0xbb,
	0xe9, 0x6c, 0x15, 0xaf, 0x62, 0xa6, 0xd0, 0xab, 0x18, 0xbc, 0x6c, 0x9a, 0x1e, 0xb9, 0x6c, 0x9a,
	0x49, 0x2f, 0x9b, 0x70, 0x07, 0x99, 0x58, 0x49, 0x07, 0x69, 0x66, 0x34, 0xf2, 0x83, 0x6a, 0x82,
	0x08, 0x72, 0xa8, 0x88, 0x6f, 0x12, 0xb2, 0xec, 0xa7, 0xbd, 0xd9, 0x2b, 0x09, 0x1b, 0xb6, 0xbe,
	0x99, 0x43, 0x79, 0x11, 0xaf, 0x49, 0x66, 0xe7, 0x4d, 0xc2, 0xbd, 0x94, 0xb4, 0xaa, 0xcc, 0xaa,
	0x66, 0x8f, 0x2c, 0xe9, 0xc2, 0x1c, 0x7f, 0x69, 0x11, 0x83, 0x68, 0xcf, 0x99, 0x84, 0xc8, 0x95,
	0x22, 0x08, 0xd5, 0x1a, 0x94, 0xe4, 0xa2, 0x26, 0x29, 0xc3, 0x7f, 0x2d, 0x8a, 0x00, 0x6d, 0x67,
	0x5b, 0xfc, 0x67, 0xa4, 0x04, 0x30, 0x71, 0x3e, 0xe8, 0xc9, 0xa0, 0xeb, 0x85, 0x71, 0xed, 0xec,
	0xd9, 0x76, 0x53, 0xfe, 0x77, 0x9e, 0xd1, 0x33, 0x7b, 0x81, 0xec, 0xf3, 0xc2, 0x18, 0xbd, 0xee,
	0x17, 0x45, 0x6b, 0x5b, 0xc6, 0x58, 0xcc, 0x74, 0x92, 0x63, 0xf7, 0x6c, 0xae, 0x4a, 0x20, 0x99,
	0x4a, 0xa5, 0xfc, 0x03, 0xe9, 0xce, 0x65, 0x8b, 0x7c, 0xca, 0x2d, 0x92, 0xb9, 0xd4, 0x7c, 0x9b,
	0xc3, 0x93, 0x2d, 0xa3, 0x35, 0x36, 0x51, 0x53, 0x0d, 0x62, 0x10, 0x3f, 0x83, 0x87, 0x36, 0x4f,
	0xb6, 0xc5, 0x37, 0xdb, 0x27, 0xbb, 0x94, 0xf0, 0xa8, 0x54, 0x10, 0x26, 0x9d, 0xf0, 0x22, 0xc4,
	0xc2, 0x30, 0xed, 0xf8, 0xae, 0x5a, 0xeb, 0x70, 0xe8, 0xcb, 0x32, 0x36, 0xf8, 0x9a, 0x54, 0xb2,
	0x2c, 0x13, 0x32, 0xc3, 0x17, 0xa4, 0x2f, 0x24, 0xe0, 0x84, 0x47, 0x0a, 0x6a, 0x95, 0xe0, 0x00,
	0x58, 0xcf, 0x89, 0x77, 0x61, 0x52, 0x56, 0x7d, 0x94, 0x46, 0xaa, 0xac, 0x78, 0x8f, 0xee, 0x22,
	0x07, 0x6b, 0x9d, 0x96, 0x86, 0x91, 0x0a, 0xd5, 0x34, 0x98, 0xd7, 0x36, 0x88, 0x22, 0xa6, 0x1b,
	0x36, 0x07, 0xd2, 0x8d, 0x66, 0x6f, 0xf9, 0xe0, 0x88, 0x99, 0xd0, 0xe8, 0xd3, 0x2d, 0x44, 0x54,
	0x46, 0x11, 0x53, 0x2e, 0xe5, 0xaf, 0xf6, 0x03, 0x8e, 0x1f, 0xc5, 0x91, 0x52, 0xb2, 0xbb, 0xda,
	0xef, 0x38, 0x9a, 0xcb, 0xe4, 0x30, 0xbc, 0xd2, 0x8a, 0xb6, 0xb4, 0x27, 0x10, 0xba, 0x3a, 0x2b,
	0x94, 0xce, 0x53, 0xed, 0xce, 0xa8, 0xbb, 0xdc, 0x59, 0xaf, 0xb7, 0x90, 0x68, 0x53, 0x6a, 0x57,
	0x7f, 0x18, 0xb9, 0xe2, 0x54, 0x3f, 0xdf, 0xd1, 0x86, 0xd4, 0xed, 0x90, 0xe9, 0xd4, 0x76, 0x88,
	0xf5, 0xd9, 0x9c, 0x9c, 0x67, 0x0c, 0x0a, 0x74, 0x89, 0x55, 0x32, 0x58, 0x4a, 0x9c, 0x14, 0x54,
	0x6d, 0x22, 0x9f, 0xde, 0x71, 0xc9, 0xf8, 0x6e, 0x65, 0xf6, 0xc7, 0x1a, 0xe1, 0x4b, 0xc8, 0x40,
	0x5e, 0x3b, 0xcf, 0x1f, 0x03, 0xcc, 0xb9, 0x08, 0xc2, 0xaf, 0xb8, 0x20, 0x99, 0x71, 0x06, 0xfa,
	0x42, 0x9e, 0x98, 0xaa, 0x01, 0x5d, 0xf3, 0x83, 0xeb, 0x71, 0x2f, 0x24, 0xc6, 0xbf, 0xf7, 0x92,
	0x3a, 0x98, 0xc9, 0xd2, 0xc1, 0xac, 0xaa, 0x83, 0x05, 0xc8, 0x96, 0xd1, 0x2e, 0xa7, 0x28, 0xca,
	0xeb, 0xee, 0xce, 0xc5, 0x76, 0x14, 0xab, 0x5b, 0x70, 0x9a, 0x1a, 0xeb, 0xaf, 0x4a, 0x2f, 0x8c,
	0xb5, 0xc5, 0x8d, 0x6d, 0x65, 0x68, 0x5f, 0xe2, 0xae, 0xcc, 0x0c, 0x43, 0xd1, 0xa8, 0x7e, 0x53,
	0x24, 0x7d, 0x9b, 0xdf, 0xfa, 0xc3, 0xbc, 0x9c, 0xd2, 0xc3, 0xb7, 0xe6, 0xf9, 0xff, 0x6c, 0xe3,
	0x37, 0x3e, 0x72, 0xf2, 0x7f, 0xb6, 0xf1, 0x5b, 0x1f, 0x47, 0xc9, 0xbc, 0xbc, 0xf1, 0xc1, 0x2d,
	0x4b, 0xde, 0xf6, 0x80, 0x47, 0xf9, 0xd1, 0x76, 0x70, 0xa1, 0x27, 0xed, 0x1e, 0x41, 0xcc, 0xe3,
	0xe4, 0x90, 0xdf, 0x8f, 0x83, 0x0e, 0x42, 0xe2, 0x97, 0xdb, 0x53, 0xe0, 0xcc, 0xa3, 0xca, 0x99,
	0xec, 0xa3, 0x4a, 0x78, 0x8d, 0x45, 0x3b, 0xc4, 0xce, 0x9a, 0xc5, 0x6b, 0xac, 0x04, 0x02, 0x07,
	0xd6, 0xbc, 0x85, 0x30, 0x6c, 0xd1, 0x45, 0x31, 0xfc, 0x5f, 0x88, 0x19, 0x37, 0x0d, 0xa6, 0xeb,
	0xbe, 0x42, 0xd0, 0xd3, 0x6c, 0x75, 0xb2, 0x41, 0xd5, 0x57, 0x5a, 0x0f, 0xcb, 0xbd, 0x0b, 0x76,
	0xe3, 0x3c, 0xf5, 0x9e, 0x4e, 0xde, 0xa4, 0xc9, 0xe1, 0x9b, 0x34, 0xd6, 0xa7, 0x73, 0xe4, 0x30,
	0x1e, 0x8e, 0x6e, 0xb0, 0x19, 0x8a, 0xff, 0xf0, 0xa4, 0x7b, 0x06, 0x99, 0x84, 0xda, 0x7c, 0x2a,
	0xab, 0x38, 0x46, 0x08, 0x0f, 0xcb, 0xe8, 0x1c, 0x40, 0x42, 0x32, 0xbe, 0x31, 0x29, 0x16, 0xcf,
	0x33, 0x68, 0xf1, 0x2c, 0xff, 0x21, 0xd7, 0x2c, 0xfe, 0x87, 0x5c, 0xd6, 0x5f, 0x97, 0x71, 0x33,
	0xd5, 0x45, 0x19, 0x12, 0x74, 0x7d, 0x34, 0x57, 0xc8, 0xbe, 0x62, 0x77, 0x13, 0x5d, 0xdb, 0x38,
	0x9e, 0x69, 0xd4, 0x29, 0x2d, 0xb8, 0x82, 0xd0, 0xba, 0x03, 0x3e, 0x32, 0x2d, 0x71, 0xe4, 0xd3,
	0x9e, 0xe0, 0x42, 0x92, 0x51, 0xbf, 0x90, 0x83, 0xaf, 0x48, 0x67, 0x62, 0x71, 0x39, 0xef, 0x26,
	0x86, 0x78, 0x63, 0x9e, 0x98, 0x22, 0x93, 0x78, 0x08, 0x3e, 0xc1, 0x67, 0x4d, 0x16, 0xc9, 0x1c,
	0xfc, 0xb7, 0x0b, 0x6a, 0x52, 0x3c, 0x45, 0x14, 0x65, 0xec, 0x1b, 0xf9, 0x3b, 0x04, 0xf9, 0xbd,
	0x15, 0xcb, 0x47, 0x19, 0x2b, 0xaa, 0xe4, 0x42, 0x3e, 0x4c, 0x8e, 0xb0, 0x67, 0xf7, 0x43, 0x76,
	0xc8, 0x44, 0xcd, 0xa8, 0xb5, 0x5c, 0x94, 0x95, 0x26, 0x5c, 0x79, 0x08, 0xb9, 0x5a, 0x9e, 0x1f,
	0x84, 0x7b, 0x50, 0x92, 0xe7, 0xf0, 0xeb, 0xde, 0x51, 0x1f, 0x11, 0xc8, 0x8d, 0xfe, 0x88, 0xc0,
	0xdd, 0x9f, 0x7a, 0x82, 0xcc, 0x38, 0x0d, 0xc7, 0x75, 0xcd, 0x39, 0x32, 0x5d, 0xad, 0x55, 0x1d,
	0xe3, 0x2f, 0x99, 0x37, 0x92, 0xb9, 0x52, 0xd5, 0x77, 0xdc, 0xaa, 0x5d, 0x36, 0xbe, 0x27, 0xfe,
	0x72, 0xe6, 0x7b, 0xc8, 0xd1, 0x7a, 0xd9, 0x3e, 0xe3, 0xb8, 0x0d, 0xbb, 0x50, 0x68, 0xd4, 0xdc,
	0x46, 0xdd, 0xf6, 0xbc, 0xd3, 0x35, 0xb7, 0x48, 0xc9, 0x6b, 0xae, 0xf1, 0xb6, 0x44, 0xbd, 0x85,
	0x18, 0x1c, 0xb5, 0x5a, 0xf3, 0x1b, 0xce, 0x33, 0x25, 0xcf, 0x37, 0xbe, 0x2b, 0xab, 0xef, 0x20,
	0x47, 0x04, 0xa7, 0xb2, 0xeb, 0xd8, 0xc5, 0x33, 0x8d, 0x72, 0x6d, 0xad, 0x54, 0x75, 0x8a, 0xc6,
	0x77, 0x24, 0xd2, 0xbb, 0xc9, 0x02, 0x47, 0xaa, 0xf9, 0xeb, 0x8e, 0xdb, 0xa8, 0x97, 0xed, 0x82,
	0xc3, 0x10, 0x8d, 0xb7, 0x24, 0xda, 0xad, 0xc4, 0xe4, 0x68, 0x7e, 0xed, 0xa4, 0x53, 0xe5, 0xb2,
	0x7c, 0x5b, 0x22, 0x7c, 0x3f, 0x39, 0xc6, 0x11, 0x3c, 0xa7, 0xec, 0x14, 0xfc, 0x86, 0xe7, 0xb8,
	0xa7, 0xb8, 0x64, 0xab, 0xb5, 0x8d, 0x6a, 0xd1, 0xf8, 0xbf, 0x3a, 0x64, 0x21, 0x19, 0x23, 0x72,
	0x8a, 0x9c, 0xcc, 0xf8, 0x96, 0x44, 0x3e, 0x46, 0xae, 0xe7, 0xc8, 0x25, 0xaf, 0x51, 0x5b, 0x5d,
	0x2d, 0x97, 0xaa, 0x8e, 0xf1, 0x17, 0xb2, 0xfe, 0xfb, 0xc8, 0x62, 0xd2, 0x72, 0xb5, 0xd8, 0xf0,
	0x6b, 0xb5, 0xc6, 0xaa, 0xeb, 0x3c, 0xbd, 0xe1, 0x54, 0xfd, 0xf2, 0x19, 0xe3, 0x9b, 0x3a, 0x7d,
	0xac, 0xd5, 0xca, 0x45, 0xa6, 0xb3, 0x6a, 0x6d, 0x63, 0x6d, 0xdd, 0xf8, 0x73, 0x89, 0x74, 0x17,
	0x79, 0x17, 0x47, 0x2a, 0x96, 0xec, 0x4a, 0xad, 0xaa, 0xe0, 0xfd, 0x99, 0xc4, 0xfb, 0x01, 0x72,
	0x5b, 0xd2, 0xaa, 0xdf, 0xb0, 0x7d, 0xdf, 0x2e, 0x9c, 0x6c, 0x54, 0x9c, 0xca, 0x8a, 0xe3, 0x7a,
	0x8d, 0x55, 0xbb, 0x54, 0x76, 0x8a, 0xc6, 0xd7, 0x5e, 0x4d, 0xd0, 0x97, 0xc8, 0xed, 0x08, 0xbd,
	0xe8, 0xac, 0x3a, 0x55, 0xcf, 0x49, 0xe3, 0x7f, 0x55, 0xe2, 0xdf, 0x46, 0x6e, 0x90, 0x9d, 0x66,
	0xe8, 0xa5, 0xea, 0x9a, 0xf1, 0x95, 0x57, 0x35, 0x3a, 0x5c, 0xb1, 0x7d, 0xbf, 0xec, 0x34, 0x5c,
	0xa7, 0x40, 0xad, 0x44, 0x2a, 0xfc, 0x4f, 0x25, 0xf2, 0x32, 0x79, 0xb7, 0x16, 0x79, 0xb5, 0xe6,
	0xae, 0x94, 0x8a, 0x45, 0xa7, 0xda, 0x28, 0x3a, 0x65, 0xc7, 0x77, 0x8c, 0xff, 0xad, 0x13, 0x59,
	0xa5, 0x29, 0xda, 0xbe, 0xdd, 0x28, 0x55, 0x4f, 0xd9, 0xe5, 0x52, 0xd1, 0x78, 0xf3, 0x55, 0x8d,
	0xe1, 0xfa, 0x8e, 0x5d, 0x49, 0xfa, 0x56, 0xf2, 0x1a, 0x4e, 0xa5, 0xee, 0x9f, 0x31, 0xfe, 0xd7,
	0xab, 0x1a, 0xa3, 0x03, 0x54, 0xff, 0x4c, 0xdd, 0x49, 0x38, 0xfe, 0x89, 0x44, 0xb3, 0xc8, 0x8d,
	0x42, 0x09, 0xbe, 0x53, 0x41, 0x3d, 0xfb, 0xd1, 0x57, 0x34, 0x6a, 0x00, 0x1c, 0xdf, 0x5e, 0x29,
	0x3b, 0x8d, 0x12, 0x56, 0xc3, 0xc7, 0x5f, 0xd1, 0x98, 0x0a, 0x63, 0xb8, 0x51, 0xc1, 0xa3, 0xfb,
	0x23, 0x99, 0x88, 0x20, 0x20, 0xc5, 0xac, 0xd8, 0x7e, 0x61, 0xdd, 0xf8, 0x5b, 0x12, 0xf1, 0x4e,
	0x72, 0x13, 0x47, 0x74, 0x9e, 0xde, 0x28, 0xd5, 0x1b, 0x5e, 0x99, 0xf2, 0x83, 0xfe, 0xfe, 0xf0,
	0x2b, 0x1a, 0xa3, 0x62, 0x58, 0x4a, 0x87, 0x3f, 0xa6, 0xc3, 0x83, 0x66, 0x57, 0x37, 0xbc, 0x52,
	0xad, 0x2a, 0xac, 0xe3, 0x39, 0x89, 0xf7, 0x00, 0xb9, 0x0b, 0xe3, 0x15, 0x6a, 0x1b, 0x55, 0x1f,
	0xf5, 0xa4, 0xe1, 0xd7, 0x38, 0xad, 0xf1, 0xd1, 0x57, 0x34, 0x16, 0x0b, 0x44, 0x1b, 0xf5, 0x35,
	0xd7, 0x2e, 0x3a, 0xaa, 0x2c, 0x3f, 0x24, 0xd1, 0xef, 0x25, 0x96, 0x0e, 0xdd, 0x75, 0x3c, 0xac,
	0xb3, 0xef, 0xbd, 0x3c, 0x8e, 0x3f, 0x68, 0xa4, 0x5a, 0x03, 0xa0, 0xf1, 0xf6, 0xcb, 0xe3, 0xf8,
	0x83, 0x75, 0xc9, 0xc1, 0xfb, 0xee, 0xcb, 0x59, 0x63, 0x22, 0x08, 0xb8, 0x76, 0xbe, 0x23, 0x11,
	0x1f, 0x27, 0xf7, 0x62, 0xc4, 0x5a, 0xd5, 0x69, 0x9c, 0x74, 0xce, 0x24, 0x04, 0x48, 0x4f, 0x15,
	0xdb, 0x77, 0xdc, 0x92, 0x5d, 0x36, 0xde, 0x7a, 0x59, 0x63, 0x74, 0x6e, 0xad, 0xec, 0x20, 0x51,
	0x7e, 0xee, 0x92, 0xc6, 0xe8, 0x00, 0x47, 0x63, 0x74, 0x3f, 0x7b, 0x49, 0xa3, 0x17, 0x40, 0x2e,
	0x3b, 0xa7, 0x9c, 0x72, 0xba, 0x9b, 0x3f, 0x73, 0x49, 0x33, 0x37, 0x10, 0x7a, 0xc9, 0x6b, 0x54,
	0xec, 0x67, 0x8c, 0x9f, 0xbe, 0xa4, 0x31, 0x3c, 0x40, 0x73, 0xed, 0xea, 0x49, 0x81, 0xf5, 0x53,
	0x97, 0x34, 0x73, 0x38, 0xc1, 0xda, 0xa8, 0xa7, 0x1b, 0xff, 0x87, 0x97, 0x34, 0x83, 0x02, 0xf8,
	0xa5, 0x2a, 0x9b, 0xa0, 0x05, 0xbb, 0x4a, 0x9d, 0x56, 0xa1, 0x56, 0xa9, 0xd7, 0x3c, 0xc7, 0x78,
	0xe9, 0x92, 0xc6, 0x62, 0x81, 0x40, 0xb5, 0xd8, 0x7f, 0xa0, 0x13, 0x84, 0xa3, 0x54, 0x1d, 0xa7,
	0x98, 0xd6, 0xf0, 0x4f, 0x5e, 0xd2, 0x0c, 0x36, 0xc7, 0xe7, 0xf2, 0x30, 0x33, 0xfd, 0x09, 0x89,
	0xf8, 0x20, 0xf9, 0x3e, 0x0d, 0x22, 0x1b, 0x91, 0x54, 0x3f, 0xff, 0xfe, 0x08, 0x71, 0x2a, 0x76,
	0xa9, 0x9a, 0x16, 0xe7, 0xc7, 0x2f, 0x69, 0x26, 0x1c, 0x6e, 0x45, 0x98, 0x0f, 0x9e, 0x10, 0x7f,
	0x4f, 0x12, 0xdd, 0x43, 0x6e, 0xd5, 0x34, 0x52, 0xb0, 0xdd, 0x62, 0xd2, 0x91, 0xbf, 0x3b, 0xa2,
	0x09, 0xa6, 0x21, 0xc7, 0xab, 0x6d, 0xb8, 0x05, 0x6c, 0xb5, 0xc6, 0x8b, 0x97, 0xb2, 0x8c, 0xb5,
	0xe4, 0x35, 0xca, 0xb5, 0xc2, 0x49, 0xa7, 0x68, 0xfc, 0x1d, 0x1d, 0x63, 0xa1, 0x43, 0xa7, 0xea,
	0xd7, 0xdc, 0x33, 0x78, 0x22, 0x78, 0x75, 0xbb, 0xe0, 0x18, 0x9f, 0xcc, 0x34, 0x9c, 0xb2, 0xb3,
	0xea, 0xb3, 0x99, 0x5c, 0x74, 0x6b, 0x75, 0x31, 0xbe, 0x3f, 0x26, 0xf1, 0x1f, 0x21, 0x77, 0x63,
	0xfc, 0x5a, 0xdd, 0xa9, 0x02, 0x11, 0xd0, 0x30, 0x1b, 0x46, 0x3d, 0x78, 0x41, 0x12, 0xde, 0x4f,
	0xee, 0xd4, 0x37, 0x24, 0x32, 0x03, 0xca, 0xca, 0x29, 0x1a, 0x7f, 0x5b, 0x27, 0x9b, 0xe7, 0xdb,
	0x6b, 0x19, 0x83, 0xfd, 0xdb, 0x2f, 0x25, 0xf8, 0x77, 0x93, 0x5b, 0x52, 0xd9, 0xc6, 0x6a, 0x69,
	0x6d, 0xdd, 0x6f, 0x14, 0xec, 0x4a, 0xdd, 0x2e, 0xad, 0x55, 0x8d, 0xdf, 0x7a, 0x49, 0x33, 0xb3,
	0x45, 0x6d, 0xa3, 0xb2, 0xe1, 0xf9, 0x8d, 0x7a, 0xc7, 0x3e, 0xd3, 0xa8, 0x3a, 0xcf, 0xf8, 0xc6,
	0x6f, 0xbe, 0xa4, 0x91, 0x3d, 0x69, 0x57, 0x92, 0x49, 0xa9, 0x8c, 0xdf, 0xd0, 0xf3, 0xaf, 0xfa,
	0x5c, 0x10, 0x7f, 0xdd, 0x91, 0xc2, 0xbc, 0xf6, 0x92, 0xc6, 0x80, 0x86, 0x3a, 0x2a, 0x0c, 0xe8,
	0xd7, 0x75, 0xdd, 0x64, 0xd8, 0xcc, 0x9a, 0x37, 0x2a, 0x8d, 0x72, 0xa9, 0x52, 0xf2, 0x9d, 0xa2,
	0xf1, 0xd9, 0x97, 0x34, 0xd3, 0xab, 0x62, 0x97, 0xca, 0x8d, 0xda, 0x29, 0xf8, 0xf5, 0x0c, 0x8b,
	0x24, 0xc6, 0x1f, 0xbc, 0xa8, 0x31, 0x30, 0x40, 0x94, 0xfa, 0xfd, 0x77, 0x2f, 0x6a, 0x02, 0x3f,
	0xc7, 0x61, 0xe9, 0xd0, 0xba, 0x53, 0x64, 0x4e, 0xff, 0xdf, 0xbe, 0xa8, 0xf1, 0x5a, 0x80, 0x0a,
	0x09, 0x1b, 0x37, 0xa6, 0x7f, 0xf3, 0xa2, 0x46, 0x49, 0x80, 0xe5, 0x3a, 0x05, 0xa7, 0xa4, 0xe6,
	0x92, 0x57, 0x32, 0x91, 0x65, 0xd6, 0x54, 0xa8, 0xd5, 0xca, 0xc5, 0xda, 0xe9, 0xaa, 0xf1, 0xfb,
	0x2f, 0x66, 0xf5, 0xdb, 0x2f, 0xd1, 0xbc, 0x86, 0x66, 0x8c, 0xe5, 0x5a, 0x75, 0xcd, 0xf8, 0x42,
	0x66, 0x9f, 0x0a, 0xb5, 0xaa, 0xef, 0x54, 0x7d, 0x89, 0xfa, 0xaf, 0x75, 0x7d, 0xf2, 0xed, 0xb2,
	0xc3, 0x03, 0x31, 0x13, 0xf3, 0x7f, 0x3e, 0xaf, 0x69, 0x99, 0x63, 0x29, 0x8e, 0xfd, 0x7f, 0x3c,
	0xaf, 0x31, 0x2a, 0x8e, 0xb8, 0x51, 0xc7, 0x33, 0x55, 0x38, 0x04, 0xe3, 0xbf, 0x3f, 0xaf, 0x99,
	0x10, 0x88, 0x84, 0x7a, 0x8f, 0xba, 0xeb, 0x9c, 0xe2, 0x30, 0xe3, 0xcb, 0xcf, 0xeb, 0x32, 0xb5,
	0xda, 0xe9, 0xf4, 0xb4, 0x70, 0x8a, 0xc6, 0x0f, 0x7d, 0x4c, 0x93, 0x33, 0x33, 0x54, 0xd9, 0xb7,
	0xef, 0x3d, 0xa7, 0xb1, 0x53, 0x89, 0x24, 0x1c, 0x8b, 0x6f, 0x57, 0x4a, 0x55, 0xdb, 0x78, 0x5b,
	0x62, 0xdf, 0x47, 0xee, 0x50, 0xb0, 0xd9, 0x1c, 0x18, 0xca, 0x5e, 0xbf, 0xfb, 0xdc, 0x58, 0x79,
	0xd7, 0x4b, 0x6b, 0xeb, 0x8e, 0xe7, 0x1b, 0xdf, 0x79, 0x4e, 0x37, 0x18, 0x80, 0x2a, 0x67, 0x99,
	0xf1, 0xd6, 0x73, 0x1a, 0x9b, 0xa1, 0x2b, 0x81, 0x75, 0xbb, 0x5a, 0x4c, 0xbb, 0x8f, 0x9f, 0x7c,
	0xeb, 0xed, 0x61, 0xff, 0x99, 0x20, 0xbb, 0xce, 0xaa, 0xeb, 0x78, 0xeb, 0xc2, 0xca, 0x4a, 0xd5,
	0x35, 0x30, 0xb4, 0x9f, 0x90, 0x44, 0x68, 0x79, 0xb0, 0x5e, 0xab, 0xeb, 0x5d, 0xd4, 0xaf, 0x7d,
	0xe3, 0xed, 0xe1, 0xfc, 0x1c, 0xd0, 0x51, 0x2a, 0x9b, 0xa2, 0xf9, 0x8c, 0xa4, 0x91, 0x91, 0x0f,
	0x68, 0x84, 0x4c, 0xba, 0x88, 0xf1, 0xab, 0x92, 0x0a, 0xad, 0x96, 0x92, 0x96, 0x24, 0xfb, 0x5f,
	0x91, 0x88, 0xc8, 0xf9, 0x48, 0x44, 0x35, 0x61, 0xfe, 0x65, 0x89, 0xfd, 0x10, 0x39, 0x3e, 0x84,
	0xbd, 0xb2, 0x71, 0x46, 0x2b, 0xcd, 0x2f, 0x49, 0x32, 0x69, 0xec, 0x92, 0xcc, 0xb5, 0xab, 0xc5,
	0x5a, 0x45, 0x75, 0x73, 0xaf, 0x64, 0x76, 0x60, 0x6d, 0xa3, 0xc4, 0xd7, 0x72, 0xef, 0xaf, 0x95,
	0xaa, 0xc6, 0xcb, 0xdf, 0xd0, 0x8c, 0x9b, 0xed, 0x3a, 0x55, 0xbb, 0x51, 0xab, 0x96, 0x85, 0xe7,
	0x87, 0x34, 0x9e, 0xce, 0x0f, 0xa8, 0x37, 0xfe, 0xd5, 0x9b, 0x9a, 0x71, 0x63, 0x44, 0x80, 0x29,
	0x9c, 0x0a, 0xf7, 0x54, 0xff, 0x52, 0xa2, 0xcb, 0x64, 0x8d, 0xa1, 0x97, 0x3c, 0xda, 0x63, 0xc7,
	0xa7, 0x6b, 0xb5, 0x7f, 0xf1, 0xa6, 0x46, 0x97, 0x0c, 0xcd, 0x73, 0x6c, 0xaf, 0x56, 0x55, 0xb0,
	0xff, 0x79, 0x36, 0xb6, 0x5f, 0x2a, 0x9c, 0x74, 0x7c, 0x25, 0xed, 0xbe, 0x2c, 0xb1, 0xef, 0x20,
	0x47, 0x20, 0xf9, 0x2b, 0x97, 0x3c, 0x5f, 0x4d, 0xe6, 0xff, 0xeb, 0x1f, 0x6b, 0xf4, 0x6c, 0x17,
	0xfc, 0xd2, 0x29, 0x87, 0x87, 0x88, 0xfa, 0x86, 0x5b, 0x58, 0xb7, 0x3d, 0x16, 0x26, 0x6a, 0x1b,
	0xbe, 0xf1, 0x9d, 0x3f, 0xd2, 0x98, 0xa4, 0x42, 0x52, 0x58, 0xb7, 0xcb, 0x65, 0xa7, 0xba, 0xc6,
	0x68, 0xa8, 0xef, 0x7a, 0xeb, 0x8f, 0xc6, 0x35, 0x33, 0x14, 0xff, 0xbf, 0x2d, 0x49, 0x64, 0x02,
	0xb9, 0xea, 0x96, 0x68, 0x38, 0x10, 0x93, 0xdb, 0x2e, 0x16, 0x8d, 0x6f, 0x7d, 0x29, 0xc1, 0x3b,
	0x4e, 0x6e, 0xce, 0xc0, 0xf3, 0x68, 0xbe, 0xf3, 0x17, 0x12, 0x53, 0xfa, 0x17, 0x8e, 0x99, 0xc4,
	0x68, 0x9a, 0xcf, 0xda, 0x1e, 0x53, 0x95, 0xf1, 0x4d, 0x49, 0x21, 0x9d, 0x06, 0xa7, 0x90, 0x13,
	0xe2, 0xcf, 0x25, 0x16, 0xca, 0x19, 0x19, 0xd6, 0x4a, 0xcd, 0xf3, 0xd2, 0xf3, 0xf3, 0xcf, 0xbe,
	0xa4, 0xb1, 0x3f, 0x8c, 0x9f, 0x72, 0x1d, 0xe0, 0x37, 0xbe, 0x21, 0x89, 0xa4, 0x67, 0xc2, 0x44,
	0x25, 0x8f, 0x19, 0x2e, 0x35, 0x94, 0xff, 0x33, 0x11, 0x72, 0xb5, 0xe4, 0xad, 0x3b, 0x45, 0xe3,
	0xeb, 0x12, 0x59, 0x3a, 0x51, 0x8c, 0x2c, 0x25, 0xff, 0x9a, 0x44, 0x95, 0x9b, 0x3d, 0x89, 0x3e,
	0xaa, 0x8e, 0xf1, 0xd5, 0x2f, 0x69, 0x6c, 0x03, 0xf3, 0xe2, 0xbe, 0x1e, 0x0f, 0xf4, 0x57, 0x24,
	0x8d, 0xcc, 0x24, 0x7c, 0x3a, 0x06, 0xb2, 0xe1, 0x4f, 0xbe, 0xa1, 0x99, 0x4e, 0x09, 0x0e, 0x5d,
	0x73, 0xc0, 0xce, 0xc4, 0x8f, 0xbd, 0xf1, 0xb6, 0x26, 0x28, 0x09, 0x34, 0xd7, 0x39, 0x6d, 0xbb,
	0x45, 0xe3, 0x85, 0x37, 0x34, 0xfd, 0x05, 0x24, 0x61, 0x2e, 0x0c, 0x91, 0x26, 0x94, 0x12, 0x55,
	0x66, 0x4e, 0x80, 0x0a, 0x51, 0x53, 0x69, 0xfb, 0x13, 0x6f, 0x68, 0xac, 0xcb, 0x79, 0xa6, 0x5e,
	0xae, 0xb9, 0x19, 0xe9, 0xe7, 0xa7, 0xaf, 0xbc, 0x3d, 0xbc, 0xa6, 0x12, 0x14, 0x9e, 0x53, 0x86,
	0xec, 0xcc, 0x63, 0xe1, 0xc9, 0xb3, 0x2b, 0x8e, 0xf1, 0x8b, 0xa3, 0x08, 0x36, 0x3c, 0xc7, 0x4d,
	0xb7, 0xf0, 0x0b, 0x57, 0x34, 0x76, 0x20, 0x08, 0x92, 0x6d, 0x35, 0xdf, 0x76, 0x69, 0x44, 0xff,
	0xd4, 0x24, 0xe2, 0xe0, 0x81, 0xfb, 0xc7, 0x57, 0x34, 0x71, 0x66, 0x88, 0x80, 0xb2, 0xc7, 0x54,
	0x3f, 0x7f, 0x45, 0xe3, 0x0a, 0x86, 0xa8, 0x68, 0xaa, 0x9b, 0x38, 0xa9, 0x4b, 0x13, 0x91, 0x28,
	0x7e, 0xed, 0x1f, 0x5d, 0xd1, 0x18, 0xa2, 0x20, 0x01, 0x8d, 0x6e, 0x54, 0xe9, 0x32, 0xa8, 0x51,
	0x5a, 0x4d, 0x14, 0xf0, 0x73, 0x57, 0x34, 0x86, 0x21, 0x68, 0x4a, 0x5e, 0xa3, 0x54, 0x4d, 0x06,
	0xfb, 0x67, 0x47, 0xe9, 0xaa, 0x5a, 0xe3, 0x21, 0x44, 0x58, 0xbc, 0xef, 0x18, 0x3f, 0x73, 0x45,
	0x13, 0x3e, 0x92, 0x2e, 0x50, 0x14, 0xd0, 0x91, 0x10, 0xe5, 0xa7, 0xaf, 0xe8, 0x52, 0x0b, 0x08,
	0x63, 0x62, 0xd8, 0x0a, 0xae, 0x63, 0xfb, 0x4e, 0xb1, 0x51, 0x73, 0x21, 0xaa, 0x39, 0x45, 0xe3,
	0xf7, 0x2e, 0x6b, 0xac, 0x95, 0x11, 0x09, 0xe4, 0xe2, 0x0a, 0xdf, 0x95, 0xfd, 0xfc, 0x65, 0x8d,
	0x7e, 0x64, 0x9c, 0xe4, 0x99, 0x19, 0x73, 0xca, 0x7e, 0x0d, 0x16, 0x58, 0xc6, 0xe7, 0x2e, 0x6b,
	0xbc, 0xa1, 0x1a, 0x5b, 0x9d, 0xa2, 0xf1, 0xbb, 0x97, 0x35, 0xfe, 0x98, 0x61, 0xa5, 0xac, 0xf3,
	0xf5, 0xcb, 0x9a, 0x19, 0x23, 0xf8, 0xb1, 0x1f, 0x1e, 0x6d, 0x9c, 0xa6, 0x7d, 0x95, 0x8a, 0x53,
	0x2d, 0x1a, 0xbf, 0x73, 0x59, 0x63, 0x08, 0xbc, 0x87, 0x74, 0x4c, 0xd7, 0x1c, 0xbf, 0x71, 0xba,
	0xe4, 0xaf, 0x37, 0xec, 0x0d, 0x7f, 0xbd, 0xe6, 0x96, 0xfc, 0x33, 0xc6, 0x3f, 0x95, 0x24, 0x0f,
	0x93, 0xf7, 0x28, 0x24, 0x4c, 0xed, 0xb0, 0x77, 0x4a, 0x07, 0x15, 0x54, 0x09, 0x3f, 0xa9, 0x0b,
	0xfd, 0x27, 0x97, 0x35, 0x23, 0x9c, 0xa2, 0xa3, 0x5d, 0x49, 0x08, 0x7e, 0xfb, 0xb2, 0x26, 0x38,
	0x33, 0x02, 0xaa, 0x19, 0x96, 0x6c, 0x27, 0xee, 0xfc, 0xb7, 0x2e, 0x6b, 0x66, 0x26, 0xc3, 0x2e,
	0x79, 0xc9, 0x18, 0xb3, 0xfd, 0x51, 0xe3, 0x37, 0xb3, 0x59, 0x33, 0x0c, 0x65, 0x09, 0xf7, 0x1b,
	0xd9, 0x3d, 0x86, 0xf1, 0xdc, 0xc8, 0x48, 0x35, 0x5f, 0xbb, 0xac, 0x31, 0x51, 0x46, 0x57, 0x77,
	0x1d, 0xaf, 0x54, 0xa4, 0xab, 0x06, 0x50, 0xf3, 0xd3, 0x1b, 0x25, 0xdf, 0xf8, 0xf5, 0x6c, 0x74,
	0x8f, 0xae, 0x6d, 0x4b, 0x55, 0x25, 0x7e, 0x7d, 0xf6, 0xb2, 0xc6, 0x59, 0x70, 0x74, 0xc7, 0x6f,
	0xd4, 0x56, 0x57, 0x4b, 0x05, 0xc7, 0x65, 0x09, 0x58, 0xd2, 0x9c, 0xf1, 0x6a, 0x36, 0x15, 0x48,
	0x52, 0x58, 0xb7, 0x69, 0x9a, 0x21, 0xe5, 0xf3, 0x9c, 0xf2, 0xaa, 0xf1, 0x6b, 0xd9, 0xa2, 0xb9,
	0x4e, 0xc1, 0xdd, 0x28, 0xf9, 0x8a, 0x68, 0x9f, 0xc9, 0x6e, 0xa4, 0x58, 0xab, 0xd2, 0xb1, 0x4e,
	0xf4, 0x85, 0xd4, 0xf5, 0xab, 0x97, 0x35, 0x51, 0x5f, 0x9d, 0xa2, 0x90, 0x76, 0x70, 0x1e, 0xc6,
	0xaf, 0x8c, 0xb1, 0x5d, 0x1a, 0x55, 0x44, 0x73, 0x35, 0xd6, 0x8f, 0x5f, 0xce, 0x9e, 0x4a, 0x54,
	0x0e, 0x49, 0x61, 0xfc, 0x52, 0x36, 0x73, 0x34, 0x9d, 0x39, 0x7b, 0xaf, 0x50, 0x73, 0x1d, 0xe3,
	0x95, 0xcb, 0x9a, 0xfc, 0x4a, 0x65, 0xce, 0xb2, 0xe5, 0xcb, 0x9a, 0xb4, 0x9a, 0xe3, 0xd9, 0x15,
	0xb4, 0x32, 0xfe, 0xf4, 0x08, 0x86, 0x14, 0xb1, 0xe4, 0xd1, 0x18, 0x55, 0x34, 0x7e, 0x31, 0x1b,
	0xaf, 0x5c, 0x5b, 0xab, 0x25, 0x2e, 0xfc, 0x17, 0xb2, 0xad, 0x9e, 0x0f, 0x3b, 0xb0, 0xe5, 0x09,
	0xf7, 0xa7, 0x46, 0xd8, 0x57, 0xf6, 0x0e, 0xd0, 0x7f, 0x7e, 0x3d, 0xdb, 0x88, 0x81, 0x0a, 0xf9,
	0x08, 0xbb, 0x68, 0xfc, 0xe1, 0xeb, 0x99, 0x6a, 0x66, 0xe8, 0xce, 0x33, 0xe9, 0x16, 0xfe, 0xd3,
	0xeb, 0x99, 0x13, 0x9d, 0x91, 0xe0, 0xbc, 0xed, 0x8b, 0xe3, 0xc4, 0x91, 0x4b, 0x55, 0x8a, 0xfe,
	0xc6, 0xeb, 0x63, 0xfa, 0x0c, 0xe8, 0xae, 0xe3, 0xd5, 0xed, 0xd3, 0x55, 0xea, 0x53, 0xa1, 0x13,
	0xff, 0x71, 0x1c, 0x55, 0x42, 0xb0, 0x51, 0x81, 0x11, 0x83, 0xac, 0xff, 0x3f, 0x8c, 0xeb, 0x3a,
	0xac, 0x52, 0x94, 0x79, 0xf5, 0xef, 0x5f, 0xd7, 0x2c, 0xfd, 0x86, 0xc4, 0xa3, 0x3e, 0xbb, 0x58,
	0x59, 0x83, 0x7d, 0x67, 0x48, 0xba, 0xff, 0xe0, 0x75, 0x6c, 0x70, 0x85, 0x75, 0xdb, 0x67, 0x7b,
	0x40, 0x15, 0x6f, 0x4d, 0xac, 0xa4, 0x1b, 0xc0, 0xff, 0x6b, 0xaf, 0xe1, 0x78, 0xad, 0x22, 0xae,
	0x9c, 0xf1, 0x1d, 0x4f, 0xda, 0xe6, 0x57, 0x5f, 0xc3, 0x33, 0x09, 0x50, 0x59, 0x5a, 0x45, 0xf1,
	0x21, 0x62, 0x54, 0xe1, 0x44, 0xd0, 0x31, 0xbe, 0xf2, 0x1a, 0x4e, 0x21, 0x01, 0xb3, 0xbe, 0x51,
	0x2e, 0xab, 0x2d, 0xff, 0xe9, 0x6b, 0x38, 0x12, 0x16, 0xd6, 0x6d, 0x77, 0xcd, 0x69, 0xd4, 0xdc,
	0xa2, 0xc8, 0xc0, 0xd8, 0xe1, 0xce, 0xef, 0x7d, 0xf9, 0x1b, 0xc8, 0xd0, 0x87, 0xb1, 0x84, 0xa1,
	0x7f, 0x5e, 0xe2, 0x7d, 0x3f, 0x39, 0xa6, 0xe0, 0x51, 0x4f, 0x6a, 0xfb, 0x1b, 0xae, 0x4c, 0x6c,
	0x3e, 0x27, 0x91, 0x2d, 0x72, 0xa3, 0x8a, 0x5c, 0xe5, 0x0d, 0xff, 0xae, 0xc4, 0x61, 0xbd, 0x55,
	0x70, 0xa8, 0x77, 0x2a, 0x9e, 0x61, 0x73, 0xf1, 0x75, 0x89, 0xc9, 0x74, 0x2d, 0x31, 0x4f, 0x39,
	0x6e, 0x69, 0xf5, 0x8c, 0x98, 0x5e, 0xbf, 0x93, 0x20, 0xde, 0x5d, 0x26, 0xb3, 0x95, 0x5a, 0x71,
	0xa3, 0xec, 0x98, 0x07, 0x09, 0x11, 0xa9, 0x0b, 0x9c, 0x56, 0x1f, 0x23, 0x8b, 0xac, 0x4c, 0xa7,
	0xe7, 0x46, 0x5d, 0xac, 0xd2, 0x21, 0x6f, 0x72, 0x8c, 0x9c, 0x69, 0x92, 0x83, 0x1c, 0xdf, 0x39,
	0x0d, 0x7b, 0x66, 0x46, 0xfe, 0xd9, 0xd9, 0xed, 0x41, 0x3f, 0xee, 0x3f, 0xf0, 0xff, 0x02, 0x00,
	0x00, 0xff, 0xff, 0xd2, 0xb1, 0x57, 0x0c, 0x8c, 0x95, 0x00, 0x00,
}

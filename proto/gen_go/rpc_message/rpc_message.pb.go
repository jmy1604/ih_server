// Code generated by protoc-gen-go. DO NOT EDIT.
// source: rpc_message.proto

/*
Package msg_rpc_message is a generated protocol buffer package.

It is generated from these files:
	rpc_message.proto

It has these top-level messages:
	G2GPlayerInfoRequest
	G2GPlayerInfoResponse
	G2GPlayerInfoNotify
	G2GPlayerBattleInfoRequest
	G2GPlayerBattleInfoResponse
	G2GFriendInfoRequest
	G2GFriendInfoResponse
	G2GFriendAskRequest
	G2GFriendAskResponse
*/
package msg_rpc_message

import proto "github.com/golang/protobuf/proto"
import fmt "fmt"
import math "math"

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion2 // please upgrade the proto package

type MSGID int32

const (
	MSGID_NONE                            MSGID = 0
	MSGID_G2G_PLAYER_INFO_REQUEST         MSGID = 1
	MSGID_G2G_PLAYER_INFO_RESPONSE        MSGID = 2
	MSGID_G2G_PLAYER_INFO_NOTIFY          MSGID = 3
	MSGID_G2G_PLAYER_BATTLE_INFO_REQUEST  MSGID = 4
	MSGID_G2G_PLAYER_BATTLE_INFO_RESPONSE MSGID = 5
	MSGID_G2G_FRIEND_INFO_REQUEST         MSGID = 100
	MSGID_G2G_FRIEND_INFO_RESPONSE        MSGID = 101
	MSGID_G2G_FRIEND_ASK_REQUEST          MSGID = 102
	MSGID_G2G_FRIEND_ASK_RESPONSE         MSGID = 103
	MSGID_G2G_FRIEND_AGREE_REQUEST        MSGID = 104
	MSGID_G2G_FRIEND_AGREE_RESPONSE       MSGID = 105
	MSGID_G2G_FRIEND_REFUSE_REQUEST       MSGID = 106
	MSGID_G2G_FRIEND_REFUSE_RESPONSE      MSGID = 107
	MSGID_G2G_FRIEND_REMOVE_REQUEST       MSGID = 108
	MSGID_G2G_FRIEND_REMOVE_RESPONSE      MSGID = 109
	MSGID_G2G_FRIEND_REMOVE_NOTIFY        MSGID = 110
	MSGID_G2G_FRIEND_GIVE_POINTS_REQUEST  MSGID = 111
	MSGID_G2G_FRIEND_GIVE_POINTS_RESPONSE MSGID = 112
	MSGID_G2G_FRIEND_GET_POINTS_REQUEST   MSGID = 113
	MSGID_G2G_FRIEND_GET_POINTS_RESPONSE  MSGID = 114
)

var MSGID_name = map[int32]string{
	0:   "NONE",
	1:   "G2G_PLAYER_INFO_REQUEST",
	2:   "G2G_PLAYER_INFO_RESPONSE",
	3:   "G2G_PLAYER_INFO_NOTIFY",
	4:   "G2G_PLAYER_BATTLE_INFO_REQUEST",
	5:   "G2G_PLAYER_BATTLE_INFO_RESPONSE",
	100: "G2G_FRIEND_INFO_REQUEST",
	101: "G2G_FRIEND_INFO_RESPONSE",
	102: "G2G_FRIEND_ASK_REQUEST",
	103: "G2G_FRIEND_ASK_RESPONSE",
	104: "G2G_FRIEND_AGREE_REQUEST",
	105: "G2G_FRIEND_AGREE_RESPONSE",
	106: "G2G_FRIEND_REFUSE_REQUEST",
	107: "G2G_FRIEND_REFUSE_RESPONSE",
	108: "G2G_FRIEND_REMOVE_REQUEST",
	109: "G2G_FRIEND_REMOVE_RESPONSE",
	110: "G2G_FRIEND_REMOVE_NOTIFY",
	111: "G2G_FRIEND_GIVE_POINTS_REQUEST",
	112: "G2G_FRIEND_GIVE_POINTS_RESPONSE",
	113: "G2G_FRIEND_GET_POINTS_REQUEST",
	114: "G2G_FRIEND_GET_POINTS_RESPONSE",
}
var MSGID_value = map[string]int32{
	"NONE": 0,
	"G2G_PLAYER_INFO_REQUEST":         1,
	"G2G_PLAYER_INFO_RESPONSE":        2,
	"G2G_PLAYER_INFO_NOTIFY":          3,
	"G2G_PLAYER_BATTLE_INFO_REQUEST":  4,
	"G2G_PLAYER_BATTLE_INFO_RESPONSE": 5,
	"G2G_FRIEND_INFO_REQUEST":         100,
	"G2G_FRIEND_INFO_RESPONSE":        101,
	"G2G_FRIEND_ASK_REQUEST":          102,
	"G2G_FRIEND_ASK_RESPONSE":         103,
	"G2G_FRIEND_AGREE_REQUEST":        104,
	"G2G_FRIEND_AGREE_RESPONSE":       105,
	"G2G_FRIEND_REFUSE_REQUEST":       106,
	"G2G_FRIEND_REFUSE_RESPONSE":      107,
	"G2G_FRIEND_REMOVE_REQUEST":       108,
	"G2G_FRIEND_REMOVE_RESPONSE":      109,
	"G2G_FRIEND_REMOVE_NOTIFY":        110,
	"G2G_FRIEND_GIVE_POINTS_REQUEST":  111,
	"G2G_FRIEND_GIVE_POINTS_RESPONSE": 112,
	"G2G_FRIEND_GET_POINTS_REQUEST":   113,
	"G2G_FRIEND_GET_POINTS_RESPONSE":  114,
}

func (x MSGID) String() string {
	return proto.EnumName(MSGID_name, int32(x))
}
func (MSGID) EnumDescriptor() ([]byte, []int) { return fileDescriptor0, []int{0} }

// 玩家信息请求
type G2GPlayerInfoRequest struct {
	PlayerId int32 `protobuf:"varint,1,opt,name=PlayerId" json:"PlayerId,omitempty"`
}

func (m *G2GPlayerInfoRequest) Reset()                    { *m = G2GPlayerInfoRequest{} }
func (m *G2GPlayerInfoRequest) String() string            { return proto.CompactTextString(m) }
func (*G2GPlayerInfoRequest) ProtoMessage()               {}
func (*G2GPlayerInfoRequest) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{0} }

func (m *G2GPlayerInfoRequest) GetPlayerId() int32 {
	if m != nil {
		return m.PlayerId
	}
	return 0
}

// 玩家信息返回
type G2GPlayerInfoResponse struct {
	PlayerId int32  `protobuf:"varint,1,opt,name=PlayerId" json:"PlayerId,omitempty"`
	UniqueId string `protobuf:"bytes,2,opt,name=UniqueId" json:"UniqueId,omitempty"`
	Account  string `protobuf:"bytes,3,opt,name=Account" json:"Account,omitempty"`
	Level    int32  `protobuf:"varint,4,opt,name=Level" json:"Level,omitempty"`
	Head     int32  `protobuf:"varint,5,opt,name=Head" json:"Head,omitempty"`
}

func (m *G2GPlayerInfoResponse) Reset()                    { *m = G2GPlayerInfoResponse{} }
func (m *G2GPlayerInfoResponse) String() string            { return proto.CompactTextString(m) }
func (*G2GPlayerInfoResponse) ProtoMessage()               {}
func (*G2GPlayerInfoResponse) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{1} }

func (m *G2GPlayerInfoResponse) GetPlayerId() int32 {
	if m != nil {
		return m.PlayerId
	}
	return 0
}

func (m *G2GPlayerInfoResponse) GetUniqueId() string {
	if m != nil {
		return m.UniqueId
	}
	return ""
}

func (m *G2GPlayerInfoResponse) GetAccount() string {
	if m != nil {
		return m.Account
	}
	return ""
}

func (m *G2GPlayerInfoResponse) GetLevel() int32 {
	if m != nil {
		return m.Level
	}
	return 0
}

func (m *G2GPlayerInfoResponse) GetHead() int32 {
	if m != nil {
		return m.Head
	}
	return 0
}

// 玩家信息通知
type G2GPlayerInfoNotify struct {
}

func (m *G2GPlayerInfoNotify) Reset()                    { *m = G2GPlayerInfoNotify{} }
func (m *G2GPlayerInfoNotify) String() string            { return proto.CompactTextString(m) }
func (*G2GPlayerInfoNotify) ProtoMessage()               {}
func (*G2GPlayerInfoNotify) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{2} }

// 玩家战斗信息请求
type G2GPlayerBattleInfoRequest struct {
	PlayerId int32 `protobuf:"varint,1,opt,name=PlayerId" json:"PlayerId,omitempty"`
}

func (m *G2GPlayerBattleInfoRequest) Reset()                    { *m = G2GPlayerBattleInfoRequest{} }
func (m *G2GPlayerBattleInfoRequest) String() string            { return proto.CompactTextString(m) }
func (*G2GPlayerBattleInfoRequest) ProtoMessage()               {}
func (*G2GPlayerBattleInfoRequest) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{3} }

func (m *G2GPlayerBattleInfoRequest) GetPlayerId() int32 {
	if m != nil {
		return m.PlayerId
	}
	return 0
}

// 玩家战斗信息返回
type G2GPlayerBattleInfoResponse struct {
}

func (m *G2GPlayerBattleInfoResponse) Reset()                    { *m = G2GPlayerBattleInfoResponse{} }
func (m *G2GPlayerBattleInfoResponse) String() string            { return proto.CompactTextString(m) }
func (*G2GPlayerBattleInfoResponse) ProtoMessage()               {}
func (*G2GPlayerBattleInfoResponse) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{4} }

// 好友信息请求
type G2GFriendInfoRequest struct {
	FriendId int32 `protobuf:"varint,1,opt,name=FriendId" json:"FriendId,omitempty"`
}

func (m *G2GFriendInfoRequest) Reset()                    { *m = G2GFriendInfoRequest{} }
func (m *G2GFriendInfoRequest) String() string            { return proto.CompactTextString(m) }
func (*G2GFriendInfoRequest) ProtoMessage()               {}
func (*G2GFriendInfoRequest) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{5} }

func (m *G2GFriendInfoRequest) GetFriendId() int32 {
	if m != nil {
		return m.FriendId
	}
	return 0
}

// 好友信息返回
type G2GFriendInfoResponse struct {
}

func (m *G2GFriendInfoResponse) Reset()                    { *m = G2GFriendInfoResponse{} }
func (m *G2GFriendInfoResponse) String() string            { return proto.CompactTextString(m) }
func (*G2GFriendInfoResponse) ProtoMessage()               {}
func (*G2GFriendInfoResponse) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{6} }

// 添加好友请求
type G2GFriendAskRequest struct {
	FriendId int32 `protobuf:"varint,1,opt,name=FriendId" json:"FriendId,omitempty"`
}

func (m *G2GFriendAskRequest) Reset()                    { *m = G2GFriendAskRequest{} }
func (m *G2GFriendAskRequest) String() string            { return proto.CompactTextString(m) }
func (*G2GFriendAskRequest) ProtoMessage()               {}
func (*G2GFriendAskRequest) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{7} }

func (m *G2GFriendAskRequest) GetFriendId() int32 {
	if m != nil {
		return m.FriendId
	}
	return 0
}

// 添加好友返回
type G2GFriendAskResponse struct {
}

func (m *G2GFriendAskResponse) Reset()                    { *m = G2GFriendAskResponse{} }
func (m *G2GFriendAskResponse) String() string            { return proto.CompactTextString(m) }
func (*G2GFriendAskResponse) ProtoMessage()               {}
func (*G2GFriendAskResponse) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{8} }

func init() {
	proto.RegisterType((*G2GPlayerInfoRequest)(nil), "msg.rpc_message.G2GPlayerInfoRequest")
	proto.RegisterType((*G2GPlayerInfoResponse)(nil), "msg.rpc_message.G2GPlayerInfoResponse")
	proto.RegisterType((*G2GPlayerInfoNotify)(nil), "msg.rpc_message.G2GPlayerInfoNotify")
	proto.RegisterType((*G2GPlayerBattleInfoRequest)(nil), "msg.rpc_message.G2GPlayerBattleInfoRequest")
	proto.RegisterType((*G2GPlayerBattleInfoResponse)(nil), "msg.rpc_message.G2GPlayerBattleInfoResponse")
	proto.RegisterType((*G2GFriendInfoRequest)(nil), "msg.rpc_message.G2GFriendInfoRequest")
	proto.RegisterType((*G2GFriendInfoResponse)(nil), "msg.rpc_message.G2GFriendInfoResponse")
	proto.RegisterType((*G2GFriendAskRequest)(nil), "msg.rpc_message.G2GFriendAskRequest")
	proto.RegisterType((*G2GFriendAskResponse)(nil), "msg.rpc_message.G2GFriendAskResponse")
	proto.RegisterEnum("msg.rpc_message.MSGID", MSGID_name, MSGID_value)
}

func init() { proto.RegisterFile("rpc_message.proto", fileDescriptor0) }

var fileDescriptor0 = []byte{
	// 471 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x09, 0x6e, 0x88, 0x02, 0xff, 0x8c, 0x94, 0xcf, 0x73, 0x93, 0x40,
	0x14, 0xc7, 0xa5, 0x0d, 0x5a, 0xdf, 0xc5, 0xb8, 0xf6, 0x07, 0xa6, 0xa6, 0x56, 0xbc, 0x74, 0x3c,
	0x74, 0xc6, 0x78, 0xf1, 0x4a, 0xa7, 0x0b, 0x32, 0xa6, 0x4b, 0x5c, 0x48, 0x67, 0x7a, 0x62, 0x62,
	0xd8, 0xc4, 0xd8, 0x04, 0x12, 0x20, 0xce, 0xf4, 0x9f, 0xf0, 0xe2, 0x3f, 0xec, 0xb8, 0x3c, 0x28,
	0x59, 0x62, 0xa7, 0xb7, 0xbc, 0xf7, 0xd9, 0xcf, 0xf7, 0x3d, 0xd8, 0x0c, 0xf0, 0x32, 0x5d, 0x8e,
	0xc3, 0x85, 0xc8, 0xb2, 0xd1, 0x54, 0x9c, 0x2f, 0xd3, 0x24, 0x4f, 0xc8, 0x8b, 0x45, 0x36, 0x3d,
	0xaf, 0xb5, 0xcd, 0x1e, 0xec, 0x3b, 0x3d, 0x67, 0x30, 0x1f, 0xdd, 0x89, 0xd4, 0x8d, 0x27, 0x09,
	0x17, 0xab, 0xb5, 0xc8, 0x72, 0xd2, 0x81, 0x3d, 0x6c, 0x46, 0x86, 0x76, 0xaa, 0x9d, 0xe9, 0xbc,
	0xaa, 0xcd, 0x3f, 0x1a, 0x1c, 0x28, 0x52, 0xb6, 0x4c, 0xe2, 0x4c, 0x3c, 0x64, 0xfd, 0x63, 0xc3,
	0x78, 0xb6, 0x5a, 0x0b, 0x37, 0x32, 0x76, 0x4e, 0xb5, 0xb3, 0xe7, 0xbc, 0xaa, 0x89, 0x01, 0xcf,
	0xac, 0xf1, 0x38, 0x59, 0xc7, 0xb9, 0xb1, 0x2b, 0x51, 0x59, 0x92, 0x7d, 0xd0, 0xfb, 0xe2, 0x97,
	0x98, 0x1b, 0x2d, 0x19, 0x57, 0x14, 0x84, 0x40, 0xeb, 0x8b, 0x18, 0x45, 0x86, 0x2e, 0x9b, 0xf2,
	0xb7, 0x79, 0x00, 0xaf, 0x36, 0x96, 0x62, 0x49, 0x3e, 0x9b, 0xdc, 0x99, 0x9f, 0xa1, 0x53, 0xb5,
	0x2f, 0x46, 0x79, 0x3e, 0x17, 0x8f, 0x7d, 0xcc, 0x2e, 0x1c, 0x6f, 0x35, 0x8b, 0x67, 0xc5, 0x37,
	0x67, 0xa7, 0x33, 0x11, 0x47, 0x4a, 0x24, 0x36, 0xab, 0xc8, 0xb2, 0x36, 0x8f, 0xe4, 0x8b, 0xab,
	0x3b, 0x18, 0xf6, 0x51, 0x2e, 0x5f, 0x00, 0x2b, 0xbb, 0x7d, 0x4c, 0xd6, 0x61, 0x6d, 0xbe, 0x54,
	0x8a, 0xa8, 0x0f, 0xbf, 0x75, 0xd0, 0xaf, 0x7c, 0xc7, 0xbd, 0x24, 0x7b, 0xd0, 0x62, 0x1e, 0xa3,
	0xed, 0x27, 0xe4, 0x18, 0x8e, 0x9c, 0x9e, 0x13, 0x0e, 0xfa, 0xd6, 0x0d, 0xe5, 0xa1, 0xcb, 0x6c,
	0x2f, 0xe4, 0xf4, 0xdb, 0x90, 0xfa, 0x41, 0x5b, 0x23, 0x6f, 0xc0, 0x68, 0x42, 0x7f, 0xe0, 0x31,
	0x9f, 0xb6, 0x77, 0x48, 0x07, 0x0e, 0x55, 0xca, 0xbc, 0xc0, 0xb5, 0x6f, 0xda, 0xbb, 0xc4, 0x84,
	0x93, 0x1a, 0xbb, 0xb0, 0x82, 0xa0, 0x4f, 0x37, 0xd3, 0x5b, 0xe4, 0x3d, 0xbc, 0xfd, 0xef, 0x19,
	0x1c, 0xa2, 0x97, 0xfb, 0xd9, 0xdc, 0xa5, 0xec, 0x72, 0x33, 0x21, 0x2a, 0xf7, 0xdb, 0x84, 0xa8,
	0x8a, 0x72, 0x3f, 0xa4, 0x96, 0xff, 0xb5, 0x32, 0x27, 0x4a, 0x6c, 0xc1, 0x50, 0x9c, 0x2a, 0xb1,
	0x96, 0xc3, 0x29, 0xad, 0xd4, 0x1f, 0xa4, 0x0b, 0xaf, 0xb7, 0x50, 0x94, 0x67, 0x0a, 0xe6, 0xd4,
	0x1e, 0xfa, 0xf7, 0xf6, 0x4f, 0x72, 0x22, 0xff, 0x74, 0x0d, 0x8c, 0xfa, 0x6d, 0x43, 0xbf, 0xf2,
	0xae, 0xef, 0xf5, 0x79, 0x43, 0x47, 0x8c, 0xfa, 0x42, 0x59, 0x1d, 0x39, 0xde, 0x4a, 0x5c, 0xde,
	0x0a, 0x52, 0xc7, 0xbd, 0xa6, 0xe1, 0xc0, 0x73, 0x59, 0xe0, 0x57, 0x13, 0x92, 0xf2, 0x56, 0xb6,
	0x9e, 0xc1, 0x31, 0x4b, 0xf2, 0x0e, 0xba, 0xf5, 0x43, 0x34, 0x50, 0x73, 0x56, 0xea, 0xac, 0xfa,
	0x11, 0x8c, 0x49, 0xbf, 0x3f, 0x95, 0x9f, 0x9e, 0x4f, 0x7f, 0x03, 0x00, 0x00, 0xff, 0xff, 0xf1,
	0x12, 0x8c, 0x32, 0x8f, 0x04, 0x00, 0x00,
}
